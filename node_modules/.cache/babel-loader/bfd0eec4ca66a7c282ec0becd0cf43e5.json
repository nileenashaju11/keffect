{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function webpackUniversalModuleDefinition(root, factory) {\n  if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"Draggable\", [], factory);else if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object') exports[\"Draggable\"] = factory();else root[\"Draggable\"] = factory();\n})(window, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __webpack_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __webpack_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __webpack_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && _typeof(value) === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __webpack_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) {\n          __webpack_require__.d(ns, key, function (key) {\n            return value[key];\n          }.bind(null, key));\n        }\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 66);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _AbstractEvent = __webpack_require__(64);\n\n      var _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _AbstractEvent2.default;\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _AbstractPlugin = __webpack_require__(60);\n\n      var _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _AbstractPlugin2.default;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _closest = __webpack_require__(51);\n\n      Object.defineProperty(exports, 'closest', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_closest).default;\n        }\n      });\n\n      var _requestNextAnimationFrame = __webpack_require__(49);\n\n      Object.defineProperty(exports, 'requestNextAnimationFrame', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_requestNextAnimationFrame).default;\n        }\n      });\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      /***/\n\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _SensorEvent = __webpack_require__(44);\n\n      Object.keys(_SensorEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _SensorEvent[key];\n          }\n        });\n      });\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _Sensor = __webpack_require__(47);\n\n      var _Sensor2 = _interopRequireDefault(_Sensor);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _Sensor2.default;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _DragEvent = __webpack_require__(14);\n\n      Object.keys(_DragEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _DragEvent[key];\n          }\n        });\n      });\n\n      var _DraggableEvent = __webpack_require__(13);\n\n      Object.keys(_DraggableEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _DraggableEvent[key];\n          }\n        });\n      });\n\n      var _Plugins = __webpack_require__(12);\n\n      Object.keys(_Plugins).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _Plugins[key];\n          }\n        });\n      });\n\n      var _Sensors = __webpack_require__(6);\n\n      Object.keys(_Sensors).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _Sensors[key];\n          }\n        });\n      });\n\n      var _Draggable = __webpack_require__(37);\n\n      var _Draggable2 = _interopRequireDefault(_Draggable);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _Draggable2.default;\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _Sensor = __webpack_require__(4);\n\n      Object.defineProperty(exports, 'Sensor', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_Sensor).default;\n        }\n      });\n\n      var _MouseSensor = __webpack_require__(46);\n\n      Object.defineProperty(exports, 'MouseSensor', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_MouseSensor).default;\n        }\n      });\n\n      var _TouchSensor = __webpack_require__(43);\n\n      Object.defineProperty(exports, 'TouchSensor', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_TouchSensor).default;\n        }\n      });\n\n      var _DragSensor = __webpack_require__(41);\n\n      Object.defineProperty(exports, 'DragSensor', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_DragSensor).default;\n        }\n      });\n\n      var _ForceTouchSensor = __webpack_require__(39);\n\n      Object.defineProperty(exports, 'ForceTouchSensor', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_ForceTouchSensor).default;\n        }\n      });\n\n      var _SensorEvent = __webpack_require__(3);\n\n      Object.keys(_SensorEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _SensorEvent[key];\n          }\n        });\n      });\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      /***/\n\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _SnappableEvent = __webpack_require__(18);\n\n      Object.keys(_SnappableEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _SnappableEvent[key];\n          }\n        });\n      });\n      /***/\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _CollidableEvent = __webpack_require__(23);\n\n      Object.keys(_CollidableEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _CollidableEvent[key];\n          }\n        });\n      });\n      /***/\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _SortableEvent = __webpack_require__(27);\n\n      Object.keys(_SortableEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _SortableEvent[key];\n          }\n        });\n      });\n      /***/\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _SwappableEvent = __webpack_require__(30);\n\n      Object.keys(_SwappableEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _SwappableEvent[key];\n          }\n        });\n      });\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _DroppableEvent = __webpack_require__(33);\n\n      Object.keys(_DroppableEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _DroppableEvent[key];\n          }\n        });\n      });\n      /***/\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _Announcement = __webpack_require__(62);\n\n      Object.defineProperty(exports, 'Announcement', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_Announcement).default;\n        }\n      });\n      Object.defineProperty(exports, 'defaultAnnouncementOptions', {\n        enumerable: true,\n        get: function get() {\n          return _Announcement.defaultOptions;\n        }\n      });\n\n      var _Focusable = __webpack_require__(59);\n\n      Object.defineProperty(exports, 'Focusable', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_Focusable).default;\n        }\n      });\n\n      var _Mirror = __webpack_require__(57);\n\n      Object.defineProperty(exports, 'Mirror', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_Mirror).default;\n        }\n      });\n      Object.defineProperty(exports, 'defaultMirrorOptions', {\n        enumerable: true,\n        get: function get() {\n          return _Mirror.defaultOptions;\n        }\n      });\n\n      var _Scrollable = __webpack_require__(53);\n\n      Object.defineProperty(exports, 'Scrollable', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_Scrollable).default;\n        }\n      });\n      Object.defineProperty(exports, 'defaultScrollableOptions', {\n        enumerable: true,\n        get: function get() {\n          return _Scrollable.defaultOptions;\n        }\n      });\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      /***/\n\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _DraggableEvent = __webpack_require__(63);\n\n      Object.keys(_DraggableEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _DraggableEvent[key];\n          }\n        });\n      });\n      /***/\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _DragEvent = __webpack_require__(65);\n\n      Object.keys(_DragEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _DragEvent[key];\n          }\n        });\n      });\n      /***/\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.defaultOptions = undefined;\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _AbstractPlugin = __webpack_require__(1);\n\n      var _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var onSortableSorted = Symbol('onSortableSorted');\n      /**\n       * SwapAnimation default options\n       * @property {Object} defaultOptions\n       * @property {Number} defaultOptions.duration\n       * @property {String} defaultOptions.easingFunction\n       * @property {Boolean} defaultOptions.horizontal\n       * @type {Object}\n       */\n\n      var defaultOptions = exports.defaultOptions = {\n        duration: 150,\n        easingFunction: 'ease-in-out',\n        horizontal: false\n      };\n      /**\n       * SwapAnimation plugin adds swap animations for sortable\n       * @class SwapAnimation\n       * @module SwapAnimation\n       * @extends AbstractPlugin\n       */\n\n      var SwapAnimation = /*#__PURE__*/function (_AbstractPlugin2$defa) {\n        _inherits(SwapAnimation, _AbstractPlugin2$defa);\n\n        var _super = _createSuper(SwapAnimation);\n\n        /**\n         * SwapAnimation constructor.\n         * @constructs SwapAnimation\n         * @param {Draggable} draggable - Draggable instance\n         */\n        function SwapAnimation(draggable) {\n          var _this;\n\n          _classCallCheck(this, SwapAnimation);\n\n          _this = _super.call(this, draggable);\n          /**\n           * SwapAnimation options\n           * @property {Object} options\n           * @property {Number} defaultOptions.duration\n           * @property {String} defaultOptions.easingFunction\n           * @type {Object}\n           */\n\n          _this.options = _extends({}, defaultOptions, _this.getOptions());\n          /**\n           * Last animation frame\n           * @property {Number} lastAnimationFrame\n           * @type {Number}\n           */\n\n          _this.lastAnimationFrame = null;\n          _this[onSortableSorted] = _this[onSortableSorted].bind(_assertThisInitialized(_this));\n          return _this;\n        }\n        /**\n         * Attaches plugins event listeners\n         */\n\n\n        _createClass(SwapAnimation, [{\n          key: \"attach\",\n          value: function attach() {\n            this.draggable.on('sortable:sorted', this[onSortableSorted]);\n          }\n          /**\n           * Detaches plugins event listeners\n           */\n\n        }, {\n          key: \"detach\",\n          value: function detach() {\n            this.draggable.off('sortable:sorted', this[onSortableSorted]);\n          }\n          /**\n           * Returns options passed through draggable\n           * @return {Object}\n           */\n\n        }, {\n          key: \"getOptions\",\n          value: function getOptions() {\n            return this.draggable.options.swapAnimation || {};\n          }\n          /**\n           * Sortable sorted handler\n           * @param {SortableSortedEvent} sortableEvent\n           * @private\n           */\n\n        }, {\n          key: onSortableSorted,\n          value: function value(_ref8) {\n            var _this2 = this;\n\n            var oldIndex = _ref8.oldIndex,\n                newIndex = _ref8.newIndex,\n                dragEvent = _ref8.dragEvent;\n            var source = dragEvent.source,\n                over = dragEvent.over;\n            cancelAnimationFrame(this.lastAnimationFrame); // Can be done in a separate frame\n\n            this.lastAnimationFrame = requestAnimationFrame(function () {\n              if (oldIndex >= newIndex) {\n                animate(source, over, _this2.options);\n              } else {\n                animate(over, source, _this2.options);\n              }\n            });\n          }\n        }]);\n\n        return SwapAnimation;\n      }(_AbstractPlugin2.default);\n\n      exports.default = SwapAnimation;\n      /**\n       * Animates two elements\n       * @param {HTMLElement} from\n       * @param {HTMLElement} to\n       * @param {Object} options\n       * @param {Number} options.duration\n       * @param {String} options.easingFunction\n       * @param {String} options.horizontal\n       * @private\n       */\n\n      function animate(from, to, _ref9) {\n        var duration = _ref9.duration,\n            easingFunction = _ref9.easingFunction,\n            horizontal = _ref9.horizontal;\n\n        for (var _i = 0, _arr = [from, to]; _i < _arr.length; _i++) {\n          var element = _arr[_i];\n          element.style.pointerEvents = 'none';\n        }\n\n        if (horizontal) {\n          var width = from.offsetWidth;\n          from.style.transform = \"translate3d(\".concat(width, \"px, 0, 0)\");\n          to.style.transform = \"translate3d(-\".concat(width, \"px, 0, 0)\");\n        } else {\n          var height = from.offsetHeight;\n          from.style.transform = \"translate3d(0, \".concat(height, \"px, 0)\");\n          to.style.transform = \"translate3d(0, -\".concat(height, \"px, 0)\");\n        }\n\n        requestAnimationFrame(function () {\n          for (var _i2 = 0, _arr2 = [from, to]; _i2 < _arr2.length; _i2++) {\n            var _element = _arr2[_i2];\n\n            _element.addEventListener('transitionend', resetElementOnTransitionEnd);\n\n            _element.style.transition = \"transform \".concat(duration, \"ms \").concat(easingFunction);\n            _element.style.transform = '';\n          }\n        });\n      }\n      /**\n       * Resets animation style properties after animation has completed\n       * @param {Event} event\n       * @private\n       */\n\n\n      function resetElementOnTransitionEnd(event) {\n        event.target.style.transition = '';\n        event.target.style.pointerEvents = '';\n        event.target.removeEventListener('transitionend', resetElementOnTransitionEnd);\n      }\n      /***/\n\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.defaultOptions = undefined;\n\n      var _SwapAnimation = __webpack_require__(15);\n\n      var _SwapAnimation2 = _interopRequireDefault(_SwapAnimation);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _SwapAnimation2.default;\n      exports.defaultOptions = _SwapAnimation.defaultOptions;\n      /***/\n    },\n    /* 17 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _AbstractPlugin = __webpack_require__(1);\n\n      var _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\n\n      var _SnappableEvent = __webpack_require__(7);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var onDragStart = Symbol('onDragStart');\n      var onDragStop = Symbol('onDragStop');\n      var onDragOver = Symbol('onDragOver');\n      var onDragOut = Symbol('onDragOut');\n      var onMirrorCreated = Symbol('onMirrorCreated');\n      var onMirrorDestroy = Symbol('onMirrorDestroy');\n      /**\n       * Snappable plugin which snaps draggable elements into place\n       * @class Snappable\n       * @module Snappable\n       * @extends AbstractPlugin\n       */\n\n      var Snappable = /*#__PURE__*/function (_AbstractPlugin2$defa2) {\n        _inherits(Snappable, _AbstractPlugin2$defa2);\n\n        var _super2 = _createSuper(Snappable);\n\n        /**\n         * Snappable constructor.\n         * @constructs Snappable\n         * @param {Draggable} draggable - Draggable instance\n         */\n        function Snappable(draggable) {\n          var _this3;\n\n          _classCallCheck(this, Snappable);\n\n          _this3 = _super2.call(this, draggable);\n          /**\n           * Keeps track of the first source element\n           * @property {HTMLElement|null} firstSource\n           */\n\n          _this3.firstSource = null;\n          /**\n           * Keeps track of the mirror element\n           * @property {HTMLElement} mirror\n           */\n\n          _this3.mirror = null;\n          _this3[onDragStart] = _this3[onDragStart].bind(_assertThisInitialized(_this3));\n          _this3[onDragStop] = _this3[onDragStop].bind(_assertThisInitialized(_this3));\n          _this3[onDragOver] = _this3[onDragOver].bind(_assertThisInitialized(_this3));\n          _this3[onDragOut] = _this3[onDragOut].bind(_assertThisInitialized(_this3));\n          _this3[onMirrorCreated] = _this3[onMirrorCreated].bind(_assertThisInitialized(_this3));\n          _this3[onMirrorDestroy] = _this3[onMirrorDestroy].bind(_assertThisInitialized(_this3));\n          return _this3;\n        }\n        /**\n         * Attaches plugins event listeners\n         */\n\n\n        _createClass(Snappable, [{\n          key: \"attach\",\n          value: function attach() {\n            this.draggable.on('drag:start', this[onDragStart]).on('drag:stop', this[onDragStop]).on('drag:over', this[onDragOver]).on('drag:out', this[onDragOut]).on('droppable:over', this[onDragOver]).on('droppable:out', this[onDragOut]).on('mirror:created', this[onMirrorCreated]).on('mirror:destroy', this[onMirrorDestroy]);\n          }\n          /**\n           * Detaches plugins event listeners\n           */\n\n        }, {\n          key: \"detach\",\n          value: function detach() {\n            this.draggable.off('drag:start', this[onDragStart]).off('drag:stop', this[onDragStop]).off('drag:over', this[onDragOver]).off('drag:out', this[onDragOut]).off('droppable:over', this[onDragOver]).off('droppable:out', this[onDragOut]).off('mirror:created', this[onMirrorCreated]).off('mirror:destroy', this[onMirrorDestroy]);\n          }\n          /**\n           * Drag start handler\n           * @private\n           * @param {DragStartEvent} event - Drag start event\n           */\n\n        }, {\n          key: onDragStart,\n          value: function value(event) {\n            if (event.canceled()) {\n              return;\n            }\n\n            this.firstSource = event.source;\n          }\n          /**\n           * Drag stop handler\n           * @private\n           * @param {DragStopEvent} event - Drag stop event\n           */\n\n        }, {\n          key: onDragStop,\n          value: function value() {\n            this.firstSource = null;\n          }\n          /**\n           * Drag over handler\n           * @private\n           * @param {DragOverEvent|DroppableOverEvent} event - Drag over event\n           */\n\n        }, {\n          key: onDragOver,\n          value: function value(event) {\n            var _this4 = this;\n\n            if (event.canceled()) {\n              return;\n            }\n\n            var source = event.source || event.dragEvent.source;\n\n            if (source === this.firstSource) {\n              this.firstSource = null;\n              return;\n            }\n\n            var snapInEvent = new _SnappableEvent.SnapInEvent({\n              dragEvent: event,\n              snappable: event.over || event.droppable\n            });\n            this.draggable.trigger(snapInEvent);\n\n            if (snapInEvent.canceled()) {\n              return;\n            }\n\n            if (this.mirror) {\n              this.mirror.style.display = 'none';\n            }\n\n            source.classList.remove(this.draggable.getClassNameFor('source:dragging'));\n            source.classList.add(this.draggable.getClassNameFor('source:placed')); // Need to cancel this in drag out\n\n            setTimeout(function () {\n              source.classList.remove(_this4.draggable.getClassNameFor('source:placed'));\n            }, this.draggable.options.placedTimeout);\n          }\n          /**\n           * Drag out handler\n           * @private\n           * @param {DragOutEvent|DroppableOutEvent} event - Drag out event\n           */\n\n        }, {\n          key: onDragOut,\n          value: function value(event) {\n            if (event.canceled()) {\n              return;\n            }\n\n            var source = event.source || event.dragEvent.source;\n            var snapOutEvent = new _SnappableEvent.SnapOutEvent({\n              dragEvent: event,\n              snappable: event.over || event.droppable\n            });\n            this.draggable.trigger(snapOutEvent);\n\n            if (snapOutEvent.canceled()) {\n              return;\n            }\n\n            if (this.mirror) {\n              this.mirror.style.display = '';\n            }\n\n            source.classList.add(this.draggable.getClassNameFor('source:dragging'));\n          }\n          /**\n           * Mirror created handler\n           * @param {MirrorCreatedEvent} mirrorEvent\n           * @private\n           */\n\n        }, {\n          key: onMirrorCreated,\n          value: function value(_ref10) {\n            var mirror = _ref10.mirror;\n            this.mirror = mirror;\n          }\n          /**\n           * Mirror destroy handler\n           * @param {MirrorDestroyEvent} mirrorEvent\n           * @private\n           */\n\n        }, {\n          key: onMirrorDestroy,\n          value: function value() {\n            this.mirror = null;\n          }\n        }]);\n\n        return Snappable;\n      }(_AbstractPlugin2.default);\n\n      exports.default = Snappable;\n      /***/\n    },\n    /* 18 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SnapOutEvent = exports.SnapInEvent = exports.SnapEvent = undefined;\n\n      var _AbstractEvent = __webpack_require__(0);\n\n      var _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      /**\n       * Base snap event\n       * @class SnapEvent\n       * @module SnapEvent\n       * @extends AbstractEvent\n       */\n\n\n      var SnapEvent = /*#__PURE__*/function (_AbstractEvent2$defau) {\n        _inherits(SnapEvent, _AbstractEvent2$defau);\n\n        var _super3 = _createSuper(SnapEvent);\n\n        function SnapEvent() {\n          _classCallCheck(this, SnapEvent);\n\n          return _super3.apply(this, arguments);\n        }\n\n        _createClass(SnapEvent, [{\n          key: \"dragEvent\",\n          get:\n          /**\n           * Drag event that triggered this snap event\n           * @property dragEvent\n           * @type {DragEvent}\n           * @readonly\n           */\n          function get() {\n            return this.data.dragEvent;\n          }\n          /**\n           * Snappable element\n           * @property snappable\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"snappable\",\n          get: function get() {\n            return this.data.snappable;\n          }\n        }]);\n\n        return SnapEvent;\n      }(_AbstractEvent2.default);\n\n      exports.SnapEvent = SnapEvent;\n      /**\n       * Snap in event\n       * @class SnapInEvent\n       * @module SnapInEvent\n       * @extends SnapEvent\n       */\n\n      SnapEvent.type = 'snap';\n\n      var SnapInEvent = /*#__PURE__*/function (_SnapEvent) {\n        _inherits(SnapInEvent, _SnapEvent);\n\n        var _super4 = _createSuper(SnapInEvent);\n\n        function SnapInEvent() {\n          _classCallCheck(this, SnapInEvent);\n\n          return _super4.apply(this, arguments);\n        }\n\n        return SnapInEvent;\n      }(SnapEvent);\n\n      exports.SnapInEvent = SnapInEvent;\n      /**\n       * Snap out event\n       * @class SnapOutEvent\n       * @module SnapOutEvent\n       * @extends SnapEvent\n       */\n\n      SnapInEvent.type = 'snap:in';\n      SnapInEvent.cancelable = true;\n\n      var SnapOutEvent = /*#__PURE__*/function (_SnapEvent2) {\n        _inherits(SnapOutEvent, _SnapEvent2);\n\n        var _super5 = _createSuper(SnapOutEvent);\n\n        function SnapOutEvent() {\n          _classCallCheck(this, SnapOutEvent);\n\n          return _super5.apply(this, arguments);\n        }\n\n        return SnapOutEvent;\n      }(SnapEvent);\n\n      exports.SnapOutEvent = SnapOutEvent;\n      SnapOutEvent.type = 'snap:out';\n      SnapOutEvent.cancelable = true;\n      /***/\n    },\n    /* 19 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _SnappableEvent = __webpack_require__(7);\n\n      Object.keys(_SnappableEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _SnappableEvent[key];\n          }\n        });\n      });\n\n      var _Snappable = __webpack_require__(17);\n\n      var _Snappable2 = _interopRequireDefault(_Snappable);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _Snappable2.default;\n      /***/\n    },\n    /* 20 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.defaultOptions = undefined;\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _AbstractPlugin = __webpack_require__(1);\n\n      var _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\n\n      var _utils = __webpack_require__(2);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var onMirrorCreated = Symbol('onMirrorCreated');\n      var onMirrorDestroy = Symbol('onMirrorDestroy');\n      var onDragOver = Symbol('onDragOver');\n      var resize = Symbol('resize');\n      /**\n       * ResizeMirror default options\n       * @property {Object} defaultOptions\n       * @type {Object}\n       */\n\n      var defaultOptions = exports.defaultOptions = {};\n      /**\n       * The ResizeMirror plugin resizes the mirror element to the dimensions of the draggable element that the mirror is hovering over\n       * @class ResizeMirror\n       * @module ResizeMirror\n       * @extends AbstractPlugin\n       */\n\n      var ResizeMirror = /*#__PURE__*/function (_AbstractPlugin2$defa3) {\n        _inherits(ResizeMirror, _AbstractPlugin2$defa3);\n\n        var _super6 = _createSuper(ResizeMirror);\n\n        /**\n         * ResizeMirror constructor.\n         * @constructs ResizeMirror\n         * @param {Draggable} draggable - Draggable instance\n         */\n        function ResizeMirror(draggable) {\n          var _this5;\n\n          _classCallCheck(this, ResizeMirror);\n\n          _this5 = _super6.call(this, draggable);\n          /**\n           * ResizeMirror options\n           * @property {Object} options\n           * @type {Object}\n           */\n\n          _this5.options = _extends({}, defaultOptions, _this5.getOptions());\n          /**\n           * ResizeMirror remembers the last width when resizing the mirror\n           * to avoid additional writes to the DOM\n           * @property {number} lastWidth\n           */\n\n          _this5.lastWidth = 0;\n          /**\n           * ResizeMirror remembers the last height when resizing the mirror\n           * to avoid additional writes to the DOM\n           * @property {number} lastHeight\n           */\n\n          _this5.lastHeight = 0;\n          /**\n           * Keeps track of the mirror element\n           * @property {HTMLElement} mirror\n           */\n\n          _this5.mirror = null;\n          _this5[onMirrorCreated] = _this5[onMirrorCreated].bind(_assertThisInitialized(_this5));\n          _this5[onMirrorDestroy] = _this5[onMirrorDestroy].bind(_assertThisInitialized(_this5));\n          _this5[onDragOver] = _this5[onDragOver].bind(_assertThisInitialized(_this5));\n          return _this5;\n        }\n        /**\n         * Attaches plugins event listeners\n         */\n\n\n        _createClass(ResizeMirror, [{\n          key: \"attach\",\n          value: function attach() {\n            this.draggable.on('mirror:created', this[onMirrorCreated]).on('drag:over', this[onDragOver]).on('drag:over:container', this[onDragOver]);\n          }\n          /**\n           * Detaches plugins event listeners\n           */\n\n        }, {\n          key: \"detach\",\n          value: function detach() {\n            this.draggable.off('mirror:created', this[onMirrorCreated]).off('mirror:destroy', this[onMirrorDestroy]).off('drag:over', this[onDragOver]).off('drag:over:container', this[onDragOver]);\n          }\n          /**\n           * Returns options passed through draggable\n           * @return {Object}\n           */\n\n        }, {\n          key: \"getOptions\",\n          value: function getOptions() {\n            return this.draggable.options.resizeMirror || {};\n          }\n          /**\n           * Mirror created handler\n           * @param {MirrorCreatedEvent} mirrorEvent\n           * @private\n           */\n\n        }, {\n          key: onMirrorCreated,\n          value: function value(_ref11) {\n            var mirror = _ref11.mirror;\n            this.mirror = mirror;\n          }\n          /**\n           * Mirror destroy handler\n           * @param {MirrorDestroyEvent} mirrorEvent\n           * @private\n           */\n\n        }, {\n          key: onMirrorDestroy,\n          value: function value() {\n            this.mirror = null;\n          }\n          /**\n           * Drag over handler\n           * @param {DragOverEvent | DragOverContainer} dragEvent\n           * @private\n           */\n\n        }, {\n          key: onDragOver,\n          value: function value(dragEvent) {\n            this[resize](dragEvent);\n          }\n          /**\n           * Resize function for\n           * @param {DragOverEvent | DragOverContainer} dragEvent\n           * @private\n           */\n\n        }, {\n          key: resize,\n          value: function value(_ref12) {\n            var _this6 = this;\n\n            var overContainer = _ref12.overContainer,\n                over = _ref12.over;\n            requestAnimationFrame(function () {\n              if (_this6.mirror.parentNode !== overContainer) {\n                overContainer.appendChild(_this6.mirror);\n              }\n\n              var overElement = over || _this6.draggable.getDraggableElementsForContainer(overContainer)[0];\n\n              if (!overElement) {\n                return;\n              }\n\n              (0, _utils.requestNextAnimationFrame)(function () {\n                var overRect = overElement.getBoundingClientRect();\n\n                if (_this6.lastHeight === overRect.height && _this6.lastWidth === overRect.width) {\n                  return;\n                }\n\n                _this6.mirror.style.width = \"\".concat(overRect.width, \"px\");\n                _this6.mirror.style.height = \"\".concat(overRect.height, \"px\");\n                _this6.lastWidth = overRect.width;\n                _this6.lastHeight = overRect.height;\n              });\n            });\n          }\n        }]);\n\n        return ResizeMirror;\n      }(_AbstractPlugin2.default);\n\n      exports.default = ResizeMirror;\n      /***/\n    },\n    /* 21 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.defaultOptions = undefined;\n\n      var _ResizeMirror = __webpack_require__(20);\n\n      var _ResizeMirror2 = _interopRequireDefault(_ResizeMirror);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _ResizeMirror2.default;\n      exports.defaultOptions = _ResizeMirror.defaultOptions;\n      /***/\n    },\n    /* 22 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _AbstractPlugin = __webpack_require__(1);\n\n      var _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\n\n      var _utils = __webpack_require__(2);\n\n      var _CollidableEvent = __webpack_require__(8);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var onDragMove = Symbol('onDragMove');\n      var onDragStop = Symbol('onDragStop');\n      var onRequestAnimationFrame = Symbol('onRequestAnimationFrame');\n      /**\n       * Collidable plugin which detects colliding elements while dragging\n       * @class Collidable\n       * @module Collidable\n       * @extends AbstractPlugin\n       */\n\n      var Collidable = /*#__PURE__*/function (_AbstractPlugin2$defa4) {\n        _inherits(Collidable, _AbstractPlugin2$defa4);\n\n        var _super7 = _createSuper(Collidable);\n\n        /**\n         * Collidable constructor.\n         * @constructs Collidable\n         * @param {Draggable} draggable - Draggable instance\n         */\n        function Collidable(draggable) {\n          var _this7;\n\n          _classCallCheck(this, Collidable);\n\n          _this7 = _super7.call(this, draggable);\n          /**\n           * Keeps track of currently colliding elements\n           * @property {HTMLElement|null} currentlyCollidingElement\n           * @type {HTMLElement|null}\n           */\n\n          _this7.currentlyCollidingElement = null;\n          /**\n           * Keeps track of currently colliding elements\n           * @property {HTMLElement|null} lastCollidingElement\n           * @type {HTMLElement|null}\n           */\n\n          _this7.lastCollidingElement = null;\n          /**\n           * Animation frame for finding colliding elements\n           * @property {Number|null} currentAnimationFrame\n           * @type {Number|null}\n           */\n\n          _this7.currentAnimationFrame = null;\n          _this7[onDragMove] = _this7[onDragMove].bind(_assertThisInitialized(_this7));\n          _this7[onDragStop] = _this7[onDragStop].bind(_assertThisInitialized(_this7));\n          _this7[onRequestAnimationFrame] = _this7[onRequestAnimationFrame].bind(_assertThisInitialized(_this7));\n          return _this7;\n        }\n        /**\n         * Attaches plugins event listeners\n         */\n\n\n        _createClass(Collidable, [{\n          key: \"attach\",\n          value: function attach() {\n            this.draggable.on('drag:move', this[onDragMove]).on('drag:stop', this[onDragStop]);\n          }\n          /**\n           * Detaches plugins event listeners\n           */\n\n        }, {\n          key: \"detach\",\n          value: function detach() {\n            this.draggable.off('drag:move', this[onDragMove]).off('drag:stop', this[onDragStop]);\n          }\n          /**\n           * Returns current collidables based on `collidables` option\n           * @return {HTMLElement[]}\n           */\n\n        }, {\n          key: \"getCollidables\",\n          value: function getCollidables() {\n            var collidables = this.draggable.options.collidables;\n\n            if (typeof collidables === 'string') {\n              return Array.prototype.slice.call(document.querySelectorAll(collidables));\n            } else if (collidables instanceof NodeList || collidables instanceof Array) {\n              return Array.prototype.slice.call(collidables);\n            } else if (collidables instanceof HTMLElement) {\n              return [collidables];\n            } else if (typeof collidables === 'function') {\n              return collidables();\n            } else {\n              return [];\n            }\n          }\n          /**\n           * Drag move handler\n           * @private\n           * @param {DragMoveEvent} event - Drag move event\n           */\n\n        }, {\n          key: onDragMove,\n          value: function value(event) {\n            var target = event.sensorEvent.target;\n            this.currentAnimationFrame = requestAnimationFrame(this[onRequestAnimationFrame](target));\n\n            if (this.currentlyCollidingElement) {\n              event.cancel();\n            }\n\n            var collidableInEvent = new _CollidableEvent.CollidableInEvent({\n              dragEvent: event,\n              collidingElement: this.currentlyCollidingElement\n            });\n            var collidableOutEvent = new _CollidableEvent.CollidableOutEvent({\n              dragEvent: event,\n              collidingElement: this.lastCollidingElement\n            });\n            var enteringCollidable = Boolean(this.currentlyCollidingElement && this.lastCollidingElement !== this.currentlyCollidingElement);\n            var leavingCollidable = Boolean(!this.currentlyCollidingElement && this.lastCollidingElement);\n\n            if (enteringCollidable) {\n              if (this.lastCollidingElement) {\n                this.draggable.trigger(collidableOutEvent);\n              }\n\n              this.draggable.trigger(collidableInEvent);\n            } else if (leavingCollidable) {\n              this.draggable.trigger(collidableOutEvent);\n            }\n\n            this.lastCollidingElement = this.currentlyCollidingElement;\n          }\n          /**\n           * Drag stop handler\n           * @private\n           * @param {DragStopEvent} event - Drag stop event\n           */\n\n        }, {\n          key: onDragStop,\n          value: function value(event) {\n            var lastCollidingElement = this.currentlyCollidingElement || this.lastCollidingElement;\n            var collidableOutEvent = new _CollidableEvent.CollidableOutEvent({\n              dragEvent: event,\n              collidingElement: lastCollidingElement\n            });\n\n            if (lastCollidingElement) {\n              this.draggable.trigger(collidableOutEvent);\n            }\n\n            this.lastCollidingElement = null;\n            this.currentlyCollidingElement = null;\n          }\n          /**\n           * Animation frame function\n           * @private\n           * @param {HTMLElement} target - Current move target\n           * @return {Function}\n           */\n\n        }, {\n          key: onRequestAnimationFrame,\n          value: function value(target) {\n            var _this8 = this;\n\n            return function () {\n              var collidables = _this8.getCollidables();\n\n              _this8.currentlyCollidingElement = (0, _utils.closest)(target, function (element) {\n                return collidables.includes(element);\n              });\n            };\n          }\n        }]);\n\n        return Collidable;\n      }(_AbstractPlugin2.default);\n\n      exports.default = Collidable;\n      /***/\n    },\n    /* 23 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.CollidableOutEvent = exports.CollidableInEvent = exports.CollidableEvent = undefined;\n\n      var _AbstractEvent = __webpack_require__(0);\n\n      var _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      /**\n       * Base collidable event\n       * @class CollidableEvent\n       * @module CollidableEvent\n       * @extends AbstractEvent\n       */\n\n\n      var CollidableEvent = /*#__PURE__*/function (_AbstractEvent2$defau2) {\n        _inherits(CollidableEvent, _AbstractEvent2$defau2);\n\n        var _super8 = _createSuper(CollidableEvent);\n\n        function CollidableEvent() {\n          _classCallCheck(this, CollidableEvent);\n\n          return _super8.apply(this, arguments);\n        }\n\n        _createClass(CollidableEvent, [{\n          key: \"dragEvent\",\n          get:\n          /**\n           * Drag event that triggered this colliable event\n           * @property dragEvent\n           * @type {DragEvent}\n           * @readonly\n           */\n          function get() {\n            return this.data.dragEvent;\n          }\n        }]);\n\n        return CollidableEvent;\n      }(_AbstractEvent2.default);\n\n      exports.CollidableEvent = CollidableEvent;\n      /**\n       * Collidable in event\n       * @class CollidableInEvent\n       * @module CollidableInEvent\n       * @extends CollidableEvent\n       */\n\n      CollidableEvent.type = 'collidable';\n\n      var CollidableInEvent = /*#__PURE__*/function (_CollidableEvent2) {\n        _inherits(CollidableInEvent, _CollidableEvent2);\n\n        var _super9 = _createSuper(CollidableInEvent);\n\n        function CollidableInEvent() {\n          _classCallCheck(this, CollidableInEvent);\n\n          return _super9.apply(this, arguments);\n        }\n\n        _createClass(CollidableInEvent, [{\n          key: \"collidingElement\",\n          get:\n          /**\n           * Element you are currently colliding with\n           * @property collidingElement\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.collidingElement;\n          }\n        }]);\n\n        return CollidableInEvent;\n      }(CollidableEvent);\n\n      exports.CollidableInEvent = CollidableInEvent;\n      /**\n       * Collidable out event\n       * @class CollidableOutEvent\n       * @module CollidableOutEvent\n       * @extends CollidableEvent\n       */\n\n      CollidableInEvent.type = 'collidable:in';\n\n      var CollidableOutEvent = /*#__PURE__*/function (_CollidableEvent3) {\n        _inherits(CollidableOutEvent, _CollidableEvent3);\n\n        var _super10 = _createSuper(CollidableOutEvent);\n\n        function CollidableOutEvent() {\n          _classCallCheck(this, CollidableOutEvent);\n\n          return _super10.apply(this, arguments);\n        }\n\n        _createClass(CollidableOutEvent, [{\n          key: \"collidingElement\",\n          get:\n          /**\n           * Element you were previously colliding with\n           * @property collidingElement\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.collidingElement;\n          }\n        }]);\n\n        return CollidableOutEvent;\n      }(CollidableEvent);\n\n      exports.CollidableOutEvent = CollidableOutEvent;\n      CollidableOutEvent.type = 'collidable:out';\n      /***/\n    },\n    /* 24 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _CollidableEvent = __webpack_require__(8);\n\n      Object.keys(_CollidableEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _CollidableEvent[key];\n          }\n        });\n      });\n\n      var _Collidable = __webpack_require__(22);\n\n      var _Collidable2 = _interopRequireDefault(_Collidable);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _Collidable2.default;\n      /***/\n    },\n    /* 25 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _Collidable = __webpack_require__(24);\n\n      Object.defineProperty(exports, 'Collidable', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_Collidable).default;\n        }\n      });\n\n      var _ResizeMirror = __webpack_require__(21);\n\n      Object.defineProperty(exports, 'ResizeMirror', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_ResizeMirror).default;\n        }\n      });\n      Object.defineProperty(exports, 'defaultResizeMirrorOptions', {\n        enumerable: true,\n        get: function get() {\n          return _ResizeMirror.defaultOptions;\n        }\n      });\n\n      var _Snappable = __webpack_require__(19);\n\n      Object.defineProperty(exports, 'Snappable', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_Snappable).default;\n        }\n      });\n\n      var _SwapAnimation = __webpack_require__(16);\n\n      Object.defineProperty(exports, 'SwapAnimation', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_SwapAnimation).default;\n        }\n      });\n      Object.defineProperty(exports, 'defaultSwapAnimationOptions', {\n        enumerable: true,\n        get: function get() {\n          return _SwapAnimation.defaultOptions;\n        }\n      });\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      /***/\n\n    },\n    /* 26 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _Draggable = __webpack_require__(5);\n\n      var _Draggable2 = _interopRequireDefault(_Draggable);\n\n      var _SortableEvent = __webpack_require__(9);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var onDragStart = Symbol('onDragStart');\n      var onDragOverContainer = Symbol('onDragOverContainer');\n      var onDragOver = Symbol('onDragOver');\n      var onDragStop = Symbol('onDragStop');\n      /**\n       * Returns announcement message when a Draggable element has been sorted with another Draggable element\n       * or moved into a new container\n       * @param {SortableSortedEvent} sortableEvent\n       * @return {String}\n       */\n\n      function onSortableSortedDefaultAnnouncement(_ref13) {\n        var dragEvent = _ref13.dragEvent;\n        var sourceText = dragEvent.source.textContent.trim() || dragEvent.source.id || 'sortable element';\n\n        if (dragEvent.over) {\n          var overText = dragEvent.over.textContent.trim() || dragEvent.over.id || 'sortable element';\n          var isFollowing = dragEvent.source.compareDocumentPosition(dragEvent.over) & Node.DOCUMENT_POSITION_FOLLOWING;\n\n          if (isFollowing) {\n            return \"Placed \".concat(sourceText, \" after \").concat(overText);\n          } else {\n            return \"Placed \".concat(sourceText, \" before \").concat(overText);\n          }\n        } else {\n          // need to figure out how to compute container name\n          return \"Placed \".concat(sourceText, \" into a different container\");\n        }\n      }\n      /**\n       * @const {Object} defaultAnnouncements\n       * @const {Function} defaultAnnouncements['sortable:sorted']\n       */\n\n\n      var defaultAnnouncements = {\n        'sortable:sorted': onSortableSortedDefaultAnnouncement\n      };\n      /**\n       * Sortable is built on top of Draggable and allows sorting of draggable elements. Sortable will keep\n       * track of the original index and emits the new index as you drag over draggable elements.\n       * @class Sortable\n       * @module Sortable\n       * @extends Draggable\n       */\n\n      var Sortable = /*#__PURE__*/function (_Draggable2$default) {\n        _inherits(Sortable, _Draggable2$default);\n\n        var _super11 = _createSuper(Sortable);\n\n        /**\n         * Sortable constructor.\n         * @constructs Sortable\n         * @param {HTMLElement[]|NodeList|HTMLElement} containers - Sortable containers\n         * @param {Object} options - Options for Sortable\n         */\n        function Sortable() {\n          var _this9;\n\n          var containers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n          _classCallCheck(this, Sortable);\n\n          _this9 = _super11.call(this, containers, _extends({}, options, {\n            announcements: _extends({}, defaultAnnouncements, options.announcements || {})\n          }));\n          /**\n           * start index of source on drag start\n           * @property startIndex\n           * @type {Number}\n           */\n\n          _this9.startIndex = null;\n          /**\n           * start container on drag start\n           * @property startContainer\n           * @type {HTMLElement}\n           * @default null\n           */\n\n          _this9.startContainer = null;\n          _this9[onDragStart] = _this9[onDragStart].bind(_assertThisInitialized(_this9));\n          _this9[onDragOverContainer] = _this9[onDragOverContainer].bind(_assertThisInitialized(_this9));\n          _this9[onDragOver] = _this9[onDragOver].bind(_assertThisInitialized(_this9));\n          _this9[onDragStop] = _this9[onDragStop].bind(_assertThisInitialized(_this9));\n\n          _this9.on('drag:start', _this9[onDragStart]).on('drag:over:container', _this9[onDragOverContainer]).on('drag:over', _this9[onDragOver]).on('drag:stop', _this9[onDragStop]);\n\n          return _this9;\n        }\n        /**\n         * Destroys Sortable instance.\n         */\n\n\n        _createClass(Sortable, [{\n          key: \"destroy\",\n          value: function destroy() {\n            _get(_getPrototypeOf(Sortable.prototype), \"destroy\", this).call(this);\n\n            this.off('drag:start', this[onDragStart]).off('drag:over:container', this[onDragOverContainer]).off('drag:over', this[onDragOver]).off('drag:stop', this[onDragStop]);\n          }\n          /**\n           * Returns true index of element within its container during drag operation, i.e. excluding mirror and original source\n           * @param {HTMLElement} element - An element\n           * @return {Number}\n           */\n\n        }, {\n          key: \"index\",\n          value: function index(element) {\n            return this.getDraggableElementsForContainer(element.parentNode).indexOf(element);\n          }\n          /**\n           * Drag start handler\n           * @private\n           * @param {DragStartEvent} event - Drag start event\n           */\n\n        }, {\n          key: onDragStart,\n          value: function value(event) {\n            this.startContainer = event.source.parentNode;\n            this.startIndex = this.index(event.source);\n            var sortableStartEvent = new _SortableEvent.SortableStartEvent({\n              dragEvent: event,\n              startIndex: this.startIndex,\n              startContainer: this.startContainer\n            });\n            this.trigger(sortableStartEvent);\n\n            if (sortableStartEvent.canceled()) {\n              event.cancel();\n            }\n          }\n          /**\n           * Drag over container handler\n           * @private\n           * @param {DragOverContainerEvent} event - Drag over container event\n           */\n\n        }, {\n          key: onDragOverContainer,\n          value: function value(event) {\n            if (event.canceled()) {\n              return;\n            }\n\n            var source = event.source,\n                over = event.over,\n                overContainer = event.overContainer;\n            var oldIndex = this.index(source);\n            var sortableSortEvent = new _SortableEvent.SortableSortEvent({\n              dragEvent: event,\n              currentIndex: oldIndex,\n              source: source,\n              over: over\n            });\n            this.trigger(sortableSortEvent);\n\n            if (sortableSortEvent.canceled()) {\n              return;\n            }\n\n            var children = this.getDraggableElementsForContainer(overContainer);\n            var moves = move({\n              source: source,\n              over: over,\n              overContainer: overContainer,\n              children: children\n            });\n\n            if (!moves) {\n              return;\n            }\n\n            var oldContainer = moves.oldContainer,\n                newContainer = moves.newContainer;\n            var newIndex = this.index(event.source);\n            var sortableSortedEvent = new _SortableEvent.SortableSortedEvent({\n              dragEvent: event,\n              oldIndex: oldIndex,\n              newIndex: newIndex,\n              oldContainer: oldContainer,\n              newContainer: newContainer\n            });\n            this.trigger(sortableSortedEvent);\n          }\n          /**\n           * Drag over handler\n           * @private\n           * @param {DragOverEvent} event - Drag over event\n           */\n\n        }, {\n          key: onDragOver,\n          value: function value(event) {\n            if (event.over === event.originalSource || event.over === event.source) {\n              return;\n            }\n\n            var source = event.source,\n                over = event.over,\n                overContainer = event.overContainer;\n            var oldIndex = this.index(source);\n            var sortableSortEvent = new _SortableEvent.SortableSortEvent({\n              dragEvent: event,\n              currentIndex: oldIndex,\n              source: source,\n              over: over\n            });\n            this.trigger(sortableSortEvent);\n\n            if (sortableSortEvent.canceled()) {\n              return;\n            }\n\n            var children = this.getDraggableElementsForContainer(overContainer);\n            var moves = move({\n              source: source,\n              over: over,\n              overContainer: overContainer,\n              children: children\n            });\n\n            if (!moves) {\n              return;\n            }\n\n            var oldContainer = moves.oldContainer,\n                newContainer = moves.newContainer;\n            var newIndex = this.index(source);\n            var sortableSortedEvent = new _SortableEvent.SortableSortedEvent({\n              dragEvent: event,\n              oldIndex: oldIndex,\n              newIndex: newIndex,\n              oldContainer: oldContainer,\n              newContainer: newContainer\n            });\n            this.trigger(sortableSortedEvent);\n          }\n          /**\n           * Drag stop handler\n           * @private\n           * @param {DragStopEvent} event - Drag stop event\n           */\n\n        }, {\n          key: onDragStop,\n          value: function value(event) {\n            var sortableStopEvent = new _SortableEvent.SortableStopEvent({\n              dragEvent: event,\n              oldIndex: this.startIndex,\n              newIndex: this.index(event.source),\n              oldContainer: this.startContainer,\n              newContainer: event.source.parentNode\n            });\n            this.trigger(sortableStopEvent);\n            this.startIndex = null;\n            this.startContainer = null;\n          }\n        }]);\n\n        return Sortable;\n      }(_Draggable2.default);\n\n      exports.default = Sortable;\n\n      function index(element) {\n        return Array.prototype.indexOf.call(element.parentNode.children, element);\n      }\n\n      function move(_ref14) {\n        var source = _ref14.source,\n            over = _ref14.over,\n            overContainer = _ref14.overContainer,\n            children = _ref14.children;\n        var emptyOverContainer = !children.length;\n        var differentContainer = source.parentNode !== overContainer;\n        var sameContainer = over && !differentContainer;\n\n        if (emptyOverContainer) {\n          return moveInsideEmptyContainer(source, overContainer);\n        } else if (sameContainer) {\n          return moveWithinContainer(source, over);\n        } else if (differentContainer) {\n          return moveOutsideContainer(source, over, overContainer);\n        } else {\n          return null;\n        }\n      }\n\n      function moveInsideEmptyContainer(source, overContainer) {\n        var oldContainer = source.parentNode;\n        overContainer.appendChild(source);\n        return {\n          oldContainer: oldContainer,\n          newContainer: overContainer\n        };\n      }\n\n      function moveWithinContainer(source, over) {\n        var oldIndex = index(source);\n        var newIndex = index(over);\n\n        if (oldIndex < newIndex) {\n          source.parentNode.insertBefore(source, over.nextElementSibling);\n        } else {\n          source.parentNode.insertBefore(source, over);\n        }\n\n        return {\n          oldContainer: source.parentNode,\n          newContainer: source.parentNode\n        };\n      }\n\n      function moveOutsideContainer(source, over, overContainer) {\n        var oldContainer = source.parentNode;\n\n        if (over) {\n          over.parentNode.insertBefore(source, over);\n        } else {\n          // need to figure out proper position\n          overContainer.appendChild(source);\n        }\n\n        return {\n          oldContainer: oldContainer,\n          newContainer: source.parentNode\n        };\n      }\n      /***/\n\n    },\n    /* 27 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SortableStopEvent = exports.SortableSortedEvent = exports.SortableSortEvent = exports.SortableStartEvent = exports.SortableEvent = undefined;\n\n      var _AbstractEvent = __webpack_require__(0);\n\n      var _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      /**\n       * Base sortable event\n       * @class SortableEvent\n       * @module SortableEvent\n       * @extends AbstractEvent\n       */\n\n\n      var SortableEvent = /*#__PURE__*/function (_AbstractEvent2$defau3) {\n        _inherits(SortableEvent, _AbstractEvent2$defau3);\n\n        var _super12 = _createSuper(SortableEvent);\n\n        function SortableEvent() {\n          _classCallCheck(this, SortableEvent);\n\n          return _super12.apply(this, arguments);\n        }\n\n        _createClass(SortableEvent, [{\n          key: \"dragEvent\",\n          get:\n          /**\n           * Original drag event that triggered this sortable event\n           * @property dragEvent\n           * @type {DragEvent}\n           * @readonly\n           */\n          function get() {\n            return this.data.dragEvent;\n          }\n        }]);\n\n        return SortableEvent;\n      }(_AbstractEvent2.default);\n\n      exports.SortableEvent = SortableEvent;\n      /**\n       * Sortable start event\n       * @class SortableStartEvent\n       * @module SortableStartEvent\n       * @extends SortableEvent\n       */\n\n      SortableEvent.type = 'sortable';\n\n      var SortableStartEvent = /*#__PURE__*/function (_SortableEvent2) {\n        _inherits(SortableStartEvent, _SortableEvent2);\n\n        var _super13 = _createSuper(SortableStartEvent);\n\n        function SortableStartEvent() {\n          _classCallCheck(this, SortableStartEvent);\n\n          return _super13.apply(this, arguments);\n        }\n\n        _createClass(SortableStartEvent, [{\n          key: \"startIndex\",\n          get:\n          /**\n           * Start index of source on sortable start\n           * @property startIndex\n           * @type {Number}\n           * @readonly\n           */\n          function get() {\n            return this.data.startIndex;\n          }\n          /**\n           * Start container on sortable start\n           * @property startContainer\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"startContainer\",\n          get: function get() {\n            return this.data.startContainer;\n          }\n        }]);\n\n        return SortableStartEvent;\n      }(SortableEvent);\n\n      exports.SortableStartEvent = SortableStartEvent;\n      /**\n       * Sortable sort event\n       * @class SortableSortEvent\n       * @module SortableSortEvent\n       * @extends SortableEvent\n       */\n\n      SortableStartEvent.type = 'sortable:start';\n      SortableStartEvent.cancelable = true;\n\n      var SortableSortEvent = /*#__PURE__*/function (_SortableEvent3) {\n        _inherits(SortableSortEvent, _SortableEvent3);\n\n        var _super14 = _createSuper(SortableSortEvent);\n\n        function SortableSortEvent() {\n          _classCallCheck(this, SortableSortEvent);\n\n          return _super14.apply(this, arguments);\n        }\n\n        _createClass(SortableSortEvent, [{\n          key: \"currentIndex\",\n          get:\n          /**\n           * Index of current draggable element\n           * @property currentIndex\n           * @type {Number}\n           * @readonly\n           */\n          function get() {\n            return this.data.currentIndex;\n          }\n          /**\n           * Draggable element you are hovering over\n           * @property over\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"over\",\n          get: function get() {\n            return this.data.oldIndex;\n          }\n          /**\n           * Draggable container element you are hovering over\n           * @property overContainer\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"overContainer\",\n          get: function get() {\n            return this.data.newIndex;\n          }\n        }]);\n\n        return SortableSortEvent;\n      }(SortableEvent);\n\n      exports.SortableSortEvent = SortableSortEvent;\n      /**\n       * Sortable sorted event\n       * @class SortableSortedEvent\n       * @module SortableSortedEvent\n       * @extends SortableEvent\n       */\n\n      SortableSortEvent.type = 'sortable:sort';\n      SortableSortEvent.cancelable = true;\n\n      var SortableSortedEvent = /*#__PURE__*/function (_SortableEvent4) {\n        _inherits(SortableSortedEvent, _SortableEvent4);\n\n        var _super15 = _createSuper(SortableSortedEvent);\n\n        function SortableSortedEvent() {\n          _classCallCheck(this, SortableSortedEvent);\n\n          return _super15.apply(this, arguments);\n        }\n\n        _createClass(SortableSortedEvent, [{\n          key: \"oldIndex\",\n          get:\n          /**\n           * Index of last sorted event\n           * @property oldIndex\n           * @type {Number}\n           * @readonly\n           */\n          function get() {\n            return this.data.oldIndex;\n          }\n          /**\n           * New index of this sorted event\n           * @property newIndex\n           * @type {Number}\n           * @readonly\n           */\n\n        }, {\n          key: \"newIndex\",\n          get: function get() {\n            return this.data.newIndex;\n          }\n          /**\n           * Old container of draggable element\n           * @property oldContainer\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"oldContainer\",\n          get: function get() {\n            return this.data.oldContainer;\n          }\n          /**\n           * New container of draggable element\n           * @property newContainer\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"newContainer\",\n          get: function get() {\n            return this.data.newContainer;\n          }\n        }]);\n\n        return SortableSortedEvent;\n      }(SortableEvent);\n\n      exports.SortableSortedEvent = SortableSortedEvent;\n      /**\n       * Sortable stop event\n       * @class SortableStopEvent\n       * @module SortableStopEvent\n       * @extends SortableEvent\n       */\n\n      SortableSortedEvent.type = 'sortable:sorted';\n\n      var SortableStopEvent = /*#__PURE__*/function (_SortableEvent5) {\n        _inherits(SortableStopEvent, _SortableEvent5);\n\n        var _super16 = _createSuper(SortableStopEvent);\n\n        function SortableStopEvent() {\n          _classCallCheck(this, SortableStopEvent);\n\n          return _super16.apply(this, arguments);\n        }\n\n        _createClass(SortableStopEvent, [{\n          key: \"oldIndex\",\n          get:\n          /**\n           * Original index on sortable start\n           * @property oldIndex\n           * @type {Number}\n           * @readonly\n           */\n          function get() {\n            return this.data.oldIndex;\n          }\n          /**\n           * New index of draggable element\n           * @property newIndex\n           * @type {Number}\n           * @readonly\n           */\n\n        }, {\n          key: \"newIndex\",\n          get: function get() {\n            return this.data.newIndex;\n          }\n          /**\n           * Original container of draggable element\n           * @property oldContainer\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"oldContainer\",\n          get: function get() {\n            return this.data.oldContainer;\n          }\n          /**\n           * New container of draggable element\n           * @property newContainer\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"newContainer\",\n          get: function get() {\n            return this.data.newContainer;\n          }\n        }]);\n\n        return SortableStopEvent;\n      }(SortableEvent);\n\n      exports.SortableStopEvent = SortableStopEvent;\n      SortableStopEvent.type = 'sortable:stop';\n      /***/\n    },\n    /* 28 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _SortableEvent = __webpack_require__(9);\n\n      Object.keys(_SortableEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _SortableEvent[key];\n          }\n        });\n      });\n\n      var _Sortable = __webpack_require__(26);\n\n      var _Sortable2 = _interopRequireDefault(_Sortable);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _Sortable2.default;\n      /***/\n    },\n    /* 29 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _Draggable = __webpack_require__(5);\n\n      var _Draggable2 = _interopRequireDefault(_Draggable);\n\n      var _SwappableEvent = __webpack_require__(10);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var onDragStart = Symbol('onDragStart');\n      var onDragOver = Symbol('onDragOver');\n      var onDragStop = Symbol('onDragStop');\n      /**\n       * Returns an announcement message when the Draggable element is swapped with another draggable element\n       * @param {SwappableSwappedEvent} swappableEvent\n       * @return {String}\n       */\n\n      function onSwappableSwappedDefaultAnnouncement(_ref15) {\n        var dragEvent = _ref15.dragEvent,\n            swappedElement = _ref15.swappedElement;\n        var sourceText = dragEvent.source.textContent.trim() || dragEvent.source.id || 'swappable element';\n        var overText = swappedElement.textContent.trim() || swappedElement.id || 'swappable element';\n        return \"Swapped \".concat(sourceText, \" with \").concat(overText);\n      }\n      /**\n       * @const {Object} defaultAnnouncements\n       * @const {Function} defaultAnnouncements['swappabled:swapped']\n       */\n\n\n      var defaultAnnouncements = {\n        'swappabled:swapped': onSwappableSwappedDefaultAnnouncement\n      };\n      /**\n       * Swappable is built on top of Draggable and allows swapping of draggable elements.\n       * Order is irrelevant to Swappable.\n       * @class Swappable\n       * @module Swappable\n       * @extends Draggable\n       */\n\n      var Swappable = /*#__PURE__*/function (_Draggable2$default2) {\n        _inherits(Swappable, _Draggable2$default2);\n\n        var _super17 = _createSuper(Swappable);\n\n        /**\n         * Swappable constructor.\n         * @constructs Swappable\n         * @param {HTMLElement[]|NodeList|HTMLElement} containers - Swappable containers\n         * @param {Object} options - Options for Swappable\n         */\n        function Swappable() {\n          var _this10;\n\n          var containers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n          _classCallCheck(this, Swappable);\n\n          _this10 = _super17.call(this, containers, _extends({}, options, {\n            announcements: _extends({}, defaultAnnouncements, options.announcements || {})\n          }));\n          /**\n           * Last draggable element that was dragged over\n           * @property lastOver\n           * @type {HTMLElement}\n           */\n\n          _this10.lastOver = null;\n          _this10[onDragStart] = _this10[onDragStart].bind(_assertThisInitialized(_this10));\n          _this10[onDragOver] = _this10[onDragOver].bind(_assertThisInitialized(_this10));\n          _this10[onDragStop] = _this10[onDragStop].bind(_assertThisInitialized(_this10));\n\n          _this10.on('drag:start', _this10[onDragStart]).on('drag:over', _this10[onDragOver]).on('drag:stop', _this10[onDragStop]);\n\n          return _this10;\n        }\n        /**\n         * Destroys Swappable instance.\n         */\n\n\n        _createClass(Swappable, [{\n          key: \"destroy\",\n          value: function destroy() {\n            _get(_getPrototypeOf(Swappable.prototype), \"destroy\", this).call(this);\n\n            this.off('drag:start', this._onDragStart).off('drag:over', this._onDragOver).off('drag:stop', this._onDragStop);\n          }\n          /**\n           * Drag start handler\n           * @private\n           * @param {DragStartEvent} event - Drag start event\n           */\n\n        }, {\n          key: onDragStart,\n          value: function value(event) {\n            var swappableStartEvent = new _SwappableEvent.SwappableStartEvent({\n              dragEvent: event\n            });\n            this.trigger(swappableStartEvent);\n\n            if (swappableStartEvent.canceled()) {\n              event.cancel();\n            }\n          }\n          /**\n           * Drag over handler\n           * @private\n           * @param {DragOverEvent} event - Drag over event\n           */\n\n        }, {\n          key: onDragOver,\n          value: function value(event) {\n            if (event.over === event.originalSource || event.over === event.source || event.canceled()) {\n              return;\n            }\n\n            var swappableSwapEvent = new _SwappableEvent.SwappableSwapEvent({\n              dragEvent: event,\n              over: event.over,\n              overContainer: event.overContainer\n            });\n            this.trigger(swappableSwapEvent);\n\n            if (swappableSwapEvent.canceled()) {\n              return;\n            } // swap originally swapped element back\n\n\n            if (this.lastOver && this.lastOver !== event.over) {\n              swap(this.lastOver, event.source);\n            }\n\n            if (this.lastOver === event.over) {\n              this.lastOver = null;\n            } else {\n              this.lastOver = event.over;\n            }\n\n            swap(event.source, event.over);\n            var swappableSwappedEvent = new _SwappableEvent.SwappableSwappedEvent({\n              dragEvent: event,\n              swappedElement: event.over\n            });\n            this.trigger(swappableSwappedEvent);\n          }\n          /**\n           * Drag stop handler\n           * @private\n           * @param {DragStopEvent} event - Drag stop event\n           */\n\n        }, {\n          key: onDragStop,\n          value: function value(event) {\n            var swappableStopEvent = new _SwappableEvent.SwappableStopEvent({\n              dragEvent: event\n            });\n            this.trigger(swappableStopEvent);\n            this.lastOver = null;\n          }\n        }]);\n\n        return Swappable;\n      }(_Draggable2.default);\n\n      exports.default = Swappable;\n\n      function withTempElement(callback) {\n        var tmpElement = document.createElement('div');\n        callback(tmpElement);\n        tmpElement.parentNode.removeChild(tmpElement);\n      }\n\n      function swap(source, over) {\n        var overParent = over.parentNode;\n        var sourceParent = source.parentNode;\n        withTempElement(function (tmpElement) {\n          sourceParent.insertBefore(tmpElement, source);\n          overParent.insertBefore(source, over);\n          sourceParent.insertBefore(over, tmpElement);\n        });\n      }\n      /***/\n\n    },\n    /* 30 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SwappableStopEvent = exports.SwappableSwappedEvent = exports.SwappableSwapEvent = exports.SwappableStartEvent = exports.SwappableEvent = undefined;\n\n      var _AbstractEvent = __webpack_require__(0);\n\n      var _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      /**\n       * Base swappable event\n       * @class SwappableEvent\n       * @module SwappableEvent\n       * @extends AbstractEvent\n       */\n\n\n      var SwappableEvent = /*#__PURE__*/function (_AbstractEvent2$defau4) {\n        _inherits(SwappableEvent, _AbstractEvent2$defau4);\n\n        var _super18 = _createSuper(SwappableEvent);\n\n        function SwappableEvent() {\n          _classCallCheck(this, SwappableEvent);\n\n          return _super18.apply(this, arguments);\n        }\n\n        _createClass(SwappableEvent, [{\n          key: \"dragEvent\",\n          get:\n          /**\n           * Original drag event that triggered this swappable event\n           * @property dragEvent\n           * @type {DragEvent}\n           * @readonly\n           */\n          function get() {\n            return this.data.dragEvent;\n          }\n        }]);\n\n        return SwappableEvent;\n      }(_AbstractEvent2.default);\n\n      exports.SwappableEvent = SwappableEvent;\n      /**\n       * Swappable start event\n       * @class SwappableStartEvent\n       * @module SwappableStartEvent\n       * @extends SwappableEvent\n       */\n\n      SwappableEvent.type = 'swappable';\n\n      var SwappableStartEvent = /*#__PURE__*/function (_SwappableEvent2) {\n        _inherits(SwappableStartEvent, _SwappableEvent2);\n\n        var _super19 = _createSuper(SwappableStartEvent);\n\n        function SwappableStartEvent() {\n          _classCallCheck(this, SwappableStartEvent);\n\n          return _super19.apply(this, arguments);\n        }\n\n        return SwappableStartEvent;\n      }(SwappableEvent);\n\n      exports.SwappableStartEvent = SwappableStartEvent;\n      /**\n       * Swappable swap event\n       * @class SwappableSwapEvent\n       * @module SwappableSwapEvent\n       * @extends SwappableEvent\n       */\n\n      SwappableStartEvent.type = 'swappable:start';\n      SwappableStartEvent.cancelable = true;\n\n      var SwappableSwapEvent = /*#__PURE__*/function (_SwappableEvent3) {\n        _inherits(SwappableSwapEvent, _SwappableEvent3);\n\n        var _super20 = _createSuper(SwappableSwapEvent);\n\n        function SwappableSwapEvent() {\n          _classCallCheck(this, SwappableSwapEvent);\n\n          return _super20.apply(this, arguments);\n        }\n\n        _createClass(SwappableSwapEvent, [{\n          key: \"over\",\n          get:\n          /**\n           * Draggable element you are over\n           * @property over\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.over;\n          }\n          /**\n           * Draggable container you are over\n           * @property overContainer\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"overContainer\",\n          get: function get() {\n            return this.data.overContainer;\n          }\n        }]);\n\n        return SwappableSwapEvent;\n      }(SwappableEvent);\n\n      exports.SwappableSwapEvent = SwappableSwapEvent;\n      /**\n       * Swappable swapped event\n       * @class SwappableSwappedEvent\n       * @module SwappableSwappedEvent\n       * @extends SwappableEvent\n       */\n\n      SwappableSwapEvent.type = 'swappable:swap';\n      SwappableSwapEvent.cancelable = true;\n\n      var SwappableSwappedEvent = /*#__PURE__*/function (_SwappableEvent4) {\n        _inherits(SwappableSwappedEvent, _SwappableEvent4);\n\n        var _super21 = _createSuper(SwappableSwappedEvent);\n\n        function SwappableSwappedEvent() {\n          _classCallCheck(this, SwappableSwappedEvent);\n\n          return _super21.apply(this, arguments);\n        }\n\n        _createClass(SwappableSwappedEvent, [{\n          key: \"swappedElement\",\n          get:\n          /**\n           * The draggable element that you swapped with\n           * @property swappedElement\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.swappedElement;\n          }\n        }]);\n\n        return SwappableSwappedEvent;\n      }(SwappableEvent);\n\n      exports.SwappableSwappedEvent = SwappableSwappedEvent;\n      /**\n       * Swappable stop event\n       * @class SwappableStopEvent\n       * @module SwappableStopEvent\n       * @extends SwappableEvent\n       */\n\n      SwappableSwappedEvent.type = 'swappable:swapped';\n\n      var SwappableStopEvent = /*#__PURE__*/function (_SwappableEvent5) {\n        _inherits(SwappableStopEvent, _SwappableEvent5);\n\n        var _super22 = _createSuper(SwappableStopEvent);\n\n        function SwappableStopEvent() {\n          _classCallCheck(this, SwappableStopEvent);\n\n          return _super22.apply(this, arguments);\n        }\n\n        return SwappableStopEvent;\n      }(SwappableEvent);\n\n      exports.SwappableStopEvent = SwappableStopEvent;\n      SwappableStopEvent.type = 'swappable:stop';\n      /***/\n    },\n    /* 31 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _SwappableEvent = __webpack_require__(10);\n\n      Object.keys(_SwappableEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _SwappableEvent[key];\n          }\n        });\n      });\n\n      var _Swappable = __webpack_require__(29);\n\n      var _Swappable2 = _interopRequireDefault(_Swappable);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _Swappable2.default;\n      /***/\n    },\n    /* 32 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _utils = __webpack_require__(2);\n\n      var _Draggable = __webpack_require__(5);\n\n      var _Draggable2 = _interopRequireDefault(_Draggable);\n\n      var _DroppableEvent = __webpack_require__(11);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var onDragStart = Symbol('onDragStart');\n      var onDragMove = Symbol('onDragMove');\n      var onDragStop = Symbol('onDragStop');\n      var dropInDropzone = Symbol('dropInDropZone');\n      var returnToOriginalDropzone = Symbol('returnToOriginalDropzone');\n      var closestDropzone = Symbol('closestDropzone');\n      var getDropzones = Symbol('getDropzones');\n      /**\n       * Returns an announcement message when the Draggable element is dropped into a dropzone element\n       * @param {DroppableDroppedEvent} droppableEvent\n       * @return {String}\n       */\n\n      function onDroppableDroppedDefaultAnnouncement(_ref16) {\n        var dragEvent = _ref16.dragEvent,\n            dropzone = _ref16.dropzone;\n        var sourceText = dragEvent.source.textContent.trim() || dragEvent.source.id || 'draggable element';\n        var dropzoneText = dropzone.textContent.trim() || dropzone.id || 'droppable element';\n        return \"Dropped \".concat(sourceText, \" into \").concat(dropzoneText);\n      }\n      /**\n       * Returns an announcement message when the Draggable element has returned to its original dropzone element\n       * @param {DroppableReturnedEvent} droppableEvent\n       * @return {String}\n       */\n\n\n      function onDroppableReturnedDefaultAnnouncement(_ref17) {\n        var dragEvent = _ref17.dragEvent,\n            dropzone = _ref17.dropzone;\n        var sourceText = dragEvent.source.textContent.trim() || dragEvent.source.id || 'draggable element';\n        var dropzoneText = dropzone.textContent.trim() || dropzone.id || 'droppable element';\n        return \"Returned \".concat(sourceText, \" from \").concat(dropzoneText);\n      }\n      /**\n       * @const {Object} defaultAnnouncements\n       * @const {Function} defaultAnnouncements['droppable:dropped']\n       * @const {Function} defaultAnnouncements['droppable:returned']\n       */\n\n\n      var defaultAnnouncements = {\n        'droppable:dropped': onDroppableDroppedDefaultAnnouncement,\n        'droppable:returned': onDroppableReturnedDefaultAnnouncement\n      };\n      var defaultClasses = {\n        'droppable:active': 'draggable-dropzone--active',\n        'droppable:occupied': 'draggable-dropzone--occupied'\n      };\n      var defaultOptions = {\n        dropzone: '.draggable-droppable'\n      };\n      /**\n       * Droppable is built on top of Draggable and allows dropping draggable elements\n       * into dropzone element\n       * @class Droppable\n       * @module Droppable\n       * @extends Draggable\n       */\n\n      var Droppable = /*#__PURE__*/function (_Draggable2$default3) {\n        _inherits(Droppable, _Draggable2$default3);\n\n        var _super23 = _createSuper(Droppable);\n\n        /**\n         * Droppable constructor.\n         * @constructs Droppable\n         * @param {HTMLElement[]|NodeList|HTMLElement} containers - Droppable containers\n         * @param {Object} options - Options for Droppable\n         */\n        function Droppable() {\n          var _this11;\n\n          var containers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n          _classCallCheck(this, Droppable);\n\n          _this11 = _super23.call(this, containers, _extends({}, defaultOptions, options, {\n            classes: _extends({}, defaultClasses, options.classes || {}),\n            announcements: _extends({}, defaultAnnouncements, options.announcements || {})\n          }));\n          /**\n           * All dropzone elements on drag start\n           * @property dropzones\n           * @type {HTMLElement[]}\n           */\n\n          _this11.dropzones = null;\n          /**\n           * Last dropzone element that the source was dropped into\n           * @property lastDropzone\n           * @type {HTMLElement}\n           */\n\n          _this11.lastDropzone = null;\n          /**\n           * Initial dropzone element that the source was drag from\n           * @property initialDropzone\n           * @type {HTMLElement}\n           */\n\n          _this11.initialDropzone = null;\n          _this11[onDragStart] = _this11[onDragStart].bind(_assertThisInitialized(_this11));\n          _this11[onDragMove] = _this11[onDragMove].bind(_assertThisInitialized(_this11));\n          _this11[onDragStop] = _this11[onDragStop].bind(_assertThisInitialized(_this11));\n\n          _this11.on('drag:start', _this11[onDragStart]).on('drag:move', _this11[onDragMove]).on('drag:stop', _this11[onDragStop]);\n\n          return _this11;\n        }\n        /**\n         * Destroys Droppable instance.\n         */\n\n\n        _createClass(Droppable, [{\n          key: \"destroy\",\n          value: function destroy() {\n            _get(_getPrototypeOf(Droppable.prototype), \"destroy\", this).call(this);\n\n            this.off('drag:start', this[onDragStart]).off('drag:move', this[onDragMove]).off('drag:stop', this[onDragStop]);\n          }\n          /**\n           * Drag start handler\n           * @private\n           * @param {DragStartEvent} event - Drag start event\n           */\n\n        }, {\n          key: onDragStart,\n          value: function value(event) {\n            if (event.canceled()) {\n              return;\n            }\n\n            this.dropzones = _toConsumableArray(this[getDropzones]());\n            var dropzone = (0, _utils.closest)(event.sensorEvent.target, this.options.dropzone);\n\n            if (!dropzone) {\n              event.cancel();\n              return;\n            }\n\n            var droppableStartEvent = new _DroppableEvent.DroppableStartEvent({\n              dragEvent: event,\n              dropzone: dropzone\n            });\n            this.trigger(droppableStartEvent);\n\n            if (droppableStartEvent.canceled()) {\n              event.cancel();\n              return;\n            }\n\n            this.initialDropzone = dropzone;\n\n            var _iterator = _createForOfIteratorHelper(this.dropzones),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var dropzoneElement = _step.value;\n\n                if (dropzoneElement.classList.contains(this.getClassNameFor('droppable:occupied'))) {\n                  continue;\n                }\n\n                dropzoneElement.classList.add(this.getClassNameFor('droppable:active'));\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          }\n          /**\n           * Drag move handler\n           * @private\n           * @param {DragMoveEvent} event - Drag move event\n           */\n\n        }, {\n          key: onDragMove,\n          value: function value(event) {\n            if (event.canceled()) {\n              return;\n            }\n\n            var dropzone = this[closestDropzone](event.sensorEvent.target);\n            var overEmptyDropzone = dropzone && !dropzone.classList.contains(this.getClassNameFor('droppable:occupied'));\n\n            if (overEmptyDropzone && this[dropInDropzone](event, dropzone)) {\n              this.lastDropzone = dropzone;\n            } else if ((!dropzone || dropzone === this.initialDropzone) && this.lastDropzone) {\n              this[returnToOriginalDropzone](event);\n              this.lastDropzone = null;\n            }\n          }\n          /**\n           * Drag stop handler\n           * @private\n           * @param {DragStopEvent} event - Drag stop event\n           */\n\n        }, {\n          key: onDragStop,\n          value: function value(event) {\n            var droppableStopEvent = new _DroppableEvent.DroppableStopEvent({\n              dragEvent: event,\n              dropzone: this.lastDropzone || this.initialDropzone\n            });\n            this.trigger(droppableStopEvent);\n            var occupiedClass = this.getClassNameFor('droppable:occupied');\n\n            var _iterator2 = _createForOfIteratorHelper(this.dropzones),\n                _step2;\n\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var dropzone = _step2.value;\n                dropzone.classList.remove(this.getClassNameFor('droppable:active'));\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n\n            if (this.lastDropzone && this.lastDropzone !== this.initialDropzone) {\n              this.initialDropzone.classList.remove(occupiedClass);\n            }\n\n            this.dropzones = null;\n            this.lastDropzone = null;\n            this.initialDropzone = null;\n          }\n          /**\n           * Drops a draggable element into a dropzone element\n           * @private\n           * @param {DragMoveEvent} event - Drag move event\n           * @param {HTMLElement} dropzone - Dropzone element to drop draggable into\n           */\n\n        }, {\n          key: dropInDropzone,\n          value: function value(event, dropzone) {\n            var droppableDroppedEvent = new _DroppableEvent.DroppableDroppedEvent({\n              dragEvent: event,\n              dropzone: dropzone\n            });\n            this.trigger(droppableDroppedEvent);\n\n            if (droppableDroppedEvent.canceled()) {\n              return false;\n            }\n\n            var occupiedClass = this.getClassNameFor('droppable:occupied');\n\n            if (this.lastDropzone) {\n              this.lastDropzone.classList.remove(occupiedClass);\n            }\n\n            dropzone.appendChild(event.source);\n            dropzone.classList.add(occupiedClass);\n            return true;\n          }\n          /**\n           * Moves the previously dropped element back into its original dropzone\n           * @private\n           * @param {DragMoveEvent} event - Drag move event\n           */\n\n        }, {\n          key: returnToOriginalDropzone,\n          value: function value(event) {\n            var droppableReturnedEvent = new _DroppableEvent.DroppableReturnedEvent({\n              dragEvent: event,\n              dropzone: this.lastDropzone\n            });\n            this.trigger(droppableReturnedEvent);\n\n            if (droppableReturnedEvent.canceled()) {\n              return;\n            }\n\n            this.initialDropzone.appendChild(event.source);\n            this.lastDropzone.classList.remove(this.getClassNameFor('droppable:occupied'));\n          }\n          /**\n           * Returns closest dropzone element for even target\n           * @private\n           * @param {HTMLElement} target - Event target\n           * @return {HTMLElement|null}\n           */\n\n        }, {\n          key: closestDropzone,\n          value: function value(target) {\n            if (!this.dropzones) {\n              return null;\n            }\n\n            return (0, _utils.closest)(target, this.dropzones);\n          }\n          /**\n           * Returns all current dropzone elements for this draggable instance\n           * @private\n           * @return {NodeList|HTMLElement[]|Array}\n           */\n\n        }, {\n          key: getDropzones,\n          value: function value() {\n            var dropzone = this.options.dropzone;\n\n            if (typeof dropzone === 'string') {\n              return document.querySelectorAll(dropzone);\n            } else if (dropzone instanceof NodeList || dropzone instanceof Array) {\n              return dropzone;\n            } else if (typeof dropzone === 'function') {\n              return dropzone();\n            } else {\n              return [];\n            }\n          }\n        }]);\n\n        return Droppable;\n      }(_Draggable2.default);\n\n      exports.default = Droppable;\n      /***/\n    },\n    /* 33 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.DroppableStopEvent = exports.DroppableReturnedEvent = exports.DroppableDroppedEvent = exports.DroppableStartEvent = exports.DroppableEvent = undefined;\n\n      var _AbstractEvent = __webpack_require__(0);\n\n      var _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      /**\n       * Base droppable event\n       * @class DroppableEvent\n       * @module DroppableEvent\n       * @extends AbstractEvent\n       */\n\n\n      var DroppableEvent = /*#__PURE__*/function (_AbstractEvent2$defau5) {\n        _inherits(DroppableEvent, _AbstractEvent2$defau5);\n\n        var _super24 = _createSuper(DroppableEvent);\n\n        function DroppableEvent() {\n          _classCallCheck(this, DroppableEvent);\n\n          return _super24.apply(this, arguments);\n        }\n\n        _createClass(DroppableEvent, [{\n          key: \"dragEvent\",\n          get:\n          /**\n           * Original drag event that triggered this droppable event\n           * @property dragEvent\n           * @type {DragEvent}\n           * @readonly\n           */\n          function get() {\n            return this.data.dragEvent;\n          }\n        }]);\n\n        return DroppableEvent;\n      }(_AbstractEvent2.default);\n\n      exports.DroppableEvent = DroppableEvent;\n      /**\n       * Droppable start event\n       * @class DroppableStartEvent\n       * @module DroppableStartEvent\n       * @extends DroppableEvent\n       */\n\n      DroppableEvent.type = 'droppable';\n\n      var DroppableStartEvent = /*#__PURE__*/function (_DroppableEvent2) {\n        _inherits(DroppableStartEvent, _DroppableEvent2);\n\n        var _super25 = _createSuper(DroppableStartEvent);\n\n        function DroppableStartEvent() {\n          _classCallCheck(this, DroppableStartEvent);\n\n          return _super25.apply(this, arguments);\n        }\n\n        _createClass(DroppableStartEvent, [{\n          key: \"dropzone\",\n          get:\n          /**\n           * The initial dropzone element of the currently dragging draggable element\n           * @property dropzone\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.dropzone;\n          }\n        }]);\n\n        return DroppableStartEvent;\n      }(DroppableEvent);\n\n      exports.DroppableStartEvent = DroppableStartEvent;\n      /**\n       * Droppable dropped event\n       * @class DroppableDroppedEvent\n       * @module DroppableDroppedEvent\n       * @extends DroppableEvent\n       */\n\n      DroppableStartEvent.type = 'droppable:start';\n      DroppableStartEvent.cancelable = true;\n\n      var DroppableDroppedEvent = /*#__PURE__*/function (_DroppableEvent3) {\n        _inherits(DroppableDroppedEvent, _DroppableEvent3);\n\n        var _super26 = _createSuper(DroppableDroppedEvent);\n\n        function DroppableDroppedEvent() {\n          _classCallCheck(this, DroppableDroppedEvent);\n\n          return _super26.apply(this, arguments);\n        }\n\n        _createClass(DroppableDroppedEvent, [{\n          key: \"dropzone\",\n          get:\n          /**\n           * The dropzone element you dropped the draggable element into\n           * @property dropzone\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.dropzone;\n          }\n        }]);\n\n        return DroppableDroppedEvent;\n      }(DroppableEvent);\n\n      exports.DroppableDroppedEvent = DroppableDroppedEvent;\n      /**\n       * Droppable returned event\n       * @class DroppableReturnedEvent\n       * @module DroppableReturnedEvent\n       * @extends DroppableEvent\n       */\n\n      DroppableDroppedEvent.type = 'droppable:dropped';\n      DroppableDroppedEvent.cancelable = true;\n\n      var DroppableReturnedEvent = /*#__PURE__*/function (_DroppableEvent4) {\n        _inherits(DroppableReturnedEvent, _DroppableEvent4);\n\n        var _super27 = _createSuper(DroppableReturnedEvent);\n\n        function DroppableReturnedEvent() {\n          _classCallCheck(this, DroppableReturnedEvent);\n\n          return _super27.apply(this, arguments);\n        }\n\n        _createClass(DroppableReturnedEvent, [{\n          key: \"dropzone\",\n          get:\n          /**\n           * The dropzone element you dragged away from\n           * @property dropzone\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.dropzone;\n          }\n        }]);\n\n        return DroppableReturnedEvent;\n      }(DroppableEvent);\n\n      exports.DroppableReturnedEvent = DroppableReturnedEvent;\n      /**\n       * Droppable stop event\n       * @class DroppableStopEvent\n       * @module DroppableStopEvent\n       * @extends DroppableEvent\n       */\n\n      DroppableReturnedEvent.type = 'droppable:returned';\n      DroppableReturnedEvent.cancelable = true;\n\n      var DroppableStopEvent = /*#__PURE__*/function (_DroppableEvent5) {\n        _inherits(DroppableStopEvent, _DroppableEvent5);\n\n        var _super28 = _createSuper(DroppableStopEvent);\n\n        function DroppableStopEvent() {\n          _classCallCheck(this, DroppableStopEvent);\n\n          return _super28.apply(this, arguments);\n        }\n\n        _createClass(DroppableStopEvent, [{\n          key: \"dropzone\",\n          get:\n          /**\n           * The final dropzone element of the draggable element\n           * @property dropzone\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.dropzone;\n          }\n        }]);\n\n        return DroppableStopEvent;\n      }(DroppableEvent);\n\n      exports.DroppableStopEvent = DroppableStopEvent;\n      DroppableStopEvent.type = 'droppable:stop';\n      DroppableStopEvent.cancelable = true;\n      /***/\n    },\n    /* 34 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _DroppableEvent = __webpack_require__(11);\n\n      Object.keys(_DroppableEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _DroppableEvent[key];\n          }\n        });\n      });\n\n      var _Droppable = __webpack_require__(32);\n\n      var _Droppable2 = _interopRequireDefault(_Droppable);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _Droppable2.default;\n      /***/\n    },\n    /* 35 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      /**\n       * The Emitter is a simple emitter class that provides you with `on()`, `off()` and `trigger()` methods\n       * @class Emitter\n       * @module Emitter\n       */\n\n      var Emitter = /*#__PURE__*/function () {\n        function Emitter() {\n          _classCallCheck(this, Emitter);\n\n          this.callbacks = {};\n        }\n        /**\n         * Registers callbacks by event name\n         * @param {String} type\n         * @param {...Function} callbacks\n         */\n\n\n        _createClass(Emitter, [{\n          key: \"on\",\n          value: function on(type) {\n            var _this$callbacks$type;\n\n            if (!this.callbacks[type]) {\n              this.callbacks[type] = [];\n            }\n\n            for (var _len = arguments.length, callbacks = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n              callbacks[_key - 1] = arguments[_key];\n            }\n\n            (_this$callbacks$type = this.callbacks[type]).push.apply(_this$callbacks$type, callbacks);\n\n            return this;\n          }\n          /**\n           * Unregisters callbacks by event name\n           * @param {String} type\n           * @param {Function} callback\n           */\n\n        }, {\n          key: \"off\",\n          value: function off(type, callback) {\n            if (!this.callbacks[type]) {\n              return null;\n            }\n\n            var copy = this.callbacks[type].slice(0);\n\n            for (var i = 0; i < copy.length; i++) {\n              if (callback === copy[i]) {\n                this.callbacks[type].splice(i, 1);\n              }\n            }\n\n            return this;\n          }\n          /**\n           * Triggers event callbacks by event object\n           * @param {AbstractEvent} event\n           */\n\n        }, {\n          key: \"trigger\",\n          value: function trigger(event) {\n            if (!this.callbacks[event.type]) {\n              return null;\n            }\n\n            var callbacks = _toConsumableArray(this.callbacks[event.type]);\n\n            var caughtErrors = [];\n\n            for (var i = callbacks.length - 1; i >= 0; i--) {\n              var callback = callbacks[i];\n\n              try {\n                callback(event);\n              } catch (error) {\n                caughtErrors.push(error);\n              }\n            }\n\n            if (caughtErrors.length) {\n              /* eslint-disable no-console */\n              console.error(\"Draggable caught errors while triggering '\".concat(event.type, \"'\"), caughtErrors);\n              /* eslint-disable no-console */\n            }\n\n            return this;\n          }\n        }]);\n\n        return Emitter;\n      }();\n\n      exports.default = Emitter;\n      /***/\n    },\n    /* 36 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _Emitter = __webpack_require__(35);\n\n      var _Emitter2 = _interopRequireDefault(_Emitter);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _Emitter2.default;\n      /***/\n    },\n    /* 37 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.defaultOptions = undefined;\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _utils = __webpack_require__(2);\n\n      var _Plugins = __webpack_require__(12);\n\n      var _Emitter = __webpack_require__(36);\n\n      var _Emitter2 = _interopRequireDefault(_Emitter);\n\n      var _Sensors = __webpack_require__(6);\n\n      var _DraggableEvent = __webpack_require__(13);\n\n      var _DragEvent = __webpack_require__(14);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var onDragStart = Symbol('onDragStart');\n      var onDragMove = Symbol('onDragMove');\n      var onDragStop = Symbol('onDragStop');\n      var onDragPressure = Symbol('onDragPressure');\n      /**\n       * @const {Object} defaultAnnouncements\n       * @const {Function} defaultAnnouncements['drag:start']\n       * @const {Function} defaultAnnouncements['drag:stop']\n       */\n\n      var defaultAnnouncements = {\n        'drag:start': function dragStart(event) {\n          return \"Picked up \".concat(event.source.textContent.trim() || event.source.id || 'draggable element');\n        },\n        'drag:stop': function dragStop(event) {\n          return \"Released \".concat(event.source.textContent.trim() || event.source.id || 'draggable element');\n        }\n      };\n      var defaultClasses = {\n        'container:dragging': 'draggable-container--is-dragging',\n        'source:dragging': 'draggable-source--is-dragging',\n        'source:placed': 'draggable-source--placed',\n        'container:placed': 'draggable-container--placed',\n        'body:dragging': 'draggable--is-dragging',\n        'draggable:over': 'draggable--over',\n        'container:over': 'draggable-container--over',\n        'source:original': 'draggable--original',\n        mirror: 'draggable-mirror'\n      };\n      var defaultOptions = exports.defaultOptions = {\n        draggable: '.draggable-source',\n        handle: null,\n        delay: 100,\n        placedTimeout: 800,\n        plugins: [],\n        sensors: []\n      };\n      /**\n       * This is the core draggable library that does the heavy lifting\n       * @class Draggable\n       * @module Draggable\n       */\n\n      var Draggable = /*#__PURE__*/function () {\n        /**\n         * Draggable constructor.\n         * @constructs Draggable\n         * @param {HTMLElement[]|NodeList|HTMLElement} containers - Draggable containers\n         * @param {Object} options - Options for draggable\n         */\n        function Draggable() {\n          var _this12 = this;\n\n          var containers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [document.body];\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n          _classCallCheck(this, Draggable);\n\n          /**\n           * Draggable containers\n           * @property containers\n           * @type {HTMLElement[]}\n           */\n          if (containers instanceof NodeList || containers instanceof Array) {\n            this.containers = _toConsumableArray(containers);\n          } else if (containers instanceof HTMLElement) {\n            this.containers = [containers];\n          } else {\n            throw new Error('Draggable containers are expected to be of type `NodeList`, `HTMLElement[]` or `HTMLElement`');\n          }\n\n          this.options = _extends({}, defaultOptions, options, {\n            classes: _extends({}, defaultClasses, options.classes || {}),\n            announcements: _extends({}, defaultAnnouncements, options.announcements || {})\n          });\n          /**\n           * Draggables event emitter\n           * @property emitter\n           * @type {Emitter}\n           */\n\n          this.emitter = new _Emitter2.default();\n          /**\n           * Current drag state\n           * @property dragging\n           * @type {Boolean}\n           */\n\n          this.dragging = false;\n          /**\n           * Active plugins\n           * @property plugins\n           * @type {Plugin[]}\n           */\n\n          this.plugins = [];\n          /**\n           * Active sensors\n           * @property sensors\n           * @type {Sensor[]}\n           */\n\n          this.sensors = [];\n          this[onDragStart] = this[onDragStart].bind(this);\n          this[onDragMove] = this[onDragMove].bind(this);\n          this[onDragStop] = this[onDragStop].bind(this);\n          this[onDragPressure] = this[onDragPressure].bind(this);\n          document.addEventListener('drag:start', this[onDragStart], true);\n          document.addEventListener('drag:move', this[onDragMove], true);\n          document.addEventListener('drag:stop', this[onDragStop], true);\n          document.addEventListener('drag:pressure', this[onDragPressure], true);\n          var defaultPlugins = Object.values(Draggable.Plugins).map(function (Plugin) {\n            return Plugin;\n          });\n          var defaultSensors = [_Sensors.MouseSensor, _Sensors.TouchSensor];\n          this.addPlugin.apply(this, [].concat(_toConsumableArray(defaultPlugins), _toConsumableArray(this.options.plugins)));\n          this.addSensor.apply(this, [].concat(defaultSensors, _toConsumableArray(this.options.sensors)));\n          var draggableInitializedEvent = new _DraggableEvent.DraggableInitializedEvent({\n            draggable: this\n          });\n          this.on('mirror:created', function (_ref18) {\n            var mirror = _ref18.mirror;\n            return _this12.mirror = mirror;\n          });\n          this.on('mirror:destroy', function () {\n            return _this12.mirror = null;\n          });\n          this.trigger(draggableInitializedEvent);\n        }\n        /**\n         * Destroys Draggable instance. This removes all internal event listeners and\n         * deactivates sensors and plugins\n         */\n\n        /**\n         * Default plugins draggable uses\n         * @static\n         * @property {Object} Plugins\n         * @property {Announcement} Plugins.Announcement\n         * @property {Focusable} Plugins.Focusable\n         * @property {Mirror} Plugins.Mirror\n         * @property {Scrollable} Plugins.Scrollable\n         * @type {Object}\n         */\n\n\n        _createClass(Draggable, [{\n          key: \"destroy\",\n          value: function destroy() {\n            document.removeEventListener('drag:start', this[onDragStart], true);\n            document.removeEventListener('drag:move', this[onDragMove], true);\n            document.removeEventListener('drag:stop', this[onDragStop], true);\n            document.removeEventListener('drag:pressure', this[onDragPressure], true);\n            var draggableDestroyEvent = new _DraggableEvent.DraggableDestroyEvent({\n              draggable: this\n            });\n            this.trigger(draggableDestroyEvent);\n            this.removePlugin.apply(this, _toConsumableArray(this.plugins.map(function (plugin) {\n              return plugin.constructor;\n            })));\n            this.removeSensor.apply(this, _toConsumableArray(this.sensors.map(function (sensor) {\n              return sensor.constructor;\n            })));\n          }\n          /**\n           * Adds plugin to this draggable instance. This will end up calling the attach method of the plugin\n           * @param {...typeof Plugin} plugins - Plugins that you want attached to draggable\n           * @return {Draggable}\n           * @example draggable.addPlugin(CustomA11yPlugin, CustomMirrorPlugin)\n           */\n\n        }, {\n          key: \"addPlugin\",\n          value: function addPlugin() {\n            var _this13 = this;\n\n            for (var _len2 = arguments.length, plugins = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              plugins[_key2] = arguments[_key2];\n            }\n\n            var activePlugins = plugins.map(function (Plugin) {\n              return new Plugin(_this13);\n            });\n            activePlugins.forEach(function (plugin) {\n              return plugin.attach();\n            });\n            this.plugins = [].concat(_toConsumableArray(this.plugins), _toConsumableArray(activePlugins));\n            return this;\n          }\n          /**\n           * Removes plugins that are already attached to this draggable instance. This will end up calling\n           * the detach method of the plugin\n           * @param {...typeof Plugin} plugins - Plugins that you want detached from draggable\n           * @return {Draggable}\n           * @example draggable.removePlugin(MirrorPlugin, CustomMirrorPlugin)\n           */\n\n        }, {\n          key: \"removePlugin\",\n          value: function removePlugin() {\n            for (var _len3 = arguments.length, plugins = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n              plugins[_key3] = arguments[_key3];\n            }\n\n            var removedPlugins = this.plugins.filter(function (plugin) {\n              return plugins.includes(plugin.constructor);\n            });\n            removedPlugins.forEach(function (plugin) {\n              return plugin.detach();\n            });\n            this.plugins = this.plugins.filter(function (plugin) {\n              return !plugins.includes(plugin.constructor);\n            });\n            return this;\n          }\n          /**\n           * Adds sensors to this draggable instance. This will end up calling the attach method of the sensor\n           * @param {...typeof Sensor} sensors - Sensors that you want attached to draggable\n           * @return {Draggable}\n           * @example draggable.addSensor(ForceTouchSensor, CustomSensor)\n           */\n\n        }, {\n          key: \"addSensor\",\n          value: function addSensor() {\n            var _this14 = this;\n\n            for (var _len4 = arguments.length, sensors = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n              sensors[_key4] = arguments[_key4];\n            }\n\n            var activeSensors = sensors.map(function (Sensor) {\n              return new Sensor(_this14.containers, _this14.options);\n            });\n            activeSensors.forEach(function (sensor) {\n              return sensor.attach();\n            });\n            this.sensors = [].concat(_toConsumableArray(this.sensors), _toConsumableArray(activeSensors));\n            return this;\n          }\n          /**\n           * Removes sensors that are already attached to this draggable instance. This will end up calling\n           * the detach method of the sensor\n           * @param {...typeof Sensor} sensors - Sensors that you want attached to draggable\n           * @return {Draggable}\n           * @example draggable.removeSensor(TouchSensor, DragSensor)\n           */\n\n        }, {\n          key: \"removeSensor\",\n          value: function removeSensor() {\n            for (var _len5 = arguments.length, sensors = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n              sensors[_key5] = arguments[_key5];\n            }\n\n            var removedSensors = this.sensors.filter(function (sensor) {\n              return sensors.includes(sensor.constructor);\n            });\n            removedSensors.forEach(function (sensor) {\n              return sensor.detach();\n            });\n            this.sensors = this.sensors.filter(function (sensor) {\n              return !sensors.includes(sensor.constructor);\n            });\n            return this;\n          }\n          /**\n           * Adds container to this draggable instance\n           * @param {...HTMLElement} containers - Containers you want to add to draggable\n           * @return {Draggable}\n           * @example draggable.addContainer(document.body)\n           */\n\n        }, {\n          key: \"addContainer\",\n          value: function addContainer() {\n            for (var _len6 = arguments.length, containers = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n              containers[_key6] = arguments[_key6];\n            }\n\n            this.containers = [].concat(_toConsumableArray(this.containers), containers);\n            this.sensors.forEach(function (sensor) {\n              return sensor.addContainer.apply(sensor, containers);\n            });\n            return this;\n          }\n          /**\n           * Removes container from this draggable instance\n           * @param {...HTMLElement} containers - Containers you want to remove from draggable\n           * @return {Draggable}\n           * @example draggable.removeContainer(document.body)\n           */\n\n        }, {\n          key: \"removeContainer\",\n          value: function removeContainer() {\n            for (var _len7 = arguments.length, containers = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n              containers[_key7] = arguments[_key7];\n            }\n\n            this.containers = this.containers.filter(function (container) {\n              return !containers.includes(container);\n            });\n            this.sensors.forEach(function (sensor) {\n              return sensor.removeContainer.apply(sensor, containers);\n            });\n            return this;\n          }\n          /**\n           * Adds listener for draggable events\n           * @param {String} type - Event name\n           * @param {...Function} callbacks - Event callbacks\n           * @return {Draggable}\n           * @example draggable.on('drag:start', (dragEvent) => dragEvent.cancel());\n           */\n\n        }, {\n          key: \"on\",\n          value: function on(type) {\n            var _this$emitter;\n\n            for (var _len8 = arguments.length, callbacks = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n              callbacks[_key8 - 1] = arguments[_key8];\n            }\n\n            (_this$emitter = this.emitter).on.apply(_this$emitter, [type].concat(callbacks));\n\n            return this;\n          }\n          /**\n           * Removes listener from draggable\n           * @param {String} type - Event name\n           * @param {Function} callback - Event callback\n           * @return {Draggable}\n           * @example draggable.off('drag:start', handlerFunction);\n           */\n\n        }, {\n          key: \"off\",\n          value: function off(type, callback) {\n            this.emitter.off(type, callback);\n            return this;\n          }\n          /**\n           * Triggers draggable event\n           * @param {AbstractEvent} event - Event instance\n           * @return {Draggable}\n           * @example draggable.trigger(event);\n           */\n\n        }, {\n          key: \"trigger\",\n          value: function trigger(event) {\n            this.emitter.trigger(event);\n            return this;\n          }\n          /**\n           * Returns class name for class identifier\n           * @param {String} name - Name of class identifier\n           * @return {String|null}\n           */\n\n        }, {\n          key: \"getClassNameFor\",\n          value: function getClassNameFor(name) {\n            return this.options.classes[name];\n          }\n          /**\n           * Returns true if this draggable instance is currently dragging\n           * @return {Boolean}\n           */\n\n        }, {\n          key: \"isDragging\",\n          value: function isDragging() {\n            return Boolean(this.dragging);\n          }\n          /**\n           * Returns all draggable elements\n           * @return {HTMLElement[]}\n           */\n\n        }, {\n          key: \"getDraggableElements\",\n          value: function getDraggableElements() {\n            var _this15 = this;\n\n            return this.containers.reduce(function (current, container) {\n              return [].concat(_toConsumableArray(current), _toConsumableArray(_this15.getDraggableElementsForContainer(container)));\n            }, []);\n          }\n          /**\n           * Returns draggable elements for a given container, excluding the mirror and\n           * original source element if present\n           * @param {HTMLElement} container\n           * @return {HTMLElement[]}\n           */\n\n        }, {\n          key: \"getDraggableElementsForContainer\",\n          value: function getDraggableElementsForContainer(container) {\n            var _this16 = this;\n\n            var allDraggableElements = container.querySelectorAll(this.options.draggable);\n            return _toConsumableArray(allDraggableElements).filter(function (childElement) {\n              return childElement !== _this16.originalSource && childElement !== _this16.mirror;\n            });\n          }\n          /**\n           * Drag start handler\n           * @private\n           * @param {Event} event - DOM Drag event\n           */\n\n        }, {\n          key: onDragStart,\n          value: function value(event) {\n            var _this17 = this;\n\n            var sensorEvent = getSensorEvent(event);\n            var target = sensorEvent.target,\n                container = sensorEvent.container;\n\n            if (!this.containers.includes(container)) {\n              return;\n            }\n\n            if (this.options.handle && target && !(0, _utils.closest)(target, this.options.handle)) {\n              sensorEvent.cancel();\n              return;\n            } // Find draggable source element\n\n\n            this.originalSource = (0, _utils.closest)(target, this.options.draggable);\n            this.sourceContainer = container;\n\n            if (!this.originalSource) {\n              sensorEvent.cancel();\n              return;\n            }\n\n            if (this.lastPlacedSource && this.lastPlacedContainer) {\n              clearTimeout(this.placedTimeoutID);\n              this.lastPlacedSource.classList.remove(this.getClassNameFor('source:placed'));\n              this.lastPlacedContainer.classList.remove(this.getClassNameFor('container:placed'));\n            }\n\n            this.source = this.originalSource.cloneNode(true);\n            this.originalSource.parentNode.insertBefore(this.source, this.originalSource);\n            this.originalSource.style.display = 'none';\n            var dragEvent = new _DragEvent.DragStartEvent({\n              source: this.source,\n              originalSource: this.originalSource,\n              sourceContainer: container,\n              sensorEvent: sensorEvent\n            });\n            this.trigger(dragEvent);\n            this.dragging = !dragEvent.canceled();\n\n            if (dragEvent.canceled()) {\n              this.source.parentNode.removeChild(this.source);\n              this.originalSource.style.display = null;\n              return;\n            }\n\n            this.originalSource.classList.add(this.getClassNameFor('source:original'));\n            this.source.classList.add(this.getClassNameFor('source:dragging'));\n            this.sourceContainer.classList.add(this.getClassNameFor('container:dragging'));\n            document.body.classList.add(this.getClassNameFor('body:dragging'));\n            applyUserSelect(document.body, 'none');\n            requestAnimationFrame(function () {\n              var oldSensorEvent = getSensorEvent(event);\n              var newSensorEvent = oldSensorEvent.clone({\n                target: _this17.source\n              });\n\n              _this17[onDragMove](_extends({}, event, {\n                detail: newSensorEvent\n              }));\n            });\n          }\n          /**\n           * Drag move handler\n           * @private\n           * @param {Event} event - DOM Drag event\n           */\n\n        }, {\n          key: onDragMove,\n          value: function value(event) {\n            if (!this.dragging) {\n              return;\n            }\n\n            var sensorEvent = getSensorEvent(event);\n            var container = sensorEvent.container;\n            var target = sensorEvent.target;\n            var dragMoveEvent = new _DragEvent.DragMoveEvent({\n              source: this.source,\n              originalSource: this.originalSource,\n              sourceContainer: container,\n              sensorEvent: sensorEvent\n            });\n            this.trigger(dragMoveEvent);\n\n            if (dragMoveEvent.canceled()) {\n              sensorEvent.cancel();\n            }\n\n            target = (0, _utils.closest)(target, this.options.draggable);\n            var withinCorrectContainer = (0, _utils.closest)(sensorEvent.target, this.containers);\n            var overContainer = sensorEvent.overContainer || withinCorrectContainer;\n            var isLeavingContainer = this.currentOverContainer && overContainer !== this.currentOverContainer;\n            var isLeavingDraggable = this.currentOver && target !== this.currentOver;\n            var isOverContainer = overContainer && this.currentOverContainer !== overContainer;\n            var isOverDraggable = withinCorrectContainer && target && this.currentOver !== target;\n\n            if (isLeavingDraggable) {\n              var dragOutEvent = new _DragEvent.DragOutEvent({\n                source: this.source,\n                originalSource: this.originalSource,\n                sourceContainer: container,\n                sensorEvent: sensorEvent,\n                over: this.currentOver\n              });\n              this.currentOver.classList.remove(this.getClassNameFor('draggable:over'));\n              this.currentOver = null;\n              this.trigger(dragOutEvent);\n            }\n\n            if (isLeavingContainer) {\n              var dragOutContainerEvent = new _DragEvent.DragOutContainerEvent({\n                source: this.source,\n                originalSource: this.originalSource,\n                sourceContainer: container,\n                sensorEvent: sensorEvent,\n                overContainer: this.currentOverContainer\n              });\n              this.currentOverContainer.classList.remove(this.getClassNameFor('container:over'));\n              this.currentOverContainer = null;\n              this.trigger(dragOutContainerEvent);\n            }\n\n            if (isOverContainer) {\n              overContainer.classList.add(this.getClassNameFor('container:over'));\n              var dragOverContainerEvent = new _DragEvent.DragOverContainerEvent({\n                source: this.source,\n                originalSource: this.originalSource,\n                sourceContainer: container,\n                sensorEvent: sensorEvent,\n                overContainer: overContainer\n              });\n              this.currentOverContainer = overContainer;\n              this.trigger(dragOverContainerEvent);\n            }\n\n            if (isOverDraggable) {\n              target.classList.add(this.getClassNameFor('draggable:over'));\n              var dragOverEvent = new _DragEvent.DragOverEvent({\n                source: this.source,\n                originalSource: this.originalSource,\n                sourceContainer: container,\n                sensorEvent: sensorEvent,\n                overContainer: overContainer,\n                over: target\n              });\n              this.currentOver = target;\n              this.trigger(dragOverEvent);\n            }\n          }\n          /**\n           * Drag stop handler\n           * @private\n           * @param {Event} event - DOM Drag event\n           */\n\n        }, {\n          key: onDragStop,\n          value: function value(event) {\n            var _this18 = this;\n\n            if (!this.dragging) {\n              return;\n            }\n\n            this.dragging = false;\n            var dragStopEvent = new _DragEvent.DragStopEvent({\n              source: this.source,\n              originalSource: this.originalSource,\n              sensorEvent: event.sensorEvent,\n              sourceContainer: this.sourceContainer\n            });\n            this.trigger(dragStopEvent);\n            this.source.parentNode.insertBefore(this.originalSource, this.source);\n            this.source.parentNode.removeChild(this.source);\n            this.originalSource.style.display = '';\n            this.source.classList.remove(this.getClassNameFor('source:dragging'));\n            this.originalSource.classList.remove(this.getClassNameFor('source:original'));\n            this.originalSource.classList.add(this.getClassNameFor('source:placed'));\n            this.sourceContainer.classList.add(this.getClassNameFor('container:placed'));\n            this.sourceContainer.classList.remove(this.getClassNameFor('container:dragging'));\n            document.body.classList.remove(this.getClassNameFor('body:dragging'));\n            applyUserSelect(document.body, '');\n\n            if (this.currentOver) {\n              this.currentOver.classList.remove(this.getClassNameFor('draggable:over'));\n            }\n\n            if (this.currentOverContainer) {\n              this.currentOverContainer.classList.remove(this.getClassNameFor('container:over'));\n            }\n\n            this.lastPlacedSource = this.originalSource;\n            this.lastPlacedContainer = this.sourceContainer;\n            this.placedTimeoutID = setTimeout(function () {\n              if (_this18.lastPlacedSource) {\n                _this18.lastPlacedSource.classList.remove(_this18.getClassNameFor('source:placed'));\n              }\n\n              if (_this18.lastPlacedContainer) {\n                _this18.lastPlacedContainer.classList.remove(_this18.getClassNameFor('container:placed'));\n              }\n\n              _this18.lastPlacedSource = null;\n              _this18.lastPlacedContainer = null;\n            }, this.options.placedTimeout);\n            this.source = null;\n            this.originalSource = null;\n            this.currentOverContainer = null;\n            this.currentOver = null;\n            this.sourceContainer = null;\n          }\n          /**\n           * Drag pressure handler\n           * @private\n           * @param {Event} event - DOM Drag event\n           */\n\n        }, {\n          key: onDragPressure,\n          value: function value(event) {\n            if (!this.dragging) {\n              return;\n            }\n\n            var sensorEvent = getSensorEvent(event);\n            var source = this.source || (0, _utils.closest)(sensorEvent.originalEvent.target, this.options.draggable);\n            var dragPressureEvent = new _DragEvent.DragPressureEvent({\n              sensorEvent: sensorEvent,\n              source: source,\n              pressure: sensorEvent.pressure\n            });\n            this.trigger(dragPressureEvent);\n          }\n        }]);\n\n        return Draggable;\n      }();\n\n      exports.default = Draggable;\n      Draggable.Plugins = {\n        Announcement: _Plugins.Announcement,\n        Focusable: _Plugins.Focusable,\n        Mirror: _Plugins.Mirror,\n        Scrollable: _Plugins.Scrollable\n      };\n\n      function getSensorEvent(event) {\n        return event.detail;\n      }\n\n      function applyUserSelect(element, value) {\n        element.style.webkitUserSelect = value;\n        element.style.mozUserSelect = value;\n        element.style.msUserSelect = value;\n        element.style.oUserSelect = value;\n        element.style.userSelect = value;\n      }\n      /***/\n\n    },\n    /* 38 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _Sensor = __webpack_require__(4);\n\n      var _Sensor2 = _interopRequireDefault(_Sensor);\n\n      var _SensorEvent = __webpack_require__(3);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var onMouseForceWillBegin = Symbol('onMouseForceWillBegin');\n      var onMouseForceDown = Symbol('onMouseForceDown');\n      var onMouseDown = Symbol('onMouseDown');\n      var onMouseForceChange = Symbol('onMouseForceChange');\n      var onMouseMove = Symbol('onMouseMove');\n      var onMouseUp = Symbol('onMouseUp');\n      var onMouseForceGlobalChange = Symbol('onMouseForceGlobalChange');\n      /**\n       * This sensor picks up native force touch events and dictates drag operations\n       * @class ForceTouchSensor\n       * @module ForceTouchSensor\n       * @extends Sensor\n       */\n\n      var ForceTouchSensor = /*#__PURE__*/function (_Sensor2$default) {\n        _inherits(ForceTouchSensor, _Sensor2$default);\n\n        var _super29 = _createSuper(ForceTouchSensor);\n\n        /**\n         * ForceTouchSensor constructor.\n         * @constructs ForceTouchSensor\n         * @param {HTMLElement[]|NodeList|HTMLElement} containers - Containers\n         * @param {Object} options - Options\n         */\n        function ForceTouchSensor() {\n          var _this19;\n\n          var containers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n          _classCallCheck(this, ForceTouchSensor);\n\n          _this19 = _super29.call(this, containers, options);\n          /**\n           * Draggable element needs to be remembered to unset the draggable attribute after drag operation has completed\n           * @property mightDrag\n           * @type {Boolean}\n           */\n\n          _this19.mightDrag = false;\n          _this19[onMouseForceWillBegin] = _this19[onMouseForceWillBegin].bind(_assertThisInitialized(_this19));\n          _this19[onMouseForceDown] = _this19[onMouseForceDown].bind(_assertThisInitialized(_this19));\n          _this19[onMouseDown] = _this19[onMouseDown].bind(_assertThisInitialized(_this19));\n          _this19[onMouseForceChange] = _this19[onMouseForceChange].bind(_assertThisInitialized(_this19));\n          _this19[onMouseMove] = _this19[onMouseMove].bind(_assertThisInitialized(_this19));\n          _this19[onMouseUp] = _this19[onMouseUp].bind(_assertThisInitialized(_this19));\n          return _this19;\n        }\n        /**\n         * Attaches sensors event listeners to the DOM\n         */\n\n\n        _createClass(ForceTouchSensor, [{\n          key: \"attach\",\n          value: function attach() {\n            var _iterator3 = _createForOfIteratorHelper(this.containers),\n                _step3;\n\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var container = _step3.value;\n                container.addEventListener('webkitmouseforcewillbegin', this[onMouseForceWillBegin], false);\n                container.addEventListener('webkitmouseforcedown', this[onMouseForceDown], false);\n                container.addEventListener('mousedown', this[onMouseDown], true);\n                container.addEventListener('webkitmouseforcechanged', this[onMouseForceChange], false);\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n\n            document.addEventListener('mousemove', this[onMouseMove]);\n            document.addEventListener('mouseup', this[onMouseUp]);\n          }\n          /**\n           * Detaches sensors event listeners to the DOM\n           */\n\n        }, {\n          key: \"detach\",\n          value: function detach() {\n            var _iterator4 = _createForOfIteratorHelper(this.containers),\n                _step4;\n\n            try {\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                var container = _step4.value;\n                container.removeEventListener('webkitmouseforcewillbegin', this[onMouseForceWillBegin], false);\n                container.removeEventListener('webkitmouseforcedown', this[onMouseForceDown], false);\n                container.removeEventListener('mousedown', this[onMouseDown], true);\n                container.removeEventListener('webkitmouseforcechanged', this[onMouseForceChange], false);\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n\n            document.removeEventListener('mousemove', this[onMouseMove]);\n            document.removeEventListener('mouseup', this[onMouseUp]);\n          }\n          /**\n           * Mouse force will begin handler\n           * @private\n           * @param {Event} event - Mouse force will begin event\n           */\n\n        }, {\n          key: onMouseForceWillBegin,\n          value: function value(event) {\n            event.preventDefault();\n            this.mightDrag = true;\n          }\n          /**\n           * Mouse force down handler\n           * @private\n           * @param {Event} event - Mouse force down event\n           */\n\n        }, {\n          key: onMouseForceDown,\n          value: function value(event) {\n            if (this.dragging) {\n              return;\n            }\n\n            var target = document.elementFromPoint(event.clientX, event.clientY);\n            var container = event.currentTarget;\n            var dragStartEvent = new _SensorEvent.DragStartSensorEvent({\n              clientX: event.clientX,\n              clientY: event.clientY,\n              target: target,\n              container: container,\n              originalEvent: event\n            });\n            this.trigger(container, dragStartEvent);\n            this.currentContainer = container;\n            this.dragging = !dragStartEvent.canceled();\n            this.mightDrag = false;\n          }\n          /**\n           * Mouse up handler\n           * @private\n           * @param {Event} event - Mouse up event\n           */\n\n        }, {\n          key: onMouseUp,\n          value: function value(event) {\n            if (!this.dragging) {\n              return;\n            }\n\n            var dragStopEvent = new _SensorEvent.DragStopSensorEvent({\n              clientX: event.clientX,\n              clientY: event.clientY,\n              target: null,\n              container: this.currentContainer,\n              originalEvent: event\n            });\n            this.trigger(this.currentContainer, dragStopEvent);\n            this.currentContainer = null;\n            this.dragging = false;\n            this.mightDrag = false;\n          }\n          /**\n           * Mouse down handler\n           * @private\n           * @param {Event} event - Mouse down event\n           */\n\n        }, {\n          key: onMouseDown,\n          value: function value(event) {\n            if (!this.mightDrag) {\n              return;\n            } // Need workaround for real click\n            // Cancel potential drag events\n\n\n            event.stopPropagation();\n            event.stopImmediatePropagation();\n            event.preventDefault();\n          }\n          /**\n           * Mouse move handler\n           * @private\n           * @param {Event} event - Mouse force will begin event\n           */\n\n        }, {\n          key: onMouseMove,\n          value: function value(event) {\n            if (!this.dragging) {\n              return;\n            }\n\n            var target = document.elementFromPoint(event.clientX, event.clientY);\n            var dragMoveEvent = new _SensorEvent.DragMoveSensorEvent({\n              clientX: event.clientX,\n              clientY: event.clientY,\n              target: target,\n              container: this.currentContainer,\n              originalEvent: event\n            });\n            this.trigger(this.currentContainer, dragMoveEvent);\n          }\n          /**\n           * Mouse force change handler\n           * @private\n           * @param {Event} event - Mouse force change event\n           */\n\n        }, {\n          key: onMouseForceChange,\n          value: function value(event) {\n            if (this.dragging) {\n              return;\n            }\n\n            var target = event.target;\n            var container = event.currentTarget;\n            var dragPressureEvent = new _SensorEvent.DragPressureSensorEvent({\n              pressure: event.webkitForce,\n              clientX: event.clientX,\n              clientY: event.clientY,\n              target: target,\n              container: container,\n              originalEvent: event\n            });\n            this.trigger(container, dragPressureEvent);\n          }\n          /**\n           * Mouse force global change handler\n           * @private\n           * @param {Event} event - Mouse force global change event\n           */\n\n        }, {\n          key: onMouseForceGlobalChange,\n          value: function value(event) {\n            if (!this.dragging) {\n              return;\n            }\n\n            var target = event.target;\n            var dragPressureEvent = new _SensorEvent.DragPressureSensorEvent({\n              pressure: event.webkitForce,\n              clientX: event.clientX,\n              clientY: event.clientY,\n              target: target,\n              container: this.currentContainer,\n              originalEvent: event\n            });\n            this.trigger(this.currentContainer, dragPressureEvent);\n          }\n        }]);\n\n        return ForceTouchSensor;\n      }(_Sensor2.default);\n\n      exports.default = ForceTouchSensor;\n      /***/\n    },\n    /* 39 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _ForceTouchSensor = __webpack_require__(38);\n\n      var _ForceTouchSensor2 = _interopRequireDefault(_ForceTouchSensor);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _ForceTouchSensor2.default;\n      /***/\n    },\n    /* 40 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _utils = __webpack_require__(2);\n\n      var _Sensor = __webpack_require__(4);\n\n      var _Sensor2 = _interopRequireDefault(_Sensor);\n\n      var _SensorEvent = __webpack_require__(3);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var onMouseDown = Symbol('onMouseDown');\n      var onMouseUp = Symbol('onMouseUp');\n      var onDragStart = Symbol('onDragStart');\n      var onDragOver = Symbol('onDragOver');\n      var onDragEnd = Symbol('onDragEnd');\n      var onDrop = Symbol('onDrop');\n      var reset = Symbol('reset');\n      /**\n       * This sensor picks up native browser drag events and dictates drag operations\n       * @class DragSensor\n       * @module DragSensor\n       * @extends Sensor\n       */\n\n      var DragSensor = /*#__PURE__*/function (_Sensor2$default2) {\n        _inherits(DragSensor, _Sensor2$default2);\n\n        var _super30 = _createSuper(DragSensor);\n\n        /**\n         * DragSensor constructor.\n         * @constructs DragSensor\n         * @param {HTMLElement[]|NodeList|HTMLElement} containers - Containers\n         * @param {Object} options - Options\n         */\n        function DragSensor() {\n          var _this20;\n\n          var containers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n          _classCallCheck(this, DragSensor);\n\n          _this20 = _super30.call(this, containers, options);\n          /**\n           * Mouse down timer which will end up setting the draggable attribute, unless canceled\n           * @property mouseDownTimeout\n           * @type {Number}\n           */\n\n          _this20.mouseDownTimeout = null;\n          /**\n           * Draggable element needs to be remembered to unset the draggable attribute after drag operation has completed\n           * @property draggableElement\n           * @type {HTMLElement}\n           */\n\n          _this20.draggableElement = null;\n          /**\n           * Native draggable element could be links or images, their draggable state will be disabled during drag operation\n           * @property nativeDraggableElement\n           * @type {HTMLElement}\n           */\n\n          _this20.nativeDraggableElement = null;\n          _this20[onMouseDown] = _this20[onMouseDown].bind(_assertThisInitialized(_this20));\n          _this20[onMouseUp] = _this20[onMouseUp].bind(_assertThisInitialized(_this20));\n          _this20[onDragStart] = _this20[onDragStart].bind(_assertThisInitialized(_this20));\n          _this20[onDragOver] = _this20[onDragOver].bind(_assertThisInitialized(_this20));\n          _this20[onDragEnd] = _this20[onDragEnd].bind(_assertThisInitialized(_this20));\n          _this20[onDrop] = _this20[onDrop].bind(_assertThisInitialized(_this20));\n          return _this20;\n        }\n        /**\n         * Attaches sensors event listeners to the DOM\n         */\n\n\n        _createClass(DragSensor, [{\n          key: \"attach\",\n          value: function attach() {\n            document.addEventListener('mousedown', this[onMouseDown], true);\n          }\n          /**\n           * Detaches sensors event listeners to the DOM\n           */\n\n        }, {\n          key: \"detach\",\n          value: function detach() {\n            document.removeEventListener('mousedown', this[onMouseDown], true);\n          }\n          /**\n           * Drag start handler\n           * @private\n           * @param {Event} event - Drag start event\n           */\n\n        }, {\n          key: onDragStart,\n          value: function value(event) {\n            var _this21 = this;\n\n            // Need for firefox. \"text\" key is needed for IE\n            event.dataTransfer.setData('text', '');\n            event.dataTransfer.effectAllowed = this.options.type;\n            var target = document.elementFromPoint(event.clientX, event.clientY);\n            this.currentContainer = (0, _utils.closest)(event.target, this.containers);\n\n            if (!this.currentContainer) {\n              return;\n            }\n\n            var dragStartEvent = new _SensorEvent.DragStartSensorEvent({\n              clientX: event.clientX,\n              clientY: event.clientY,\n              target: target,\n              container: this.currentContainer,\n              originalEvent: event\n            }); // Workaround\n\n            setTimeout(function () {\n              _this21.trigger(_this21.currentContainer, dragStartEvent);\n\n              if (dragStartEvent.canceled()) {\n                _this21.dragging = false;\n              } else {\n                _this21.dragging = true;\n              }\n            }, 0);\n          }\n          /**\n           * Drag over handler\n           * @private\n           * @param {Event} event - Drag over event\n           */\n\n        }, {\n          key: onDragOver,\n          value: function value(event) {\n            if (!this.dragging) {\n              return;\n            }\n\n            var target = document.elementFromPoint(event.clientX, event.clientY);\n            var container = this.currentContainer;\n            var dragMoveEvent = new _SensorEvent.DragMoveSensorEvent({\n              clientX: event.clientX,\n              clientY: event.clientY,\n              target: target,\n              container: container,\n              originalEvent: event\n            });\n            this.trigger(container, dragMoveEvent);\n\n            if (!dragMoveEvent.canceled()) {\n              event.preventDefault();\n              event.dataTransfer.dropEffect = this.options.type;\n            }\n          }\n          /**\n           * Drag end handler\n           * @private\n           * @param {Event} event - Drag end event\n           */\n\n        }, {\n          key: onDragEnd,\n          value: function value(event) {\n            if (!this.dragging) {\n              return;\n            }\n\n            document.removeEventListener('mouseup', this[onMouseUp], true);\n            var target = document.elementFromPoint(event.clientX, event.clientY);\n            var container = this.currentContainer;\n            var dragStopEvent = new _SensorEvent.DragStopSensorEvent({\n              clientX: event.clientX,\n              clientY: event.clientY,\n              target: target,\n              container: container,\n              originalEvent: event\n            });\n            this.trigger(container, dragStopEvent);\n            this.dragging = false;\n            this[reset]();\n          }\n          /**\n           * Drop handler\n           * @private\n           * @param {Event} event - Drop event\n           */\n\n        }, {\n          key: onDrop,\n          value: function value(event) {\n            // eslint-disable-line class-methods-use-this\n            event.preventDefault();\n          }\n          /**\n           * Mouse down handler\n           * @private\n           * @param {Event} event - Mouse down event\n           */\n\n        }, {\n          key: onMouseDown,\n          value: function value(event) {\n            var _this22 = this;\n\n            // Firefox bug for inputs within draggables https://bugzilla.mozilla.org/show_bug.cgi?id=739071\n            if (event.target && (event.target.form || event.target.contenteditable)) {\n              return;\n            }\n\n            var nativeDraggableElement = (0, _utils.closest)(event.target, function (element) {\n              return element.draggable;\n            });\n\n            if (nativeDraggableElement) {\n              nativeDraggableElement.draggable = false;\n              this.nativeDraggableElement = nativeDraggableElement;\n            }\n\n            document.addEventListener('mouseup', this[onMouseUp], true);\n            document.addEventListener('dragstart', this[onDragStart], false);\n            document.addEventListener('dragover', this[onDragOver], false);\n            document.addEventListener('dragend', this[onDragEnd], false);\n            document.addEventListener('drop', this[onDrop], false);\n            var target = (0, _utils.closest)(event.target, this.options.draggable);\n\n            if (!target) {\n              return;\n            }\n\n            this.mouseDownTimeout = setTimeout(function () {\n              target.draggable = true;\n              _this22.draggableElement = target;\n            }, this.options.delay);\n          }\n          /**\n           * Mouse up handler\n           * @private\n           * @param {Event} event - Mouse up event\n           */\n\n        }, {\n          key: onMouseUp,\n          value: function value() {\n            this[reset]();\n          }\n          /**\n           * Mouse up handler\n           * @private\n           * @param {Event} event - Mouse up event\n           */\n\n        }, {\n          key: reset,\n          value: function value() {\n            clearTimeout(this.mouseDownTimeout);\n            document.removeEventListener('mouseup', this[onMouseUp], true);\n            document.removeEventListener('dragstart', this[onDragStart], false);\n            document.removeEventListener('dragover', this[onDragOver], false);\n            document.removeEventListener('dragend', this[onDragEnd], false);\n            document.removeEventListener('drop', this[onDrop], false);\n\n            if (this.nativeDraggableElement) {\n              this.nativeDraggableElement.draggable = true;\n              this.nativeDraggableElement = null;\n            }\n\n            if (this.draggableElement) {\n              this.draggableElement.draggable = false;\n              this.draggableElement = null;\n            }\n          }\n        }]);\n\n        return DragSensor;\n      }(_Sensor2.default);\n\n      exports.default = DragSensor;\n      /***/\n    },\n    /* 41 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _DragSensor = __webpack_require__(40);\n\n      var _DragSensor2 = _interopRequireDefault(_DragSensor);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _DragSensor2.default;\n      /***/\n    },\n    /* 42 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _utils = __webpack_require__(2);\n\n      var _Sensor = __webpack_require__(4);\n\n      var _Sensor2 = _interopRequireDefault(_Sensor);\n\n      var _SensorEvent = __webpack_require__(3);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var onTouchStart = Symbol('onTouchStart');\n      var onTouchHold = Symbol('onTouchHold');\n      var onTouchEnd = Symbol('onTouchEnd');\n      var onTouchMove = Symbol('onTouchMove');\n      /**\n       * Prevents scrolling when set to true\n       * @var {Boolean} preventScrolling\n       */\n\n      var preventScrolling = false; // WebKit requires cancelable `touchmove` events to be added as early as possible\n\n      window.addEventListener('touchmove', function (event) {\n        if (!preventScrolling) {\n          return;\n        } // Prevent scrolling\n\n\n        event.preventDefault();\n      }, {\n        passive: false\n      });\n      /**\n       * This sensor picks up native browser touch events and dictates drag operations\n       * @class TouchSensor\n       * @module TouchSensor\n       * @extends Sensor\n       */\n\n      var TouchSensor = /*#__PURE__*/function (_Sensor2$default3) {\n        _inherits(TouchSensor, _Sensor2$default3);\n\n        var _super31 = _createSuper(TouchSensor);\n\n        /**\n         * TouchSensor constructor.\n         * @constructs TouchSensor\n         * @param {HTMLElement[]|NodeList|HTMLElement} containers - Containers\n         * @param {Object} options - Options\n         */\n        function TouchSensor() {\n          var _this23;\n\n          var containers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n          _classCallCheck(this, TouchSensor);\n\n          _this23 = _super31.call(this, containers, options);\n          /**\n           * Closest scrollable container so accidental scroll can cancel long touch\n           * @property currentScrollableParent\n           * @type {HTMLElement}\n           */\n\n          _this23.currentScrollableParent = null;\n          /**\n           * TimeoutID for long touch\n           * @property tapTimeout\n           * @type {Number}\n           */\n\n          _this23.tapTimeout = null;\n          /**\n           * touchMoved indicates if touch has moved during tapTimeout\n           * @property touchMoved\n           * @type {Boolean}\n           */\n\n          _this23.touchMoved = false;\n          _this23[onTouchStart] = _this23[onTouchStart].bind(_assertThisInitialized(_this23));\n          _this23[onTouchHold] = _this23[onTouchHold].bind(_assertThisInitialized(_this23));\n          _this23[onTouchEnd] = _this23[onTouchEnd].bind(_assertThisInitialized(_this23));\n          _this23[onTouchMove] = _this23[onTouchMove].bind(_assertThisInitialized(_this23));\n          return _this23;\n        }\n        /**\n         * Attaches sensors event listeners to the DOM\n         */\n\n\n        _createClass(TouchSensor, [{\n          key: \"attach\",\n          value: function attach() {\n            document.addEventListener('touchstart', this[onTouchStart]);\n          }\n          /**\n           * Detaches sensors event listeners to the DOM\n           */\n\n        }, {\n          key: \"detach\",\n          value: function detach() {\n            document.removeEventListener('touchstart', this[onTouchStart]);\n          }\n          /**\n           * Touch start handler\n           * @private\n           * @param {Event} event - Touch start event\n           */\n\n        }, {\n          key: onTouchStart,\n          value: function value(event) {\n            var container = (0, _utils.closest)(event.target, this.containers);\n\n            if (!container) {\n              return;\n            }\n\n            document.addEventListener('touchmove', this[onTouchMove]);\n            document.addEventListener('touchend', this[onTouchEnd]);\n            document.addEventListener('touchcancel', this[onTouchEnd]);\n            container.addEventListener('contextmenu', onContextMenu);\n            this.currentContainer = container;\n            this.tapTimeout = setTimeout(this[onTouchHold](event, container), this.options.delay);\n          }\n          /**\n           * Touch hold handler\n           * @private\n           * @param {Event} event - Touch start event\n           * @param {HTMLElement} container - Container element\n           */\n\n        }, {\n          key: onTouchHold,\n          value: function value(event, container) {\n            var _this24 = this;\n\n            return function () {\n              if (_this24.touchMoved) {\n                return;\n              }\n\n              var touch = event.touches[0] || event.changedTouches[0];\n              var target = event.target;\n              var dragStartEvent = new _SensorEvent.DragStartSensorEvent({\n                clientX: touch.pageX,\n                clientY: touch.pageY,\n                target: target,\n                container: container,\n                originalEvent: event\n              });\n\n              _this24.trigger(container, dragStartEvent);\n\n              _this24.dragging = !dragStartEvent.canceled();\n              preventScrolling = _this24.dragging;\n            };\n          }\n          /**\n           * Touch move handler\n           * @private\n           * @param {Event} event - Touch move event\n           */\n\n        }, {\n          key: onTouchMove,\n          value: function value(event) {\n            this.touchMoved = true;\n\n            if (!this.dragging) {\n              return;\n            }\n\n            var touch = event.touches[0] || event.changedTouches[0];\n            var target = document.elementFromPoint(touch.pageX - window.scrollX, touch.pageY - window.scrollY);\n            var dragMoveEvent = new _SensorEvent.DragMoveSensorEvent({\n              clientX: touch.pageX,\n              clientY: touch.pageY,\n              target: target,\n              container: this.currentContainer,\n              originalEvent: event\n            });\n            this.trigger(this.currentContainer, dragMoveEvent);\n          }\n          /**\n           * Touch end handler\n           * @private\n           * @param {Event} event - Touch end event\n           */\n\n        }, {\n          key: onTouchEnd,\n          value: function value(event) {\n            this.touchMoved = false;\n            preventScrolling = false;\n            document.removeEventListener('touchend', this[onTouchEnd]);\n            document.removeEventListener('touchcancel', this[onTouchEnd]);\n            document.removeEventListener('touchmove', this[onTouchMove]);\n\n            if (this.currentContainer) {\n              this.currentContainer.removeEventListener('contextmenu', onContextMenu);\n            }\n\n            clearTimeout(this.tapTimeout);\n\n            if (!this.dragging) {\n              return;\n            }\n\n            var touch = event.touches[0] || event.changedTouches[0];\n            var target = document.elementFromPoint(touch.pageX - window.scrollX, touch.pageY - window.scrollY);\n            event.preventDefault();\n            var dragStopEvent = new _SensorEvent.DragStopSensorEvent({\n              clientX: touch.pageX,\n              clientY: touch.pageY,\n              target: target,\n              container: this.currentContainer,\n              originalEvent: event\n            });\n            this.trigger(this.currentContainer, dragStopEvent);\n            this.currentContainer = null;\n            this.dragging = false;\n          }\n        }]);\n\n        return TouchSensor;\n      }(_Sensor2.default);\n\n      exports.default = TouchSensor;\n\n      function onContextMenu(event) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      /***/\n\n    },\n    /* 43 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _TouchSensor = __webpack_require__(42);\n\n      var _TouchSensor2 = _interopRequireDefault(_TouchSensor);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _TouchSensor2.default;\n      /***/\n    },\n    /* 44 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.DragPressureSensorEvent = exports.DragStopSensorEvent = exports.DragMoveSensorEvent = exports.DragStartSensorEvent = exports.SensorEvent = undefined;\n\n      var _AbstractEvent = __webpack_require__(0);\n\n      var _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      /**\n       * Base sensor event\n       * @class SensorEvent\n       * @module SensorEvent\n       * @extends AbstractEvent\n       */\n\n\n      var SensorEvent = /*#__PURE__*/function (_AbstractEvent2$defau6) {\n        _inherits(SensorEvent, _AbstractEvent2$defau6);\n\n        var _super32 = _createSuper(SensorEvent);\n\n        function SensorEvent() {\n          _classCallCheck(this, SensorEvent);\n\n          return _super32.apply(this, arguments);\n        }\n\n        _createClass(SensorEvent, [{\n          key: \"originalEvent\",\n          get:\n          /**\n           * Original browser event that triggered a sensor\n           * @property originalEvent\n           * @type {Event}\n           * @readonly\n           */\n          function get() {\n            return this.data.originalEvent;\n          }\n          /**\n           * Normalized clientX for both touch and mouse events\n           * @property clientX\n           * @type {Number}\n           * @readonly\n           */\n\n        }, {\n          key: \"clientX\",\n          get: function get() {\n            return this.data.clientX;\n          }\n          /**\n           * Normalized clientY for both touch and mouse events\n           * @property clientY\n           * @type {Number}\n           * @readonly\n           */\n\n        }, {\n          key: \"clientY\",\n          get: function get() {\n            return this.data.clientY;\n          }\n          /**\n           * Normalized target for both touch and mouse events\n           * Returns the element that is behind cursor or touch pointer\n           * @property target\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"target\",\n          get: function get() {\n            return this.data.target;\n          }\n          /**\n           * Container that initiated the sensor\n           * @property container\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"container\",\n          get: function get() {\n            return this.data.container;\n          }\n          /**\n           * Trackpad pressure\n           * @property pressure\n           * @type {Number}\n           * @readonly\n           */\n\n        }, {\n          key: \"pressure\",\n          get: function get() {\n            return this.data.pressure;\n          }\n        }]);\n\n        return SensorEvent;\n      }(_AbstractEvent2.default);\n\n      exports.SensorEvent = SensorEvent;\n      /**\n       * Drag start sensor event\n       * @class DragStartSensorEvent\n       * @module DragStartSensorEvent\n       * @extends SensorEvent\n       */\n\n      var DragStartSensorEvent = /*#__PURE__*/function (_SensorEvent2) {\n        _inherits(DragStartSensorEvent, _SensorEvent2);\n\n        var _super33 = _createSuper(DragStartSensorEvent);\n\n        function DragStartSensorEvent() {\n          _classCallCheck(this, DragStartSensorEvent);\n\n          return _super33.apply(this, arguments);\n        }\n\n        return DragStartSensorEvent;\n      }(SensorEvent);\n\n      exports.DragStartSensorEvent = DragStartSensorEvent;\n      /**\n       * Drag move sensor event\n       * @class DragMoveSensorEvent\n       * @module DragMoveSensorEvent\n       * @extends SensorEvent\n       */\n\n      DragStartSensorEvent.type = 'drag:start';\n\n      var DragMoveSensorEvent = /*#__PURE__*/function (_SensorEvent3) {\n        _inherits(DragMoveSensorEvent, _SensorEvent3);\n\n        var _super34 = _createSuper(DragMoveSensorEvent);\n\n        function DragMoveSensorEvent() {\n          _classCallCheck(this, DragMoveSensorEvent);\n\n          return _super34.apply(this, arguments);\n        }\n\n        return DragMoveSensorEvent;\n      }(SensorEvent);\n\n      exports.DragMoveSensorEvent = DragMoveSensorEvent;\n      /**\n       * Drag stop sensor event\n       * @class DragStopSensorEvent\n       * @module DragStopSensorEvent\n       * @extends SensorEvent\n       */\n\n      DragMoveSensorEvent.type = 'drag:move';\n\n      var DragStopSensorEvent = /*#__PURE__*/function (_SensorEvent4) {\n        _inherits(DragStopSensorEvent, _SensorEvent4);\n\n        var _super35 = _createSuper(DragStopSensorEvent);\n\n        function DragStopSensorEvent() {\n          _classCallCheck(this, DragStopSensorEvent);\n\n          return _super35.apply(this, arguments);\n        }\n\n        return DragStopSensorEvent;\n      }(SensorEvent);\n\n      exports.DragStopSensorEvent = DragStopSensorEvent;\n      /**\n       * Drag pressure sensor event\n       * @class DragPressureSensorEvent\n       * @module DragPressureSensorEvent\n       * @extends SensorEvent\n       */\n\n      DragStopSensorEvent.type = 'drag:stop';\n\n      var DragPressureSensorEvent = /*#__PURE__*/function (_SensorEvent5) {\n        _inherits(DragPressureSensorEvent, _SensorEvent5);\n\n        var _super36 = _createSuper(DragPressureSensorEvent);\n\n        function DragPressureSensorEvent() {\n          _classCallCheck(this, DragPressureSensorEvent);\n\n          return _super36.apply(this, arguments);\n        }\n\n        return DragPressureSensorEvent;\n      }(SensorEvent);\n\n      exports.DragPressureSensorEvent = DragPressureSensorEvent;\n      DragPressureSensorEvent.type = 'drag:pressure';\n      /***/\n    },\n    /* 45 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _utils = __webpack_require__(2);\n\n      var _Sensor = __webpack_require__(4);\n\n      var _Sensor2 = _interopRequireDefault(_Sensor);\n\n      var _SensorEvent = __webpack_require__(3);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var onContextMenuWhileDragging = Symbol('onContextMenuWhileDragging');\n      var onMouseDown = Symbol('onMouseDown');\n      var onMouseMove = Symbol('onMouseMove');\n      var onMouseUp = Symbol('onMouseUp');\n      /**\n       * This sensor picks up native browser mouse events and dictates drag operations\n       * @class MouseSensor\n       * @module MouseSensor\n       * @extends Sensor\n       */\n\n      var MouseSensor = /*#__PURE__*/function (_Sensor2$default4) {\n        _inherits(MouseSensor, _Sensor2$default4);\n\n        var _super37 = _createSuper(MouseSensor);\n\n        /**\n         * MouseSensor constructor.\n         * @constructs MouseSensor\n         * @param {HTMLElement[]|NodeList|HTMLElement} containers - Containers\n         * @param {Object} options - Options\n         */\n        function MouseSensor() {\n          var _this25;\n\n          var containers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n          _classCallCheck(this, MouseSensor);\n\n          _this25 = _super37.call(this, containers, options);\n          /**\n           * Indicates if mouse button is still down\n           * @property mouseDown\n           * @type {Boolean}\n           */\n\n          _this25.mouseDown = false;\n          /**\n           * Mouse down timer which will end up triggering the drag start operation\n           * @property mouseDownTimeout\n           * @type {Number}\n           */\n\n          _this25.mouseDownTimeout = null;\n          /**\n           * Indicates if context menu has been opened during drag operation\n           * @property openedContextMenu\n           * @type {Boolean}\n           */\n\n          _this25.openedContextMenu = false;\n          _this25[onContextMenuWhileDragging] = _this25[onContextMenuWhileDragging].bind(_assertThisInitialized(_this25));\n          _this25[onMouseDown] = _this25[onMouseDown].bind(_assertThisInitialized(_this25));\n          _this25[onMouseMove] = _this25[onMouseMove].bind(_assertThisInitialized(_this25));\n          _this25[onMouseUp] = _this25[onMouseUp].bind(_assertThisInitialized(_this25));\n          return _this25;\n        }\n        /**\n         * Attaches sensors event listeners to the DOM\n         */\n\n\n        _createClass(MouseSensor, [{\n          key: \"attach\",\n          value: function attach() {\n            document.addEventListener('mousedown', this[onMouseDown], true);\n          }\n          /**\n           * Detaches sensors event listeners to the DOM\n           */\n\n        }, {\n          key: \"detach\",\n          value: function detach() {\n            document.removeEventListener('mousedown', this[onMouseDown], true);\n          }\n          /**\n           * Mouse down handler\n           * @private\n           * @param {Event} event - Mouse down event\n           */\n\n        }, {\n          key: onMouseDown,\n          value: function value(event) {\n            var _this26 = this;\n\n            if (event.button !== 0 || event.ctrlKey || event.metaKey) {\n              return;\n            }\n\n            document.addEventListener('mouseup', this[onMouseUp]);\n            var target = document.elementFromPoint(event.clientX, event.clientY);\n            var container = (0, _utils.closest)(target, this.containers);\n\n            if (!container) {\n              return;\n            }\n\n            document.addEventListener('dragstart', preventNativeDragStart);\n            this.mouseDown = true;\n            clearTimeout(this.mouseDownTimeout);\n            this.mouseDownTimeout = setTimeout(function () {\n              if (!_this26.mouseDown) {\n                return;\n              }\n\n              var dragStartEvent = new _SensorEvent.DragStartSensorEvent({\n                clientX: event.clientX,\n                clientY: event.clientY,\n                target: target,\n                container: container,\n                originalEvent: event\n              });\n\n              _this26.trigger(container, dragStartEvent);\n\n              _this26.currentContainer = container;\n              _this26.dragging = !dragStartEvent.canceled();\n\n              if (_this26.dragging) {\n                document.addEventListener('contextmenu', _this26[onContextMenuWhileDragging]);\n                document.addEventListener('mousemove', _this26[onMouseMove]);\n              }\n            }, this.options.delay);\n          }\n          /**\n           * Mouse move handler\n           * @private\n           * @param {Event} event - Mouse move event\n           */\n\n        }, {\n          key: onMouseMove,\n          value: function value(event) {\n            if (!this.dragging) {\n              return;\n            }\n\n            var target = document.elementFromPoint(event.clientX, event.clientY);\n            var dragMoveEvent = new _SensorEvent.DragMoveSensorEvent({\n              clientX: event.clientX,\n              clientY: event.clientY,\n              target: target,\n              container: this.currentContainer,\n              originalEvent: event\n            });\n            this.trigger(this.currentContainer, dragMoveEvent);\n          }\n          /**\n           * Mouse up handler\n           * @private\n           * @param {Event} event - Mouse up event\n           */\n\n        }, {\n          key: onMouseUp,\n          value: function value(event) {\n            this.mouseDown = Boolean(this.openedContextMenu);\n\n            if (this.openedContextMenu) {\n              this.openedContextMenu = false;\n              return;\n            }\n\n            document.removeEventListener('mouseup', this[onMouseUp]);\n            document.removeEventListener('dragstart', preventNativeDragStart);\n\n            if (!this.dragging) {\n              return;\n            }\n\n            var target = document.elementFromPoint(event.clientX, event.clientY);\n            var dragStopEvent = new _SensorEvent.DragStopSensorEvent({\n              clientX: event.clientX,\n              clientY: event.clientY,\n              target: target,\n              container: this.currentContainer,\n              originalEvent: event\n            });\n            this.trigger(this.currentContainer, dragStopEvent);\n            document.removeEventListener('contextmenu', this[onContextMenuWhileDragging]);\n            document.removeEventListener('mousemove', this[onMouseMove]);\n            this.currentContainer = null;\n            this.dragging = false;\n          }\n          /**\n           * Context menu handler\n           * @private\n           * @param {Event} event - Context menu event\n           */\n\n        }, {\n          key: onContextMenuWhileDragging,\n          value: function value(event) {\n            event.preventDefault();\n            this.openedContextMenu = true;\n          }\n        }]);\n\n        return MouseSensor;\n      }(_Sensor2.default);\n\n      exports.default = MouseSensor;\n\n      function preventNativeDragStart(event) {\n        event.preventDefault();\n      }\n      /***/\n\n    },\n    /* 46 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _MouseSensor = __webpack_require__(45);\n\n      var _MouseSensor2 = _interopRequireDefault(_MouseSensor);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _MouseSensor2.default;\n      /***/\n    },\n    /* 47 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n      /**\n       * Base sensor class. Extend from this class to create a new or custom sensor\n       * @class Sensor\n       * @module Sensor\n       */\n\n\n      var Sensor = /*#__PURE__*/function () {\n        /**\n         * Sensor constructor.\n         * @constructs Sensor\n         * @param {HTMLElement[]|NodeList|HTMLElement} containers - Containers\n         * @param {Object} options - Options\n         */\n        function Sensor() {\n          var containers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n          _classCallCheck(this, Sensor);\n\n          /**\n           * Current containers\n           * @property containers\n           * @type {HTMLElement[]}\n           */\n          this.containers = _toConsumableArray(containers);\n          /**\n           * Current options\n           * @property options\n           * @type {Object}\n           */\n\n          this.options = _extends({}, options);\n          /**\n           * Current drag state\n           * @property dragging\n           * @type {Boolean}\n           */\n\n          this.dragging = false;\n          /**\n           * Current container\n           * @property currentContainer\n           * @type {HTMLElement}\n           */\n\n          this.currentContainer = null;\n        }\n        /**\n         * Attaches sensors event listeners to the DOM\n         * @return {Sensor}\n         */\n\n\n        _createClass(Sensor, [{\n          key: \"attach\",\n          value: function attach() {\n            return this;\n          }\n          /**\n           * Detaches sensors event listeners to the DOM\n           * @return {Sensor}\n           */\n\n        }, {\n          key: \"detach\",\n          value: function detach() {\n            return this;\n          }\n          /**\n           * Adds container to this sensor instance\n           * @param {...HTMLElement} containers - Containers you want to add to this sensor\n           * @example draggable.addContainer(document.body)\n           */\n\n        }, {\n          key: \"addContainer\",\n          value: function addContainer() {\n            for (var _len9 = arguments.length, containers = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n              containers[_key9] = arguments[_key9];\n            }\n\n            this.containers = [].concat(_toConsumableArray(this.containers), containers);\n          }\n          /**\n           * Removes container from this sensor instance\n           * @param {...HTMLElement} containers - Containers you want to remove from this sensor\n           * @example draggable.removeContainer(document.body)\n           */\n\n        }, {\n          key: \"removeContainer\",\n          value: function removeContainer() {\n            for (var _len10 = arguments.length, containers = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n              containers[_key10] = arguments[_key10];\n            }\n\n            this.containers = this.containers.filter(function (container) {\n              return !containers.includes(container);\n            });\n          }\n          /**\n           * Triggers event on target element\n           * @param {HTMLElement} element - Element to trigger event on\n           * @param {SensorEvent} sensorEvent - Sensor event to trigger\n           */\n\n        }, {\n          key: \"trigger\",\n          value: function trigger(element, sensorEvent) {\n            var event = document.createEvent('Event');\n            event.detail = sensorEvent;\n            event.initEvent(sensorEvent.type, true, true);\n            element.dispatchEvent(event);\n            this.lastEvent = sensorEvent;\n            return sensorEvent;\n          }\n        }]);\n\n        return Sensor;\n      }();\n\n      exports.default = Sensor;\n      /***/\n    },\n    /* 48 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = requestNextAnimationFrame;\n\n      function requestNextAnimationFrame(callback) {\n        return requestAnimationFrame(function () {\n          requestAnimationFrame(callback);\n        });\n      }\n      /***/\n\n    },\n    /* 49 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _requestNextAnimationFrame = __webpack_require__(48);\n\n      var _requestNextAnimationFrame2 = _interopRequireDefault(_requestNextAnimationFrame);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _requestNextAnimationFrame2.default;\n      /***/\n    },\n    /* 50 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.default = closest;\n      var matchFunction = Element.prototype.matches || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector;\n      /**\n       * Get the closest parent element of a given element that matches the given\n       * selector string or matching function\n       *\n       * @param {Element} element The child element to find a parent of\n       * @param {String|Function} selector The string or function to use to match\n       *     the parent element\n       * @return {Element|null}\n       */\n\n      function closest(element, value) {\n        if (!element) {\n          return null;\n        }\n\n        var selector = value;\n        var callback = value;\n        var nodeList = value;\n        var singleElement = value;\n        var isSelector = Boolean(typeof value === 'string');\n        var isFunction = Boolean(typeof value === 'function');\n        var isNodeList = Boolean(value instanceof NodeList || value instanceof Array);\n        var isElement = Boolean(value instanceof HTMLElement);\n\n        function conditionFn(currentElement) {\n          if (!currentElement) {\n            return currentElement;\n          } else if (isSelector) {\n            return matchFunction.call(currentElement, selector);\n          } else if (isNodeList) {\n            return _toConsumableArray(nodeList).includes(currentElement);\n          } else if (isElement) {\n            return singleElement === currentElement;\n          } else if (isFunction) {\n            return callback(currentElement);\n          } else {\n            return null;\n          }\n        }\n\n        var current = element;\n\n        do {\n          current = current.correspondingUseElement || current.correspondingElement || current;\n\n          if (conditionFn(current)) {\n            return current;\n          }\n\n          current = current.parentNode;\n        } while (current && current !== document.body && current !== document);\n\n        return null;\n      }\n      /***/\n\n    },\n    /* 51 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _closest = __webpack_require__(50);\n\n      var _closest2 = _interopRequireDefault(_closest);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _closest2.default;\n      /***/\n    },\n    /* 52 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.defaultOptions = exports.scroll = exports.onDragStop = exports.onDragMove = exports.onDragStart = undefined;\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _AbstractPlugin = __webpack_require__(1);\n\n      var _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\n\n      var _utils = __webpack_require__(2);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var onDragStart = exports.onDragStart = Symbol('onDragStart');\n      var onDragMove = exports.onDragMove = Symbol('onDragMove');\n      var onDragStop = exports.onDragStop = Symbol('onDragStop');\n      var scroll = exports.scroll = Symbol('scroll');\n      /**\n       * Scrollable default options\n       * @property {Object} defaultOptions\n       * @property {Number} defaultOptions.speed\n       * @property {Number} defaultOptions.sensitivity\n       * @property {HTMLElement[]} defaultOptions.scrollableElements\n       * @type {Object}\n       */\n\n      var defaultOptions = exports.defaultOptions = {\n        speed: 6,\n        sensitivity: 50,\n        scrollableElements: []\n      };\n      /**\n       * Scrollable plugin which scrolls the closest scrollable parent\n       * @class Scrollable\n       * @module Scrollable\n       * @extends AbstractPlugin\n       */\n\n      var Scrollable = /*#__PURE__*/function (_AbstractPlugin2$defa5) {\n        _inherits(Scrollable, _AbstractPlugin2$defa5);\n\n        var _super38 = _createSuper(Scrollable);\n\n        /**\n         * Scrollable constructor.\n         * @constructs Scrollable\n         * @param {Draggable} draggable - Draggable instance\n         */\n        function Scrollable(draggable) {\n          var _this27;\n\n          _classCallCheck(this, Scrollable);\n\n          _this27 = _super38.call(this, draggable);\n          /**\n           * Scrollable options\n           * @property {Object} options\n           * @property {Number} options.speed\n           * @property {Number} options.sensitivity\n           * @property {HTMLElement[]} options.scrollableElements\n           * @type {Object}\n           */\n\n          _this27.options = _extends({}, defaultOptions, _this27.getOptions());\n          /**\n           * Keeps current mouse position\n           * @property {Object} currentMousePosition\n           * @property {Number} currentMousePosition.clientX\n           * @property {Number} currentMousePosition.clientY\n           * @type {Object|null}\n           */\n\n          _this27.currentMousePosition = null;\n          /**\n           * Scroll animation frame\n           * @property scrollAnimationFrame\n           * @type {Number|null}\n           */\n\n          _this27.scrollAnimationFrame = null;\n          /**\n           * Closest scrollable element\n           * @property scrollableElement\n           * @type {HTMLElement|null}\n           */\n\n          _this27.scrollableElement = null;\n          /**\n           * Animation frame looking for the closest scrollable element\n           * @property findScrollableElementFrame\n           * @type {Number|null}\n           */\n\n          _this27.findScrollableElementFrame = null;\n          _this27[onDragStart] = _this27[onDragStart].bind(_assertThisInitialized(_this27));\n          _this27[onDragMove] = _this27[onDragMove].bind(_assertThisInitialized(_this27));\n          _this27[onDragStop] = _this27[onDragStop].bind(_assertThisInitialized(_this27));\n          _this27[scroll] = _this27[scroll].bind(_assertThisInitialized(_this27));\n          return _this27;\n        }\n        /**\n         * Attaches plugins event listeners\n         */\n\n\n        _createClass(Scrollable, [{\n          key: \"attach\",\n          value: function attach() {\n            this.draggable.on('drag:start', this[onDragStart]).on('drag:move', this[onDragMove]).on('drag:stop', this[onDragStop]);\n          }\n          /**\n           * Detaches plugins event listeners\n           */\n\n        }, {\n          key: \"detach\",\n          value: function detach() {\n            this.draggable.off('drag:start', this[onDragStart]).off('drag:move', this[onDragMove]).off('drag:stop', this[onDragStop]);\n          }\n          /**\n           * Returns options passed through draggable\n           * @return {Object}\n           */\n\n        }, {\n          key: \"getOptions\",\n          value: function getOptions() {\n            return this.draggable.options.scrollable || {};\n          }\n          /**\n           * Returns closest scrollable elements by element\n           * @param {HTMLElement} target\n           * @return {HTMLElement}\n           */\n\n        }, {\n          key: \"getScrollableElement\",\n          value: function getScrollableElement(target) {\n            if (this.hasDefinedScrollableElements()) {\n              return (0, _utils.closest)(target, this.options.scrollableElements) || document.documentElement;\n            } else {\n              return closestScrollableElement(target);\n            }\n          }\n          /**\n           * Returns true if at least one scrollable element have been defined via options\n           * @param {HTMLElement} target\n           * @return {Boolean}\n           */\n\n        }, {\n          key: \"hasDefinedScrollableElements\",\n          value: function hasDefinedScrollableElements() {\n            return Boolean(this.options.scrollableElements.length !== 0);\n          }\n          /**\n           * Drag start handler. Finds closest scrollable parent in separate frame\n           * @param {DragStartEvent} dragEvent\n           * @private\n           */\n\n        }, {\n          key: onDragStart,\n          value: function value(dragEvent) {\n            var _this28 = this;\n\n            this.findScrollableElementFrame = requestAnimationFrame(function () {\n              _this28.scrollableElement = _this28.getScrollableElement(dragEvent.source);\n            });\n          }\n          /**\n           * Drag move handler. Remembers mouse position and initiates scrolling\n           * @param {DragMoveEvent} dragEvent\n           * @private\n           */\n\n        }, {\n          key: onDragMove,\n          value: function value(dragEvent) {\n            var _this29 = this;\n\n            this.findScrollableElementFrame = requestAnimationFrame(function () {\n              _this29.scrollableElement = _this29.getScrollableElement(dragEvent.sensorEvent.target);\n            });\n\n            if (!this.scrollableElement) {\n              return;\n            }\n\n            var sensorEvent = dragEvent.sensorEvent;\n            var scrollOffset = {\n              x: 0,\n              y: 0\n            };\n\n            if ('ontouchstart' in window) {\n              scrollOffset.y = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n              scrollOffset.x = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0;\n            }\n\n            this.currentMousePosition = {\n              clientX: sensorEvent.clientX - scrollOffset.x,\n              clientY: sensorEvent.clientY - scrollOffset.y\n            };\n            this.scrollAnimationFrame = requestAnimationFrame(this[scroll]);\n          }\n          /**\n           * Drag stop handler. Cancels scroll animations and resets state\n           * @private\n           */\n\n        }, {\n          key: onDragStop,\n          value: function value() {\n            cancelAnimationFrame(this.scrollAnimationFrame);\n            cancelAnimationFrame(this.findScrollableElementFrame);\n            this.scrollableElement = null;\n            this.scrollAnimationFrame = null;\n            this.findScrollableElementFrame = null;\n            this.currentMousePosition = null;\n          }\n          /**\n           * Scroll function that does the heavylifting\n           * @private\n           */\n\n        }, {\n          key: scroll,\n          value: function value() {\n            if (!this.scrollableElement || !this.currentMousePosition) {\n              return;\n            }\n\n            cancelAnimationFrame(this.scrollAnimationFrame);\n            var _this$options = this.options,\n                speed = _this$options.speed,\n                sensitivity = _this$options.sensitivity;\n            var rect = this.scrollableElement.getBoundingClientRect();\n            var bottomCutOff = rect.bottom > window.innerHeight;\n            var topCutOff = rect.top < 0;\n            var cutOff = topCutOff || bottomCutOff;\n            var documentScrollingElement = getDocumentScrollingElement();\n            var scrollableElement = this.scrollableElement;\n            var clientX = this.currentMousePosition.clientX;\n            var clientY = this.currentMousePosition.clientY;\n\n            if (scrollableElement !== document.body && scrollableElement !== document.documentElement && !cutOff) {\n              var offsetHeight = scrollableElement.offsetHeight,\n                  offsetWidth = scrollableElement.offsetWidth;\n\n              if (rect.top + offsetHeight - clientY < sensitivity) {\n                scrollableElement.scrollTop += speed;\n              } else if (clientY - rect.top < sensitivity) {\n                scrollableElement.scrollTop -= speed;\n              }\n\n              if (rect.left + offsetWidth - clientX < sensitivity) {\n                scrollableElement.scrollLeft += speed;\n              } else if (clientX - rect.left < sensitivity) {\n                scrollableElement.scrollLeft -= speed;\n              }\n            } else {\n              var _window = window,\n                  innerHeight = _window.innerHeight,\n                  innerWidth = _window.innerWidth;\n\n              if (clientY < sensitivity) {\n                documentScrollingElement.scrollTop -= speed;\n              } else if (innerHeight - clientY < sensitivity) {\n                documentScrollingElement.scrollTop += speed;\n              }\n\n              if (clientX < sensitivity) {\n                documentScrollingElement.scrollLeft -= speed;\n              } else if (innerWidth - clientX < sensitivity) {\n                documentScrollingElement.scrollLeft += speed;\n              }\n            }\n\n            this.scrollAnimationFrame = requestAnimationFrame(this[scroll]);\n          }\n        }]);\n\n        return Scrollable;\n      }(_AbstractPlugin2.default);\n\n      exports.default = Scrollable;\n      /**\n       * Returns true if the passed element has overflow\n       * @param {HTMLElement} element\n       * @return {Boolean}\n       * @private\n       */\n\n      function hasOverflow(element) {\n        var overflowRegex = /(auto|scroll)/;\n        var computedStyles = getComputedStyle(element, null);\n        var overflow = computedStyles.getPropertyValue('overflow') + computedStyles.getPropertyValue('overflow-y') + computedStyles.getPropertyValue('overflow-x');\n        return overflowRegex.test(overflow);\n      }\n      /**\n       * Returns true if the passed element is statically positioned\n       * @param {HTMLElement} element\n       * @return {Boolean}\n       * @private\n       */\n\n\n      function isStaticallyPositioned(element) {\n        var position = getComputedStyle(element).getPropertyValue('position');\n        return position === 'static';\n      }\n      /**\n       * Finds closest scrollable element\n       * @param {HTMLElement} element\n       * @return {HTMLElement}\n       * @private\n       */\n\n\n      function closestScrollableElement(element) {\n        if (!element) {\n          return getDocumentScrollingElement();\n        }\n\n        var position = getComputedStyle(element).getPropertyValue('position');\n        var excludeStaticParents = position === 'absolute';\n        var scrollableElement = (0, _utils.closest)(element, function (parent) {\n          if (excludeStaticParents && isStaticallyPositioned(parent)) {\n            return false;\n          }\n\n          return hasOverflow(parent);\n        });\n\n        if (position === 'fixed' || !scrollableElement) {\n          return getDocumentScrollingElement();\n        } else {\n          return scrollableElement;\n        }\n      }\n      /**\n       * Returns element that scrolls document\n       * @return {HTMLElement}\n       * @private\n       */\n\n\n      function getDocumentScrollingElement() {\n        return document.scrollingElement || document.documentElement;\n      }\n      /***/\n\n    },\n    /* 53 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.defaultOptions = undefined;\n\n      var _Scrollable = __webpack_require__(52);\n\n      var _Scrollable2 = _interopRequireDefault(_Scrollable);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _Scrollable2.default;\n      exports.defaultOptions = _Scrollable.defaultOptions;\n      /***/\n    },\n    /* 54 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.MirrorDestroyEvent = exports.MirrorMoveEvent = exports.MirrorAttachedEvent = exports.MirrorCreatedEvent = exports.MirrorCreateEvent = exports.MirrorEvent = undefined;\n\n      var _AbstractEvent = __webpack_require__(0);\n\n      var _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      /**\n       * Base mirror event\n       * @class MirrorEvent\n       * @module MirrorEvent\n       * @extends AbstractEvent\n       */\n\n\n      var MirrorEvent = /*#__PURE__*/function (_AbstractEvent2$defau7) {\n        _inherits(MirrorEvent, _AbstractEvent2$defau7);\n\n        var _super39 = _createSuper(MirrorEvent);\n\n        function MirrorEvent() {\n          _classCallCheck(this, MirrorEvent);\n\n          return _super39.apply(this, arguments);\n        }\n\n        _createClass(MirrorEvent, [{\n          key: \"source\",\n          get:\n          /**\n           * Draggables source element\n           * @property source\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.source;\n          }\n          /**\n           * Draggables original source element\n           * @property originalSource\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"originalSource\",\n          get: function get() {\n            return this.data.originalSource;\n          }\n          /**\n           * Draggables source container element\n           * @property sourceContainer\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"sourceContainer\",\n          get: function get() {\n            return this.data.sourceContainer;\n          }\n          /**\n           * Sensor event\n           * @property sensorEvent\n           * @type {SensorEvent}\n           * @readonly\n           */\n\n        }, {\n          key: \"sensorEvent\",\n          get: function get() {\n            return this.data.sensorEvent;\n          }\n          /**\n           * Drag event\n           * @property dragEvent\n           * @type {DragEvent}\n           * @readonly\n           */\n\n        }, {\n          key: \"dragEvent\",\n          get: function get() {\n            return this.data.dragEvent;\n          }\n          /**\n           * Original event that triggered sensor event\n           * @property originalEvent\n           * @type {Event}\n           * @readonly\n           */\n\n        }, {\n          key: \"originalEvent\",\n          get: function get() {\n            if (this.sensorEvent) {\n              return this.sensorEvent.originalEvent;\n            }\n\n            return null;\n          }\n        }]);\n\n        return MirrorEvent;\n      }(_AbstractEvent2.default);\n\n      exports.MirrorEvent = MirrorEvent;\n      /**\n       * Mirror create event\n       * @class MirrorCreateEvent\n       * @module MirrorCreateEvent\n       * @extends MirrorEvent\n       */\n\n      var MirrorCreateEvent = /*#__PURE__*/function (_MirrorEvent2) {\n        _inherits(MirrorCreateEvent, _MirrorEvent2);\n\n        var _super40 = _createSuper(MirrorCreateEvent);\n\n        function MirrorCreateEvent() {\n          _classCallCheck(this, MirrorCreateEvent);\n\n          return _super40.apply(this, arguments);\n        }\n\n        return MirrorCreateEvent;\n      }(MirrorEvent);\n\n      exports.MirrorCreateEvent = MirrorCreateEvent;\n      /**\n       * Mirror created event\n       * @class MirrorCreatedEvent\n       * @module MirrorCreatedEvent\n       * @extends MirrorEvent\n       */\n\n      MirrorCreateEvent.type = 'mirror:create';\n\n      var MirrorCreatedEvent = /*#__PURE__*/function (_MirrorEvent3) {\n        _inherits(MirrorCreatedEvent, _MirrorEvent3);\n\n        var _super41 = _createSuper(MirrorCreatedEvent);\n\n        function MirrorCreatedEvent() {\n          _classCallCheck(this, MirrorCreatedEvent);\n\n          return _super41.apply(this, arguments);\n        }\n\n        _createClass(MirrorCreatedEvent, [{\n          key: \"mirror\",\n          get:\n          /**\n           * Draggables mirror element\n           * @property mirror\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.mirror;\n          }\n        }]);\n\n        return MirrorCreatedEvent;\n      }(MirrorEvent);\n\n      exports.MirrorCreatedEvent = MirrorCreatedEvent;\n      /**\n       * Mirror attached event\n       * @class MirrorAttachedEvent\n       * @module MirrorAttachedEvent\n       * @extends MirrorEvent\n       */\n\n      MirrorCreatedEvent.type = 'mirror:created';\n\n      var MirrorAttachedEvent = /*#__PURE__*/function (_MirrorEvent4) {\n        _inherits(MirrorAttachedEvent, _MirrorEvent4);\n\n        var _super42 = _createSuper(MirrorAttachedEvent);\n\n        function MirrorAttachedEvent() {\n          _classCallCheck(this, MirrorAttachedEvent);\n\n          return _super42.apply(this, arguments);\n        }\n\n        _createClass(MirrorAttachedEvent, [{\n          key: \"mirror\",\n          get:\n          /**\n           * Draggables mirror element\n           * @property mirror\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.mirror;\n          }\n        }]);\n\n        return MirrorAttachedEvent;\n      }(MirrorEvent);\n\n      exports.MirrorAttachedEvent = MirrorAttachedEvent;\n      /**\n       * Mirror move event\n       * @class MirrorMoveEvent\n       * @module MirrorMoveEvent\n       * @extends MirrorEvent\n       */\n\n      MirrorAttachedEvent.type = 'mirror:attached';\n\n      var MirrorMoveEvent = /*#__PURE__*/function (_MirrorEvent5) {\n        _inherits(MirrorMoveEvent, _MirrorEvent5);\n\n        var _super43 = _createSuper(MirrorMoveEvent);\n\n        function MirrorMoveEvent() {\n          _classCallCheck(this, MirrorMoveEvent);\n\n          return _super43.apply(this, arguments);\n        }\n\n        _createClass(MirrorMoveEvent, [{\n          key: \"mirror\",\n          get:\n          /**\n           * Draggables mirror element\n           * @property mirror\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.mirror;\n          }\n        }]);\n\n        return MirrorMoveEvent;\n      }(MirrorEvent);\n\n      exports.MirrorMoveEvent = MirrorMoveEvent;\n      /**\n       * Mirror destroy event\n       * @class MirrorDestroyEvent\n       * @module MirrorDestroyEvent\n       * @extends MirrorEvent\n       */\n\n      MirrorMoveEvent.type = 'mirror:move';\n      MirrorMoveEvent.cancelable = true;\n\n      var MirrorDestroyEvent = /*#__PURE__*/function (_MirrorEvent6) {\n        _inherits(MirrorDestroyEvent, _MirrorEvent6);\n\n        var _super44 = _createSuper(MirrorDestroyEvent);\n\n        function MirrorDestroyEvent() {\n          _classCallCheck(this, MirrorDestroyEvent);\n\n          return _super44.apply(this, arguments);\n        }\n\n        _createClass(MirrorDestroyEvent, [{\n          key: \"mirror\",\n          get:\n          /**\n           * Draggables mirror element\n           * @property mirror\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.mirror;\n          }\n        }]);\n\n        return MirrorDestroyEvent;\n      }(MirrorEvent);\n\n      exports.MirrorDestroyEvent = MirrorDestroyEvent;\n      MirrorDestroyEvent.type = 'mirror:destroy';\n      MirrorDestroyEvent.cancelable = true;\n      /***/\n    },\n    /* 55 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _MirrorEvent = __webpack_require__(54);\n\n      Object.keys(_MirrorEvent).forEach(function (key) {\n        if (key === \"default\" || key === \"__esModule\") return;\n        Object.defineProperty(exports, key, {\n          enumerable: true,\n          get: function get() {\n            return _MirrorEvent[key];\n          }\n        });\n      });\n      /***/\n    },\n    /* 56 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.defaultOptions = exports.getAppendableContainer = exports.onScroll = exports.onMirrorMove = exports.onMirrorCreated = exports.onDragStop = exports.onDragMove = exports.onDragStart = undefined;\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _AbstractPlugin = __webpack_require__(1);\n\n      var _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\n\n      var _MirrorEvent = __webpack_require__(55);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      function _objectWithoutProperties(obj, keys) {\n        var target = {};\n\n        for (var i in obj) {\n          if (keys.indexOf(i) >= 0) continue;\n          if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n          target[i] = obj[i];\n        }\n\n        return target;\n      }\n\n      var onDragStart = exports.onDragStart = Symbol('onDragStart');\n      var onDragMove = exports.onDragMove = Symbol('onDragMove');\n      var onDragStop = exports.onDragStop = Symbol('onDragStop');\n      var onMirrorCreated = exports.onMirrorCreated = Symbol('onMirrorCreated');\n      var onMirrorMove = exports.onMirrorMove = Symbol('onMirrorMove');\n      var onScroll = exports.onScroll = Symbol('onScroll');\n      var getAppendableContainer = exports.getAppendableContainer = Symbol('getAppendableContainer');\n      /**\n       * Mirror default options\n       * @property {Object} defaultOptions\n       * @property {Boolean} defaultOptions.constrainDimensions\n       * @property {Boolean} defaultOptions.xAxis\n       * @property {Boolean} defaultOptions.yAxis\n       * @property {null} defaultOptions.cursorOffsetX\n       * @property {null} defaultOptions.cursorOffsetY\n       * @type {Object}\n       */\n\n      var defaultOptions = exports.defaultOptions = {\n        constrainDimensions: false,\n        xAxis: true,\n        yAxis: true,\n        cursorOffsetX: null,\n        cursorOffsetY: null\n      };\n      /**\n       * Mirror plugin which controls the mirror positioning while dragging\n       * @class Mirror\n       * @module Mirror\n       * @extends AbstractPlugin\n       */\n\n      var Mirror = /*#__PURE__*/function (_AbstractPlugin2$defa6) {\n        _inherits(Mirror, _AbstractPlugin2$defa6);\n\n        var _super45 = _createSuper(Mirror);\n\n        /**\n         * Mirror constructor.\n         * @constructs Mirror\n         * @param {Draggable} draggable - Draggable instance\n         */\n        function Mirror(draggable) {\n          var _this30;\n\n          _classCallCheck(this, Mirror);\n\n          _this30 = _super45.call(this, draggable);\n          /**\n           * Mirror options\n           * @property {Object} options\n           * @property {Boolean} options.constrainDimensions\n           * @property {Boolean} options.xAxis\n           * @property {Boolean} options.yAxis\n           * @property {Number|null} options.cursorOffsetX\n           * @property {Number|null} options.cursorOffsetY\n           * @property {String|HTMLElement|Function} options.appendTo\n           * @type {Object}\n           */\n\n          _this30.options = _extends({}, defaultOptions, _this30.getOptions());\n          /**\n           * Scroll offset for touch devices because the mirror is positioned fixed\n           * @property {Object} scrollOffset\n           * @property {Number} scrollOffset.x\n           * @property {Number} scrollOffset.y\n           */\n\n          _this30.scrollOffset = {\n            x: 0,\n            y: 0\n          };\n          /**\n           * Initial scroll offset for touch devices because the mirror is positioned fixed\n           * @property {Object} scrollOffset\n           * @property {Number} scrollOffset.x\n           * @property {Number} scrollOffset.y\n           */\n\n          _this30.initialScrollOffset = {\n            x: window.scrollX,\n            y: window.scrollY\n          };\n          _this30[onDragStart] = _this30[onDragStart].bind(_assertThisInitialized(_this30));\n          _this30[onDragMove] = _this30[onDragMove].bind(_assertThisInitialized(_this30));\n          _this30[onDragStop] = _this30[onDragStop].bind(_assertThisInitialized(_this30));\n          _this30[onMirrorCreated] = _this30[onMirrorCreated].bind(_assertThisInitialized(_this30));\n          _this30[onMirrorMove] = _this30[onMirrorMove].bind(_assertThisInitialized(_this30));\n          _this30[onScroll] = _this30[onScroll].bind(_assertThisInitialized(_this30));\n          return _this30;\n        }\n        /**\n         * Attaches plugins event listeners\n         */\n\n\n        _createClass(Mirror, [{\n          key: \"attach\",\n          value: function attach() {\n            this.draggable.on('drag:start', this[onDragStart]).on('drag:move', this[onDragMove]).on('drag:stop', this[onDragStop]).on('mirror:created', this[onMirrorCreated]).on('mirror:move', this[onMirrorMove]);\n          }\n          /**\n           * Detaches plugins event listeners\n           */\n\n        }, {\n          key: \"detach\",\n          value: function detach() {\n            this.draggable.off('drag:start', this[onDragStart]).off('drag:move', this[onDragMove]).off('drag:stop', this[onDragStop]).off('mirror:created', this[onMirrorCreated]).off('mirror:move', this[onMirrorMove]);\n          }\n          /**\n           * Returns options passed through draggable\n           * @return {Object}\n           */\n\n        }, {\n          key: \"getOptions\",\n          value: function getOptions() {\n            return this.draggable.options.mirror || {};\n          }\n        }, {\n          key: onDragStart,\n          value: function value(dragEvent) {\n            if (dragEvent.canceled()) {\n              return;\n            }\n\n            if ('ontouchstart' in window) {\n              document.addEventListener('scroll', this[onScroll], true);\n            }\n\n            this.initialScrollOffset = {\n              x: window.scrollX,\n              y: window.scrollY\n            };\n            var source = dragEvent.source,\n                originalSource = dragEvent.originalSource,\n                sourceContainer = dragEvent.sourceContainer,\n                sensorEvent = dragEvent.sensorEvent;\n            var mirrorCreateEvent = new _MirrorEvent.MirrorCreateEvent({\n              source: source,\n              originalSource: originalSource,\n              sourceContainer: sourceContainer,\n              sensorEvent: sensorEvent,\n              dragEvent: dragEvent\n            });\n            this.draggable.trigger(mirrorCreateEvent);\n\n            if (isNativeDragEvent(sensorEvent) || mirrorCreateEvent.canceled()) {\n              return;\n            }\n\n            var appendableContainer = this[getAppendableContainer](source) || sourceContainer;\n            this.mirror = source.cloneNode(true);\n            var mirrorCreatedEvent = new _MirrorEvent.MirrorCreatedEvent({\n              source: source,\n              originalSource: originalSource,\n              sourceContainer: sourceContainer,\n              sensorEvent: sensorEvent,\n              dragEvent: dragEvent,\n              mirror: this.mirror\n            });\n            var mirrorAttachedEvent = new _MirrorEvent.MirrorAttachedEvent({\n              source: source,\n              originalSource: originalSource,\n              sourceContainer: sourceContainer,\n              sensorEvent: sensorEvent,\n              dragEvent: dragEvent,\n              mirror: this.mirror\n            });\n            this.draggable.trigger(mirrorCreatedEvent);\n            appendableContainer.appendChild(this.mirror);\n            this.draggable.trigger(mirrorAttachedEvent);\n          }\n        }, {\n          key: onDragMove,\n          value: function value(dragEvent) {\n            if (!this.mirror || dragEvent.canceled()) {\n              return;\n            }\n\n            var source = dragEvent.source,\n                originalSource = dragEvent.originalSource,\n                sourceContainer = dragEvent.sourceContainer,\n                sensorEvent = dragEvent.sensorEvent;\n            var mirrorMoveEvent = new _MirrorEvent.MirrorMoveEvent({\n              source: source,\n              originalSource: originalSource,\n              sourceContainer: sourceContainer,\n              sensorEvent: sensorEvent,\n              dragEvent: dragEvent,\n              mirror: this.mirror\n            });\n            this.draggable.trigger(mirrorMoveEvent);\n          }\n        }, {\n          key: onDragStop,\n          value: function value(dragEvent) {\n            if ('ontouchstart' in window) {\n              document.removeEventListener('scroll', this[onScroll], true);\n            }\n\n            this.initialScrollOffset = {\n              x: 0,\n              y: 0\n            };\n            this.scrollOffset = {\n              x: 0,\n              y: 0\n            };\n\n            if (!this.mirror) {\n              return;\n            }\n\n            var source = dragEvent.source,\n                sourceContainer = dragEvent.sourceContainer,\n                sensorEvent = dragEvent.sensorEvent;\n            var mirrorDestroyEvent = new _MirrorEvent.MirrorDestroyEvent({\n              source: source,\n              mirror: this.mirror,\n              sourceContainer: sourceContainer,\n              sensorEvent: sensorEvent,\n              dragEvent: dragEvent\n            });\n            this.draggable.trigger(mirrorDestroyEvent);\n\n            if (!mirrorDestroyEvent.canceled()) {\n              this.mirror.parentNode.removeChild(this.mirror);\n            }\n          }\n        }, {\n          key: onScroll,\n          value: function value() {\n            this.scrollOffset = {\n              x: window.scrollX - this.initialScrollOffset.x,\n              y: window.scrollY - this.initialScrollOffset.y\n            };\n          }\n          /**\n           * Mirror created handler\n           * @param {MirrorCreatedEvent} mirrorEvent\n           * @return {Promise}\n           * @private\n           */\n\n        }, {\n          key: onMirrorCreated,\n          value: function value(_ref19) {\n            var _this31 = this;\n\n            var mirror = _ref19.mirror,\n                source = _ref19.source,\n                sensorEvent = _ref19.sensorEvent;\n            var mirrorClass = this.draggable.getClassNameFor('mirror');\n\n            var setState = function setState(_ref) {\n              var mirrorOffset = _ref.mirrorOffset,\n                  initialX = _ref.initialX,\n                  initialY = _ref.initialY,\n                  args = _objectWithoutProperties(_ref, ['mirrorOffset', 'initialX', 'initialY']);\n\n              _this31.mirrorOffset = mirrorOffset;\n              _this31.initialX = initialX;\n              _this31.initialY = initialY;\n              return _extends({\n                mirrorOffset: mirrorOffset,\n                initialX: initialX,\n                initialY: initialY\n              }, args);\n            };\n\n            var initialState = {\n              mirror: mirror,\n              source: source,\n              sensorEvent: sensorEvent,\n              mirrorClass: mirrorClass,\n              scrollOffset: this.scrollOffset,\n              options: this.options\n            };\n            return Promise.resolve(initialState) // Fix reflow here\n            .then(computeMirrorDimensions).then(calculateMirrorOffset).then(resetMirror).then(addMirrorClasses).then(positionMirror({\n              initial: true\n            })).then(removeMirrorID).then(setState);\n          }\n          /**\n           * Mirror move handler\n           * @param {MirrorMoveEvent} mirrorEvent\n           * @return {Promise|null}\n           * @private\n           */\n\n        }, {\n          key: onMirrorMove,\n          value: function value(mirrorEvent) {\n            if (mirrorEvent.canceled()) {\n              return null;\n            }\n\n            var initialState = {\n              mirror: mirrorEvent.mirror,\n              sensorEvent: mirrorEvent.sensorEvent,\n              mirrorOffset: this.mirrorOffset,\n              options: this.options,\n              initialX: this.initialX,\n              initialY: this.initialY,\n              scrollOffset: this.scrollOffset\n            };\n            return Promise.resolve(initialState).then(positionMirror({\n              raf: true\n            }));\n          }\n          /**\n           * Returns appendable container for mirror based on the appendTo option\n           * @private\n           * @param {Object} options\n           * @param {HTMLElement} options.source - Current source\n           * @return {HTMLElement}\n           */\n\n        }, {\n          key: getAppendableContainer,\n          value: function value(source) {\n            var appendTo = this.options.appendTo;\n\n            if (typeof appendTo === 'string') {\n              return document.querySelector(appendTo);\n            } else if (appendTo instanceof HTMLElement) {\n              return appendTo;\n            } else if (typeof appendTo === 'function') {\n              return appendTo(source);\n            } else {\n              return source.parentNode;\n            }\n          }\n        }]);\n\n        return Mirror;\n      }(_AbstractPlugin2.default);\n\n      exports.default = Mirror;\n      /**\n       * Computes mirror dimensions based on the source element\n       * Adds sourceRect to state\n       * @param {Object} state\n       * @param {HTMLElement} state.source\n       * @return {Promise}\n       * @private\n       */\n\n      function computeMirrorDimensions(_ref2) {\n        var source = _ref2.source,\n            args = _objectWithoutProperties(_ref2, ['source']);\n\n        return withPromise(function (resolve) {\n          var sourceRect = source.getBoundingClientRect();\n          resolve(_extends({\n            source: source,\n            sourceRect: sourceRect\n          }, args));\n        });\n      }\n      /**\n       * Calculates mirror offset\n       * Adds mirrorOffset to state\n       * @param {Object} state\n       * @param {SensorEvent} state.sensorEvent\n       * @param {DOMRect} state.sourceRect\n       * @return {Promise}\n       * @private\n       */\n\n\n      function calculateMirrorOffset(_ref3) {\n        var sensorEvent = _ref3.sensorEvent,\n            sourceRect = _ref3.sourceRect,\n            options = _ref3.options,\n            args = _objectWithoutProperties(_ref3, ['sensorEvent', 'sourceRect', 'options']);\n\n        return withPromise(function (resolve) {\n          var top = options.cursorOffsetY === null ? sensorEvent.clientY - sourceRect.top : options.cursorOffsetY;\n          var left = options.cursorOffsetX === null ? sensorEvent.clientX - sourceRect.left : options.cursorOffsetX;\n          var mirrorOffset = {\n            top: top,\n            left: left\n          };\n          resolve(_extends({\n            sensorEvent: sensorEvent,\n            sourceRect: sourceRect,\n            mirrorOffset: mirrorOffset,\n            options: options\n          }, args));\n        });\n      }\n      /**\n       * Applys mirror styles\n       * @param {Object} state\n       * @param {HTMLElement} state.mirror\n       * @param {HTMLElement} state.source\n       * @param {Object} state.options\n       * @return {Promise}\n       * @private\n       */\n\n\n      function resetMirror(_ref4) {\n        var mirror = _ref4.mirror,\n            source = _ref4.source,\n            options = _ref4.options,\n            args = _objectWithoutProperties(_ref4, ['mirror', 'source', 'options']);\n\n        return withPromise(function (resolve) {\n          var offsetHeight;\n          var offsetWidth;\n\n          if (options.constrainDimensions) {\n            var computedSourceStyles = getComputedStyle(source);\n            offsetHeight = computedSourceStyles.getPropertyValue('height');\n            offsetWidth = computedSourceStyles.getPropertyValue('width');\n          }\n\n          mirror.style.position = 'fixed';\n          mirror.style.pointerEvents = 'none';\n          mirror.style.top = 0;\n          mirror.style.left = 0;\n          mirror.style.margin = 0;\n\n          if (options.constrainDimensions) {\n            mirror.style.height = offsetHeight;\n            mirror.style.width = offsetWidth;\n          }\n\n          resolve(_extends({\n            mirror: mirror,\n            source: source,\n            options: options\n          }, args));\n        });\n      }\n      /**\n       * Applys mirror class on mirror element\n       * @param {Object} state\n       * @param {HTMLElement} state.mirror\n       * @param {String} state.mirrorClass\n       * @return {Promise}\n       * @private\n       */\n\n\n      function addMirrorClasses(_ref5) {\n        var mirror = _ref5.mirror,\n            mirrorClass = _ref5.mirrorClass,\n            args = _objectWithoutProperties(_ref5, ['mirror', 'mirrorClass']);\n\n        return withPromise(function (resolve) {\n          mirror.classList.add(mirrorClass);\n          resolve(_extends({\n            mirror: mirror,\n            mirrorClass: mirrorClass\n          }, args));\n        });\n      }\n      /**\n       * Removes source ID from cloned mirror element\n       * @param {Object} state\n       * @param {HTMLElement} state.mirror\n       * @return {Promise}\n       * @private\n       */\n\n\n      function removeMirrorID(_ref6) {\n        var mirror = _ref6.mirror,\n            args = _objectWithoutProperties(_ref6, ['mirror']);\n\n        return withPromise(function (resolve) {\n          mirror.removeAttribute('id');\n          delete mirror.id;\n          resolve(_extends({\n            mirror: mirror\n          }, args));\n        });\n      }\n      /**\n       * Positions mirror with translate3d\n       * @param {Object} state\n       * @param {HTMLElement} state.mirror\n       * @param {SensorEvent} state.sensorEvent\n       * @param {Object} state.mirrorOffset\n       * @param {Number} state.initialY\n       * @param {Number} state.initialX\n       * @param {Object} state.options\n       * @return {Promise}\n       * @private\n       */\n\n\n      function positionMirror() {\n        var _ref20 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            _ref20$withFrame = _ref20.withFrame,\n            withFrame = _ref20$withFrame === void 0 ? false : _ref20$withFrame,\n            _ref20$initial = _ref20.initial,\n            initial = _ref20$initial === void 0 ? false : _ref20$initial;\n\n        return function (_ref7) {\n          var mirror = _ref7.mirror,\n              sensorEvent = _ref7.sensorEvent,\n              mirrorOffset = _ref7.mirrorOffset,\n              initialY = _ref7.initialY,\n              initialX = _ref7.initialX,\n              scrollOffset = _ref7.scrollOffset,\n              options = _ref7.options,\n              args = _objectWithoutProperties(_ref7, ['mirror', 'sensorEvent', 'mirrorOffset', 'initialY', 'initialX', 'scrollOffset', 'options']);\n\n          return withPromise(function (resolve) {\n            var result = _extends({\n              mirror: mirror,\n              sensorEvent: sensorEvent,\n              mirrorOffset: mirrorOffset,\n              options: options\n            }, args);\n\n            if (mirrorOffset) {\n              var x = sensorEvent.clientX - mirrorOffset.left - scrollOffset.x;\n              var y = sensorEvent.clientY - mirrorOffset.top - scrollOffset.y;\n\n              if (options.xAxis && options.yAxis || initial) {\n                mirror.style.transform = \"translate3d(\".concat(x, \"px, \").concat(y, \"px, 0)\");\n              } else if (options.xAxis && !options.yAxis) {\n                mirror.style.transform = \"translate3d(\".concat(x, \"px, \").concat(initialY, \"px, 0)\");\n              } else if (options.yAxis && !options.xAxis) {\n                mirror.style.transform = \"translate3d(\".concat(initialX, \"px, \").concat(y, \"px, 0)\");\n              }\n\n              if (initial) {\n                result.initialX = x;\n                result.initialY = y;\n              }\n            }\n\n            resolve(result);\n          }, {\n            frame: withFrame\n          });\n        };\n      }\n      /**\n       * Wraps functions in promise with potential animation frame option\n       * @param {Function} callback\n       * @param {Object} options\n       * @param {Boolean} options.raf\n       * @return {Promise}\n       * @private\n       */\n\n\n      function withPromise(callback) {\n        var _ref21 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            _ref21$raf = _ref21.raf,\n            raf = _ref21$raf === void 0 ? false : _ref21$raf;\n\n        return new Promise(function (resolve, reject) {\n          if (raf) {\n            requestAnimationFrame(function () {\n              callback(resolve, reject);\n            });\n          } else {\n            callback(resolve, reject);\n          }\n        });\n      }\n      /**\n       * Returns true if the sensor event was triggered by a native browser drag event\n       * @param {SensorEvent} sensorEvent\n       */\n\n\n      function isNativeDragEvent(sensorEvent) {\n        return /^drag/.test(sensorEvent.originalEvent.type);\n      }\n      /***/\n\n    },\n    /* 57 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.defaultOptions = undefined;\n\n      var _Mirror = __webpack_require__(56);\n\n      var _Mirror2 = _interopRequireDefault(_Mirror);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _Mirror2.default;\n      exports.defaultOptions = _Mirror.defaultOptions;\n      /***/\n    },\n    /* 58 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _AbstractPlugin = __webpack_require__(1);\n\n      var _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var onInitialize = Symbol('onInitialize');\n      var onDestroy = Symbol('onDestroy');\n      /**\n       * Focusable default options\n       * @property {Object} defaultOptions\n       * @type {Object}\n       */\n\n      var defaultOptions = {};\n      /**\n       * Focusable plugin\n       * @class Focusable\n       * @module Focusable\n       * @extends AbstractPlugin\n       */\n\n      var Focusable = /*#__PURE__*/function (_AbstractPlugin2$defa7) {\n        _inherits(Focusable, _AbstractPlugin2$defa7);\n\n        var _super46 = _createSuper(Focusable);\n\n        /**\n         * Focusable constructor.\n         * @constructs Focusable\n         * @param {Draggable} draggable - Draggable instance\n         */\n        function Focusable(draggable) {\n          var _this32;\n\n          _classCallCheck(this, Focusable);\n\n          _this32 = _super46.call(this, draggable);\n          /**\n           * Focusable options\n           * @property {Object} options\n           * @type {Object}\n           */\n\n          _this32.options = _extends({}, defaultOptions, _this32.getOptions());\n          _this32[onInitialize] = _this32[onInitialize].bind(_assertThisInitialized(_this32));\n          _this32[onDestroy] = _this32[onDestroy].bind(_assertThisInitialized(_this32));\n          return _this32;\n        }\n        /**\n         * Attaches listeners to draggable\n         */\n\n\n        _createClass(Focusable, [{\n          key: \"attach\",\n          value: function attach() {\n            this.draggable.on('draggable:initialize', this[onInitialize]).on('draggable:destroy', this[onDestroy]);\n          }\n          /**\n           * Detaches listeners from draggable\n           */\n\n        }, {\n          key: \"detach\",\n          value: function detach() {\n            this.draggable.off('draggable:initialize', this[onInitialize]).off('draggable:destroy', this[onDestroy]);\n          }\n          /**\n           * Returns options passed through draggable\n           * @return {Object}\n           */\n\n        }, {\n          key: \"getOptions\",\n          value: function getOptions() {\n            return this.draggable.options.focusable || {};\n          }\n          /**\n           * Returns draggable containers and elements\n           * @return {HTMLElement[]}\n           */\n\n        }, {\n          key: \"getElements\",\n          value: function getElements() {\n            return [].concat(_toConsumableArray(this.draggable.containers), _toConsumableArray(this.draggable.getDraggableElements()));\n          }\n          /**\n           * Intialize handler\n           * @private\n           */\n\n        }, {\n          key: onInitialize,\n          value: function value() {\n            var _this33 = this;\n\n            // Can wait until the next best frame is available\n            requestAnimationFrame(function () {\n              _this33.getElements().forEach(function (element) {\n                return decorateElement(element);\n              });\n            });\n          }\n          /**\n           * Destroy handler\n           * @private\n           */\n\n        }, {\n          key: onDestroy,\n          value: function value() {\n            var _this34 = this;\n\n            // Can wait until the next best frame is available\n            requestAnimationFrame(function () {\n              _this34.getElements().forEach(function (element) {\n                return stripElement(element);\n              });\n            });\n          }\n        }]);\n\n        return Focusable;\n      }(_AbstractPlugin2.default);\n\n      exports.default = Focusable;\n      /**\n       * Keeps track of all the elements that are missing tabindex attributes\n       * so they can be reset when draggable gets destroyed\n       * @const {HTMLElement[]} elementsWithMissingTabIndex\n       */\n\n      var elementsWithMissingTabIndex = [];\n      /**\n       * Decorates element with tabindex attributes\n       * @param {HTMLElement} element\n       * @return {Object}\n       * @private\n       */\n\n      function decorateElement(element) {\n        var hasMissingTabIndex = Boolean(!element.getAttribute('tabindex') && element.tabIndex === -1);\n\n        if (hasMissingTabIndex) {\n          elementsWithMissingTabIndex.push(element);\n          element.tabIndex = 0;\n        }\n      }\n      /**\n       * Removes elements tabindex attributes\n       * @param {HTMLElement} element\n       * @private\n       */\n\n\n      function stripElement(element) {\n        var tabIndexElementPosition = elementsWithMissingTabIndex.indexOf(element);\n\n        if (tabIndexElementPosition !== -1) {\n          element.tabIndex = -1;\n          elementsWithMissingTabIndex.splice(tabIndexElementPosition, 1);\n        }\n      }\n      /***/\n\n    },\n    /* 59 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _Focusable = __webpack_require__(58);\n\n      var _Focusable2 = _interopRequireDefault(_Focusable);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _Focusable2.default;\n      /***/\n    },\n    /* 60 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      /**\n       * All draggable plugins inherit from this class.\n       * @abstract\n       * @class AbstractPlugin\n       * @module AbstractPlugin\n       */\n\n      var AbstractPlugin = /*#__PURE__*/function () {\n        /**\n         * AbstractPlugin constructor.\n         * @constructs AbstractPlugin\n         * @param {Draggable} draggable - Draggable instance\n         */\n        function AbstractPlugin(draggable) {\n          _classCallCheck(this, AbstractPlugin);\n\n          /**\n           * Draggable instance\n           * @property draggable\n           * @type {Draggable}\n           */\n          this.draggable = draggable;\n        }\n        /**\n         * Override to add listeners\n         * @abstract\n         */\n\n\n        _createClass(AbstractPlugin, [{\n          key: \"attach\",\n          value: function attach() {\n            throw new Error('Not Implemented');\n          }\n          /**\n           * Override to remove listeners\n           * @abstract\n           */\n\n        }, {\n          key: \"detach\",\n          value: function detach() {\n            throw new Error('Not Implemented');\n          }\n        }]);\n\n        return AbstractPlugin;\n      }();\n\n      exports.default = AbstractPlugin;\n      /***/\n    },\n    /* 61 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.defaultOptions = undefined;\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _AbstractPlugin = __webpack_require__(1);\n\n      var _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      var onInitialize = Symbol('onInitialize');\n      var onDestroy = Symbol('onDestroy');\n      var announceEvent = Symbol('announceEvent');\n      var announceMessage = Symbol('announceMessage');\n      var ARIA_RELEVANT = 'aria-relevant';\n      var ARIA_ATOMIC = 'aria-atomic';\n      var ARIA_LIVE = 'aria-live';\n      var ROLE = 'role';\n      /**\n       * Announcement default options\n       * @property {Object} defaultOptions\n       * @property {Number} defaultOptions.expire\n       * @type {Object}\n       */\n\n      var defaultOptions = exports.defaultOptions = {\n        expire: 7000\n      };\n      /**\n       * Announcement plugin\n       * @class Announcement\n       * @module Announcement\n       * @extends AbstractPlugin\n       */\n\n      var Announcement = /*#__PURE__*/function (_AbstractPlugin2$defa8) {\n        _inherits(Announcement, _AbstractPlugin2$defa8);\n\n        var _super47 = _createSuper(Announcement);\n\n        /**\n         * Announcement constructor.\n         * @constructs Announcement\n         * @param {Draggable} draggable - Draggable instance\n         */\n        function Announcement(draggable) {\n          var _this35;\n\n          _classCallCheck(this, Announcement);\n\n          _this35 = _super47.call(this, draggable);\n          /**\n           * Plugin options\n           * @property options\n           * @type {Object}\n           */\n\n          _this35.options = _extends({}, defaultOptions, _this35.getOptions());\n          /**\n           * Original draggable trigger method. Hack until we have onAll or on('all')\n           * @property originalTriggerMethod\n           * @type {Function}\n           */\n\n          _this35.originalTriggerMethod = _this35.draggable.trigger;\n          _this35[onInitialize] = _this35[onInitialize].bind(_assertThisInitialized(_this35));\n          _this35[onDestroy] = _this35[onDestroy].bind(_assertThisInitialized(_this35));\n          return _this35;\n        }\n        /**\n         * Attaches listeners to draggable\n         */\n\n\n        _createClass(Announcement, [{\n          key: \"attach\",\n          value: function attach() {\n            this.draggable.on('draggable:initialize', this[onInitialize]);\n          }\n          /**\n           * Detaches listeners from draggable\n           */\n\n        }, {\n          key: \"detach\",\n          value: function detach() {\n            this.draggable.off('draggable:destroy', this[onDestroy]);\n          }\n          /**\n           * Returns passed in options\n           */\n\n        }, {\n          key: \"getOptions\",\n          value: function getOptions() {\n            return this.draggable.options.announcements || {};\n          }\n          /**\n           * Announces event\n           * @private\n           * @param {AbstractEvent} event\n           */\n\n        }, {\n          key: announceEvent,\n          value: function value(event) {\n            var message = this.options[event.type];\n\n            if (message && typeof message === 'string') {\n              this[announceMessage](message);\n            }\n\n            if (message && typeof message === 'function') {\n              this[announceMessage](message(event));\n            }\n          }\n          /**\n           * Announces message to screen reader\n           * @private\n           * @param {String} message\n           */\n\n        }, {\n          key: announceMessage,\n          value: function value(message) {\n            announce(message, {\n              expire: this.options.expire\n            });\n          }\n          /**\n           * Initialize hander\n           * @private\n           */\n\n        }, {\n          key: onInitialize,\n          value: function value() {\n            var _this36 = this;\n\n            // Hack until there is an api for listening for all events\n            this.draggable.trigger = function (event) {\n              try {\n                _this36[announceEvent](event);\n              } finally {\n                // Ensure that original trigger is called\n                _this36.originalTriggerMethod.call(_this36.draggable, event);\n              }\n            };\n          }\n          /**\n           * Destroy hander\n           * @private\n           */\n\n        }, {\n          key: onDestroy,\n          value: function value() {\n            this.draggable.trigger = this.originalTriggerMethod;\n          }\n        }]);\n\n        return Announcement;\n      }(_AbstractPlugin2.default);\n\n      exports.default = Announcement;\n      /**\n       * @const {HTMLElement} liveRegion\n       */\n\n      var liveRegion = createRegion();\n      /**\n       * Announces message via live region\n       * @param {String} message\n       * @param {Object} options\n       * @param {Number} options.expire\n       */\n\n      function announce(message, _ref22) {\n        var expire = _ref22.expire;\n        var element = document.createElement('div');\n        element.textContent = message;\n        liveRegion.appendChild(element);\n        return setTimeout(function () {\n          liveRegion.removeChild(element);\n        }, expire);\n      }\n      /**\n       * Creates region element\n       * @return {HTMLElement}\n       */\n\n\n      function createRegion() {\n        var element = document.createElement('div');\n        element.setAttribute('id', 'draggable-live-region');\n        element.setAttribute(ARIA_RELEVANT, 'additions');\n        element.setAttribute(ARIA_ATOMIC, 'true');\n        element.setAttribute(ARIA_LIVE, 'assertive');\n        element.setAttribute(ROLE, 'log');\n        element.style.position = 'fixed';\n        element.style.width = '1px';\n        element.style.height = '1px';\n        element.style.top = '-1px';\n        element.style.overflow = 'hidden';\n        return element;\n      } // Append live region element as early as possible\n\n\n      document.addEventListener('DOMContentLoaded', function () {\n        document.body.appendChild(liveRegion);\n      });\n      /***/\n    },\n    /* 62 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.defaultOptions = undefined;\n\n      var _Announcement = __webpack_require__(61);\n\n      var _Announcement2 = _interopRequireDefault(_Announcement);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.default = _Announcement2.default;\n      exports.defaultOptions = _Announcement.defaultOptions;\n      /***/\n    },\n    /* 63 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.DraggableDestroyEvent = exports.DraggableInitializedEvent = exports.DraggableEvent = undefined;\n\n      var _AbstractEvent = __webpack_require__(0);\n\n      var _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      /**\n       * Base draggable event\n       * @class DraggableEvent\n       * @module DraggableEvent\n       * @extends AbstractEvent\n       */\n\n\n      var DraggableEvent = /*#__PURE__*/function (_AbstractEvent2$defau8) {\n        _inherits(DraggableEvent, _AbstractEvent2$defau8);\n\n        var _super48 = _createSuper(DraggableEvent);\n\n        function DraggableEvent() {\n          _classCallCheck(this, DraggableEvent);\n\n          return _super48.apply(this, arguments);\n        }\n\n        _createClass(DraggableEvent, [{\n          key: \"draggable\",\n          get:\n          /**\n           * Draggable instance\n           * @property draggable\n           * @type {Draggable}\n           * @readonly\n           */\n          function get() {\n            return this.data.draggable;\n          }\n        }]);\n\n        return DraggableEvent;\n      }(_AbstractEvent2.default);\n\n      exports.DraggableEvent = DraggableEvent;\n      /**\n       * Draggable initialized event\n       * @class DraggableInitializedEvent\n       * @module DraggableInitializedEvent\n       * @extends DraggableEvent\n       */\n\n      DraggableEvent.type = 'draggable';\n\n      var DraggableInitializedEvent = /*#__PURE__*/function (_DraggableEvent2) {\n        _inherits(DraggableInitializedEvent, _DraggableEvent2);\n\n        var _super49 = _createSuper(DraggableInitializedEvent);\n\n        function DraggableInitializedEvent() {\n          _classCallCheck(this, DraggableInitializedEvent);\n\n          return _super49.apply(this, arguments);\n        }\n\n        return DraggableInitializedEvent;\n      }(DraggableEvent);\n\n      exports.DraggableInitializedEvent = DraggableInitializedEvent;\n      /**\n       * Draggable destory event\n       * @class DraggableInitializedEvent\n       * @module DraggableDestroyEvent\n       * @extends DraggableDestroyEvent\n       */\n\n      DraggableInitializedEvent.type = 'draggable:initialize';\n\n      var DraggableDestroyEvent = /*#__PURE__*/function (_DraggableEvent3) {\n        _inherits(DraggableDestroyEvent, _DraggableEvent3);\n\n        var _super50 = _createSuper(DraggableDestroyEvent);\n\n        function DraggableDestroyEvent() {\n          _classCallCheck(this, DraggableDestroyEvent);\n\n          return _super50.apply(this, arguments);\n        }\n\n        return DraggableDestroyEvent;\n      }(DraggableEvent);\n\n      exports.DraggableDestroyEvent = DraggableDestroyEvent;\n      DraggableDestroyEvent.type = 'draggable:destroy';\n      /***/\n    },\n    /* 64 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _canceled = Symbol('canceled');\n      /**\n       * All events fired by draggable inherit this class. You can call `cancel()` to\n       * cancel a specific event or you can check if an event has been canceled by\n       * calling `canceled()`.\n       * @abstract\n       * @class AbstractEvent\n       * @module AbstractEvent\n       */\n\n\n      var AbstractEvent = /*#__PURE__*/function () {\n        /**\n         * AbstractEvent constructor.\n         * @constructs AbstractEvent\n         * @param {object} data - Event data\n         */\n\n        /**\n         * Event type\n         * @static\n         * @abstract\n         * @property type\n         * @type {String}\n         */\n        function AbstractEvent(data) {\n          _classCallCheck(this, AbstractEvent);\n\n          this[_canceled] = false;\n          this.data = data;\n        }\n        /**\n         * Read-only type\n         * @abstract\n         * @return {String}\n         */\n\n        /**\n         * Event cancelable\n         * @static\n         * @abstract\n         * @property cancelable\n         * @type {Boolean}\n         */\n\n\n        _createClass(AbstractEvent, [{\n          key: \"type\",\n          get: function get() {\n            return this.constructor.type;\n          }\n          /**\n           * Read-only cancelable\n           * @abstract\n           * @return {Boolean}\n           */\n\n        }, {\n          key: \"cancelable\",\n          get: function get() {\n            return this.constructor.cancelable;\n          }\n          /**\n           * Cancels the event instance\n           * @abstract\n           */\n\n        }, {\n          key: \"cancel\",\n          value: function cancel() {\n            this[_canceled] = true;\n          }\n          /**\n           * Check if event has been canceled\n           * @abstract\n           * @return {Boolean}\n           */\n\n        }, {\n          key: \"canceled\",\n          value: function canceled() {\n            return Boolean(this[_canceled]);\n          }\n          /**\n           * Returns new event instance with existing event data.\n           * This method allows for overriding of event data.\n           * @param {Object} data\n           * @return {AbstractEvent}\n           */\n\n        }, {\n          key: \"clone\",\n          value: function clone(data) {\n            return new this.constructor(_extends({}, this.data, data));\n          }\n        }]);\n\n        return AbstractEvent;\n      }();\n\n      exports.default = AbstractEvent;\n      AbstractEvent.type = 'event';\n      AbstractEvent.cancelable = false;\n      /***/\n    },\n    /* 65 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.DragStopEvent = exports.DragPressureEvent = exports.DragOutContainerEvent = exports.DragOverContainerEvent = exports.DragOutEvent = exports.DragOverEvent = exports.DragMoveEvent = exports.DragStartEvent = exports.DragEvent = undefined;\n\n      var _AbstractEvent = __webpack_require__(0);\n\n      var _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n      /**\n       * Base drag event\n       * @class DragEvent\n       * @module DragEvent\n       * @extends AbstractEvent\n       */\n\n\n      var DragEvent = /*#__PURE__*/function (_AbstractEvent2$defau9) {\n        _inherits(DragEvent, _AbstractEvent2$defau9);\n\n        var _super51 = _createSuper(DragEvent);\n\n        function DragEvent() {\n          _classCallCheck(this, DragEvent);\n\n          return _super51.apply(this, arguments);\n        }\n\n        _createClass(DragEvent, [{\n          key: \"source\",\n          get:\n          /**\n           * Draggables source element\n           * @property source\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.source;\n          }\n          /**\n           * Draggables original source element\n           * @property originalSource\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"originalSource\",\n          get: function get() {\n            return this.data.originalSource;\n          }\n          /**\n           * Draggables mirror element\n           * @property mirror\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"mirror\",\n          get: function get() {\n            return this.data.mirror;\n          }\n          /**\n           * Draggables source container element\n           * @property sourceContainer\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"sourceContainer\",\n          get: function get() {\n            return this.data.sourceContainer;\n          }\n          /**\n           * Sensor event\n           * @property sensorEvent\n           * @type {SensorEvent}\n           * @readonly\n           */\n\n        }, {\n          key: \"sensorEvent\",\n          get: function get() {\n            return this.data.sensorEvent;\n          }\n          /**\n           * Original event that triggered sensor event\n           * @property originalEvent\n           * @type {Event}\n           * @readonly\n           */\n\n        }, {\n          key: \"originalEvent\",\n          get: function get() {\n            if (this.sensorEvent) {\n              return this.sensorEvent.originalEvent;\n            }\n\n            return null;\n          }\n        }]);\n\n        return DragEvent;\n      }(_AbstractEvent2.default);\n\n      exports.DragEvent = DragEvent;\n      /**\n       * Drag start event\n       * @class DragStartEvent\n       * @module DragStartEvent\n       * @extends DragEvent\n       */\n\n      DragEvent.type = 'drag';\n\n      var DragStartEvent = /*#__PURE__*/function (_DragEvent2) {\n        _inherits(DragStartEvent, _DragEvent2);\n\n        var _super52 = _createSuper(DragStartEvent);\n\n        function DragStartEvent() {\n          _classCallCheck(this, DragStartEvent);\n\n          return _super52.apply(this, arguments);\n        }\n\n        return DragStartEvent;\n      }(DragEvent);\n\n      exports.DragStartEvent = DragStartEvent;\n      /**\n       * Drag move event\n       * @class DragMoveEvent\n       * @module DragMoveEvent\n       * @extends DragEvent\n       */\n\n      DragStartEvent.type = 'drag:start';\n      DragStartEvent.cancelable = true;\n\n      var DragMoveEvent = /*#__PURE__*/function (_DragEvent3) {\n        _inherits(DragMoveEvent, _DragEvent3);\n\n        var _super53 = _createSuper(DragMoveEvent);\n\n        function DragMoveEvent() {\n          _classCallCheck(this, DragMoveEvent);\n\n          return _super53.apply(this, arguments);\n        }\n\n        return DragMoveEvent;\n      }(DragEvent);\n\n      exports.DragMoveEvent = DragMoveEvent;\n      /**\n       * Drag over event\n       * @class DragOverEvent\n       * @module DragOverEvent\n       * @extends DragEvent\n       */\n\n      DragMoveEvent.type = 'drag:move';\n\n      var DragOverEvent = /*#__PURE__*/function (_DragEvent4) {\n        _inherits(DragOverEvent, _DragEvent4);\n\n        var _super54 = _createSuper(DragOverEvent);\n\n        function DragOverEvent() {\n          _classCallCheck(this, DragOverEvent);\n\n          return _super54.apply(this, arguments);\n        }\n\n        _createClass(DragOverEvent, [{\n          key: \"overContainer\",\n          get:\n          /**\n           * Draggable container you are over\n           * @property overContainer\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.overContainer;\n          }\n          /**\n           * Draggable element you are over\n           * @property over\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"over\",\n          get: function get() {\n            return this.data.over;\n          }\n        }]);\n\n        return DragOverEvent;\n      }(DragEvent);\n\n      exports.DragOverEvent = DragOverEvent;\n      /**\n       * Drag out event\n       * @class DragOutEvent\n       * @module DragOutEvent\n       * @extends DragEvent\n       */\n\n      DragOverEvent.type = 'drag:over';\n      DragOverEvent.cancelable = true;\n\n      var DragOutEvent = /*#__PURE__*/function (_DragEvent5) {\n        _inherits(DragOutEvent, _DragEvent5);\n\n        var _super55 = _createSuper(DragOutEvent);\n\n        function DragOutEvent() {\n          _classCallCheck(this, DragOutEvent);\n\n          return _super55.apply(this, arguments);\n        }\n\n        _createClass(DragOutEvent, [{\n          key: \"overContainer\",\n          get:\n          /**\n           * Draggable container you are over\n           * @property overContainer\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.overContainer;\n          }\n          /**\n           * Draggable element you left\n           * @property over\n           * @type {HTMLElement}\n           * @readonly\n           */\n\n        }, {\n          key: \"over\",\n          get: function get() {\n            return this.data.over;\n          }\n        }]);\n\n        return DragOutEvent;\n      }(DragEvent);\n\n      exports.DragOutEvent = DragOutEvent;\n      /**\n       * Drag over container event\n       * @class DragOverContainerEvent\n       * @module DragOverContainerEvent\n       * @extends DragEvent\n       */\n\n      DragOutEvent.type = 'drag:out';\n\n      var DragOverContainerEvent = /*#__PURE__*/function (_DragEvent6) {\n        _inherits(DragOverContainerEvent, _DragEvent6);\n\n        var _super56 = _createSuper(DragOverContainerEvent);\n\n        function DragOverContainerEvent() {\n          _classCallCheck(this, DragOverContainerEvent);\n\n          return _super56.apply(this, arguments);\n        }\n\n        _createClass(DragOverContainerEvent, [{\n          key: \"overContainer\",\n          get:\n          /**\n           * Draggable container you are over\n           * @property overContainer\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.overContainer;\n          }\n        }]);\n\n        return DragOverContainerEvent;\n      }(DragEvent);\n\n      exports.DragOverContainerEvent = DragOverContainerEvent;\n      /**\n       * Drag out container event\n       * @class DragOutContainerEvent\n       * @module DragOutContainerEvent\n       * @extends DragEvent\n       */\n\n      DragOverContainerEvent.type = 'drag:over:container';\n\n      var DragOutContainerEvent = /*#__PURE__*/function (_DragEvent7) {\n        _inherits(DragOutContainerEvent, _DragEvent7);\n\n        var _super57 = _createSuper(DragOutContainerEvent);\n\n        function DragOutContainerEvent() {\n          _classCallCheck(this, DragOutContainerEvent);\n\n          return _super57.apply(this, arguments);\n        }\n\n        _createClass(DragOutContainerEvent, [{\n          key: \"overContainer\",\n          get:\n          /**\n           * Draggable container you left\n           * @property overContainer\n           * @type {HTMLElement}\n           * @readonly\n           */\n          function get() {\n            return this.data.overContainer;\n          }\n        }]);\n\n        return DragOutContainerEvent;\n      }(DragEvent);\n\n      exports.DragOutContainerEvent = DragOutContainerEvent;\n      /**\n       * Drag pressure event\n       * @class DragPressureEvent\n       * @module DragPressureEvent\n       * @extends DragEvent\n       */\n\n      DragOutContainerEvent.type = 'drag:out:container';\n\n      var DragPressureEvent = /*#__PURE__*/function (_DragEvent8) {\n        _inherits(DragPressureEvent, _DragEvent8);\n\n        var _super58 = _createSuper(DragPressureEvent);\n\n        function DragPressureEvent() {\n          _classCallCheck(this, DragPressureEvent);\n\n          return _super58.apply(this, arguments);\n        }\n\n        _createClass(DragPressureEvent, [{\n          key: \"pressure\",\n          get:\n          /**\n           * Pressure applied on draggable element\n           * @property pressure\n           * @type {Number}\n           * @readonly\n           */\n          function get() {\n            return this.data.pressure;\n          }\n        }]);\n\n        return DragPressureEvent;\n      }(DragEvent);\n\n      exports.DragPressureEvent = DragPressureEvent;\n      /**\n       * Drag stop event\n       * @class DragStopEvent\n       * @module DragStopEvent\n       * @extends DragEvent\n       */\n\n      DragPressureEvent.type = 'drag:pressure';\n\n      var DragStopEvent = /*#__PURE__*/function (_DragEvent9) {\n        _inherits(DragStopEvent, _DragEvent9);\n\n        var _super59 = _createSuper(DragStopEvent);\n\n        function DragStopEvent() {\n          _classCallCheck(this, DragStopEvent);\n\n          return _super59.apply(this, arguments);\n        }\n\n        return DragStopEvent;\n      }(DragEvent);\n\n      exports.DragStopEvent = DragStopEvent;\n      DragStopEvent.type = 'drag:stop';\n      /***/\n    },\n    /* 66 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Plugins = exports.Sensors = exports.Sortable = exports.Swappable = exports.Droppable = exports.Draggable = exports.BasePlugin = exports.BaseEvent = undefined;\n\n      var _Draggable = __webpack_require__(5);\n\n      Object.defineProperty(exports, 'Draggable', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_Draggable).default;\n        }\n      });\n\n      var _Droppable = __webpack_require__(34);\n\n      Object.defineProperty(exports, 'Droppable', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_Droppable).default;\n        }\n      });\n\n      var _Swappable = __webpack_require__(31);\n\n      Object.defineProperty(exports, 'Swappable', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_Swappable).default;\n        }\n      });\n\n      var _Sortable = __webpack_require__(28);\n\n      Object.defineProperty(exports, 'Sortable', {\n        enumerable: true,\n        get: function get() {\n          return _interopRequireDefault(_Sortable).default;\n        }\n      });\n\n      var _AbstractEvent = __webpack_require__(0);\n\n      var _AbstractEvent2 = _interopRequireDefault(_AbstractEvent);\n\n      var _AbstractPlugin = __webpack_require__(1);\n\n      var _AbstractPlugin2 = _interopRequireDefault(_AbstractPlugin);\n\n      var _Sensors = __webpack_require__(6);\n\n      var Sensors = _interopRequireWildcard(_Sensors);\n\n      var _Plugins = __webpack_require__(25);\n\n      var Plugins = _interopRequireWildcard(_Plugins);\n\n      function _interopRequireWildcard(obj) {\n        if (obj && obj.__esModule) {\n          return obj;\n        } else {\n          var newObj = {};\n\n          if (obj != null) {\n            for (var key in obj) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n          }\n\n          newObj.default = obj;\n          return newObj;\n        }\n      }\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          default: obj\n        };\n      }\n\n      exports.BaseEvent = _AbstractEvent2.default;\n      exports.BasePlugin = _AbstractPlugin2.default;\n      exports.Sensors = Sensors;\n      exports.Plugins = Plugins;\n      /***/\n    }\n    /******/\n    ])\n  );\n});","map":null,"metadata":{},"sourceType":"module"}